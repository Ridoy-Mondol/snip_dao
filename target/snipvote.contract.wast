(module
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $i32_i64_=>_i32 (func (param i32 i64) (result i32)))
 (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))
 (type $i32_i32_i64_i32_=>_i32 (func (param i32 i32 i64 i32) (result i32)))
 (type $i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32)))
 (type $i32_=>_i64 (func (param i32) (result i64)))
 (type $i32_i64_i32_=>_i32 (func (param i32 i64 i32) (result i32)))
 (type $i32_=>_none (func (param i32)))
 (type $i32_i64_=>_none (func (param i32 i64)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $i64_=>_i32 (func (param i64) (result i32)))
 (type $i32_i32_i64_i32_=>_none (func (param i32 i32 i64 i32)))
 (type $i32_i64_i32_=>_none (func (param i32 i64 i32)))
 (type $i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32) (result i32)))
 (type $i32_i32_i32_i64_=>_i32 (func (param i32 i32 i32 i64) (result i32)))
 (type $i32_i32_i64_=>_i32 (func (param i32 i32 i64) (result i32)))
 (type $i64_i64_i64_i64_=>_i32 (func (param i64 i64 i64 i64) (result i32)))
 (type $none_=>_none (func))
 (type $i64_=>_none (func (param i64)))
 (type $i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32)))
 (type $i32_i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32 i32)))
 (type $i32_i32_i32_i32_i32_i32_i64_=>_none (func (param i32 i32 i32 i32 i32 i32 i64)))
 (type $i32_i32_i32_i32_i64_i64_i32_=>_none (func (param i32 i32 i32 i32 i64 i64 i32)))
 (type $i32_i32_i32_i64_=>_none (func (param i32 i32 i32 i64)))
 (type $i32_i32_i64_i64_=>_none (func (param i32 i32 i64 i64)))
 (type $i32_i32_i64_i64_i64_i64_i64_i64_=>_none (func (param i32 i32 i64 i64 i64 i64 i64 i64)))
 (type $i32_i64_i32_i32_=>_none (func (param i32 i64 i32 i32)))
 (type $i32_i64_i32_i64_=>_none (func (param i32 i64 i32 i64)))
 (type $i64_i64_i64_=>_none (func (param i64 i64 i64)))
 (type $i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_i64_=>_i32 (func (param i32 i32 i32 i32 i64) (result i32)))
 (type $i32_i32_i32_i64_i64_=>_i32 (func (param i32 i32 i32 i64 i64) (result i32)))
 (type $i32_i32_i64_i32_i32_i32_=>_i32 (func (param i32 i32 i64 i32 i32 i32) (result i32)))
 (type $i32_i32_i64_i32_i64_=>_i32 (func (param i32 i32 i64 i32 i64) (result i32)))
 (type $i32_i64_i64_i64_i64_i64_i64_=>_i32 (func (param i32 i64 i64 i64 i64 i64 i64) (result i32)))
 (type $i64_i32_i32_i32_=>_i32 (func (param i64 i32 i32 i32) (result i32)))
 (type $i64_i32_i32_i32_i32_i32_i64_=>_i32 (func (param i64 i32 i32 i32 i32 i32 i64) (result i32)))
 (type $i64_i64_=>_i32 (func (param i64 i64) (result i32)))
 (type $i64_i64_i64_i32_i64_=>_i32 (func (param i64 i64 i64 i32 i64) (result i32)))
 (type $i64_i64_i64_i64_i32_=>_i32 (func (param i64 i64 i64 i64 i32) (result i32)))
 (type $i64_i64_i64_i64_i32_i32_=>_i32 (func (param i64 i64 i64 i64 i32 i32) (result i32)))
 (type $none_=>_i64 (func (result i64)))
 (import "env" "memcpy" (func $~lib/as-chain/env/memcpy (param i32 i32 i32) (result i32)))
 (import "env" "eosio_assert" (func $~lib/as-chain/env/eosio_assert (param i32 i32)))
 (import "env" "sha256" (func $~lib/as-chain/env/sha256 (param i32 i32 i32)))
 (import "env" "db_find_i64" (func $~lib/as-chain/env/db_find_i64 (param i64 i64 i64 i64) (result i32)))
 (import "env" "db_get_i64" (func $~lib/as-chain/env/db_get_i64 (param i32 i32 i32) (result i32)))
 (import "env" "current_time" (func $~lib/as-chain/env/current_time (result i64)))
 (import "env" "db_store_i64" (func $~lib/as-chain/env/db_store_i64 (param i64 i64 i64 i64 i32 i32) (result i32)))
 (import "env" "require_auth" (func $~lib/as-chain/env/require_auth (param i64)))
 (import "env" "db_lowerbound_i64" (func $~lib/as-chain/env/db_lowerbound_i64 (param i64 i64 i64 i64) (result i32)))
 (import "env" "db_next_i64" (func $~lib/as-chain/env/db_next_i64 (param i32 i32) (result i32)))
 (import "env" "db_remove_i64" (func $~lib/as-chain/env/db_remove_i64 (param i32)))
 (import "env" "db_update_i64" (func $~lib/as-chain/env/db_update_i64 (param i32 i64 i32 i32)))
 (import "env" "action_data_size" (func $~lib/as-chain/env/action_data_size (result i32)))
 (import "env" "read_action_data" (func $~lib/as-chain/env/read_action_data (param i32 i32) (result i32)))
 (import "env" "db_idx64_store" (func $~lib/as-chain/env/db_idx64_store (param i64 i64 i64 i64 i32) (result i32)))
 (import "env" "db_idx64_find_primary" (func $~lib/as-chain/env/db_idx64_find_primary (param i64 i64 i64 i32 i64) (result i32)))
 (import "env" "db_idx64_remove" (func $~lib/as-chain/env/db_idx64_remove (param i32)))
 (import "env" "db_idx64_update" (func $~lib/as-chain/env/db_idx64_update (param i32 i64 i32)))
 (global $~lib/rt/stub/offset (mut i32) (i32.const 0))
 (global $~lib/as-chain/name/EMPTY_NAME (mut i32) (i32.const 0))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $snipvote.contract/snipvoting i32 (i32.const 8))
 (memory $0 1)
 (data (i32.const 1036) "\1c")
 (data (i32.const 1048) "\03\00\00\00\08\00\00\00\01")
 (data (i32.const 1068) "<")
 (data (i32.const 1084) " \00\00\00.12345abcdefghijklmnopqrstuvwxyz")
 (data (i32.const 1132) ",")
 (data (i32.const 1144) "\04\00\00\00\10\00\00\00@\04\00\00@\04\00\00 \00\00\00 ")
 (data (i32.const 1180) "\dc")
 (data (i32.const 1192) "\01\00\00\00\cc\00\00\00F\00a\00i\00l\00e\00d\00 \00t\00o\00 \00\'\00s\00t\00o\00r\00e\00\'\00 \00v\00a\00l\00u\00e\00 \00a\00s\00 \00i\00t\00 \00a\00l\00r\00e\00a\00d\00y\00 \00e\00x\00i\00s\00t\00s\00,\00 \00p\00l\00e\00a\00s\00e\00 \00u\00s\00e\00 \00\'\00s\00e\00t\00\'\00 \00o\00r\00 \00\'\00u\00p\00d\00a\00t\00e\00\'\00 \00i\00f\00 \00y\00o\00u\00 \00w\00i\00s\00h\00 \00t\00o\00 \00u\00p\00d\00a\00t\00e\00 \00v\00a\00l\00u\00e")
 (data (i32.const 1404) "\dc")
 (data (i32.const 1416) "\01\00\00\00\c0\00\00\00F\00a\00i\00l\00e\00d\00 \00t\00o\00 \00\'\00u\00p\00d\00a\00t\00e\00\'\00 \00v\00a\00l\00u\00e\00 \00a\00s\00 \00i\00t\00e\00m\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00e\00x\00i\00s\00t\00,\00 \00p\00l\00e\00a\00s\00e\00 \00u\00s\00e\00 \00\'\00s\00e\00t\00\'\00 \00o\00r\00 \00\'\00s\00t\00o\00r\00e\00\'\00 \00t\00o\00 \00s\00a\00v\00e\00 \00v\00a\00l\00u\00e\00 \00f\00i\00r\00s\00t")
 (data (i32.const 1628) "\dc")
 (data (i32.const 1640) "\01\00\00\00\c0\00\00\00F\00a\00i\00l\00e\00d\00 \00t\00o\00 \00\'\00r\00e\00m\00o\00v\00e\00\'\00 \00v\00a\00l\00u\00e\00 \00a\00s\00 \00i\00t\00e\00m\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00e\00x\00i\00s\00t\00,\00 \00p\00l\00e\00a\00s\00e\00 \00u\00s\00e\00 \00\'\00s\00e\00t\00\'\00 \00o\00r\00 \00\'\00s\00t\00o\00r\00e\00\'\00 \00t\00o\00 \00s\00a\00v\00e\00 \00v\00a\00l\00u\00e\00 \00f\00i\00r\00s\00t")
 (data (i32.const 1852) "\8c")
 (data (i32.const 1864) "\01\00\00\00t\00\00\00F\00a\00i\00l\00e\00d\00 \00t\00o\00 \00f\00i\00n\00d\00 \00\'\00n\00e\00x\00t\00\'\00 \00v\00a\00l\00u\00e\00 \00a\00s\00 \00c\00u\00r\00r\00e\00n\00t\00 \00i\00t\00e\00m\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00e\00x\00i\00s\00t")
 (data (i32.const 1996) "\8c")
 (data (i32.const 2008) "\01\00\00\00|\00\00\00F\00a\00i\00l\00e\00d\00 \00t\00o\00 \00f\00i\00n\00d\00 \00\'\00p\00r\00e\00v\00i\00o\00u\00s\00\'\00 \00v\00a\00l\00u\00e\00 \00a\00s\00 \00c\00u\00r\00r\00e\00n\00t\00 \00i\00t\00e\00m\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00e\00x\00i\00s\00t")
 (data (i32.const 2140) "|")
 (data (i32.const 2152) "\01\00\00\00f\00\00\00n\00e\00x\00t\00 \00p\00r\00i\00m\00a\00r\00y\00 \00k\00e\00y\00 \00i\00n\00 \00t\00a\00b\00l\00e\00 \00i\00s\00 \00a\00t\00 \00a\00u\00t\00o\00i\00n\00c\00r\00e\00m\00e\00n\00t\00 \00l\00i\00m\00i\00t")
 (data (i32.const 2268) ",")
 (data (i32.const 2280) "\01\00\00\00\10\00\00\00s\00n\00i\00p\00v\00o\00t\00e")
 (data (i32.const 2316) ",")
 (data (i32.const 2328) "\01\00\00\00\16\00\00\00a\00h\00a\00t\00a\00s\00h\00a\00m\00u\00l")
 (data (i32.const 2364) ",")
 (data (i32.const 2376) "\01\00\00\00\18\00\00\00a\00h\00a\00t\00a\00s\00h\00a\00m\00u\00l\001")
 (data (i32.const 2412) "\1c")
 (data (i32.const 2428) "\0c\00\00\00\f0\08\00\00 \t\00\00P\t")
 (data (i32.const 2444) ",")
 (data (i32.const 2456) "\07\00\00\00\10\00\00\00\80\t\00\00\80\t\00\00\0c\00\00\00\03")
 (data (i32.const 2492) "\1c")
 (data (i32.const 2504) "\01")
 (data (i32.const 2524) ",")
 (data (i32.const 2536) "\01\00\00\00\10\00\00\00u\00p\00c\00o\00m\00i\00n\00g")
 (data (i32.const 2572) "\1c")
 (data (i32.const 2604) "\1c")
 (data (i32.const 2636) "\1c")
 (data (i32.const 2648) "\01\00\00\00\0c\00\00\00a\00c\00t\00i\00v\00e")
 (data (i32.const 2668) "\1c")
 (data (i32.const 2700) "\1c")
 (data (i32.const 2732) "\1c")
 (data (i32.const 2764) "\1c")
 (data (i32.const 2796) "\1c")
 (data (i32.const 2828) ",")
 (data (i32.const 2840) "\01\00\00\00\0e\00\00\00p\00e\00n\00d\00i\00n\00g")
 (data (i32.const 2876) "\1c")
 (data (i32.const 2908) "\1c")
 (data (i32.const 2940) "\1c")
 (data (i32.const 2972) "\1c")
 (data (i32.const 3004) "\1c")
 (data (i32.const 3016) "\01\00\00\00\08\00\00\00o\00p\00e\00n")
 (data (i32.const 3036) "\1c")
 (data (i32.const 3068) "\1c")
 (data (i32.const 3100) "\1c")
 (data (i32.const 3132) "\1c")
 (data (i32.const 3164) "\12\10\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f
 (data (i32.const 3708) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\80@\00\04\00\00\00@\01\00\00\00\00\00\00\00\00\a1\90\01")
 (data (i32.const 3794) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff0\04\b0")
 (data (i32.const 3852) "\f8\03")
 (data (i32.const 3879) "\82\00\00\00\00\00\00\fe\ff\ff\ff\ff\bf\b6\00\00\00\00\00\10\00?\00\ff\17\00\00\00\00\01\f8\ff\ff\00\00\01")
 (data (i32.const 3926) "\c0\bf\ff=\00\00\00\80\02\00\00\00\ff\ff\ff\07")
 (data (i32.const 3952) "\c0\ff\01\00\00\00\00\00\00\f8?$\00\00\c0\ff\ff?\00\00\00\00\00\0e")
 (data (i32.const 3990) "\f8\ff\ff\ff\ff\ff\07\00\00\00\00\00\00\14\fe!\fe\00\0c\00\02\00\02\00\00\00\00\00\00\10\1e \00\00\0c\00\00@\06\00\00\00\00\00\00\10\869\02\00\00\00#\00\06\00\00\00\00\00\00\10\be!\00\00\0c\00\00\fc\02\00\00\00\00\00\00\90\1e `\00\0c\00\00\00\04\00\00\00\00\00\00\00\01 \00\00\00\00\00\00\11\00\00\00\00\00\00\c0\c1=`\00\0c\00\00\00\02\00\00\00\00\00\00\90@0\00\00\0c\00\00\00\03\00\00\00\00\00\00\18\1e \00\00\0c\00\00\00\02\00\00\00\00\00\00\00\00\04\\")
 (data (i32.const 4162) "\f2\07\c0\7f")
 (data (i32.const 4178) "\f2\1f@?")
 (data (i32.const 4191) "\03\00\00\a0\02\00\00\00\00\00\00\fe\7f\df\e0\ff\fe\ff\ff\ff\1f@")
 (data (i32.const 4225) "\e0\fdf\00\00\00\c3\01\00\1e\00d \00 ")
 (data (i32.const 4251) "\10")
 (data (i32.const 4263) "\e0")
 (data (i32.const 4286) "\1c\00\00\00\1c\00\00\00\0c\00\00\00\0c\00\00\00\00\00\00\00\b0?@\fe\8f \00\00\00\00\00x\00\00\00\00\00\00\08\00\00\00\00\00\00\00`\00\00\00\00\02")
 (data (i32.const 4352) "\87\01\04\0e")
 (data (i32.const 4382) "\80\t\00\00\00\00\00\00@\7f\e5\1f\f8\9f\00\00\00\00\80\00\ff\ff\01\00\00\00\00\00\00\00\0f\00\00\00\00\00\d0\17\04\00\00\00\00\f8\0f\00\03\00\00\00<;\00\00\00\00\00\00@\a3\03\00\00\00\00\00\00\f0\cf\00\00\00\00\00\00\00\00?")
 (data (i32.const 4470) "\f7\ff\fd!\10\03\00\00\00\00\00\f0\ff\ff\ff\ff\ff\ff\ff\07\00\01\00\00\00\f8\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\fb")
 (data (i32.const 4531) "\a0\03\e0\00\e0\00\e0\00`\00\f8\00\03\90|\00\00\00\00\00\00\df\ff\02\80\00\00\ff\1f\00\00\00\00\00\00\ff\ff\ff\ff\01")
 (data (i32.const 4587) "0")
 (data (i32.const 4601) "\80\03")
 (data (i32.const 4617) "\80\00\80")
 (data (i32.const 4632) "\ff\ff\ff\ff\00\00\00\00\00\80")
 (data (i32.const 4668) " \00\00\00\00<>\08")
 (data (i32.const 4687) "~")
 (data (i32.const 4699) "p\00\00 ")
 (data (i32.const 4763) "?\00\10")
 (data (i32.const 4777) "\80\f7\bf\00\00\00\f0")
 (data (i32.const 4794) "\03\00\ff\ff\ff\ff\03")
 (data (i32.const 4810) "\01\00\00\07")
 (data (i32.const 4827) "\03D\08\00\00`\10")
 (data (i32.const 4852) "0\00\00\00\ff\ff\03\80\00\00\00\00\c0?\00\00\80\ff\03\00\00\00\00\00\07\00\00\00\00\00\c83\00\80\00\00`\00\00\00\00\00\00\00\00~f\00\08\10\00\00\00\00\01\10\00\00\00\00\00\00\9d\c1\02\00\00 \000X")
 (data (i32.const 4935) "\f8\00\0e")
 (data (i32.const 4952) " !\00\00\00\00\00@")
 (data (i32.const 4978) "\fc\ff\03\00\00\00\00\00\00\00\ff\ff\08\00\ff\ff\00\00\00\00$")
 (data (i32.const 5019) "\80\80@\00\04\00\00\00@\01\00\00\00\00\00\01\00\00\00\00\c0\00\00\00\00\00\00\00\00\08\00\00\0e")
 (data (i32.const 5083) " ")
 (data (i32.const 5112) "\01")
 (data (i32.const 5130) "\c0\07")
 (data (i32.const 5148) "n\f0\00\00\00\00\00\87")
 (data (i32.const 5176) "`\00\00\00\00\00\00\00\f0")
 (data (i32.const 5233) "\18")
 (data (i32.const 5252) "\c0\ff\01")
 (data (i32.const 5276) "\02\00\00\00\00\00\00\ff\7f\00\00\00\00\00\00\80\03\00\00\00\00\00x&\00 \00\00\00\00\00\00\07\00\00\00\80\ef\1f\00\00\00\00\00\00\00\08\00\03\00\00\00\00\00\c0\7f\00\9e")
 (data (i32.const 5345) "\80\d3@")
 (data (i32.const 5367) "\80\f8\07\00\00\03\00\00\00\00\00\00\18\01\00\00\00\c0\1f\1f")
 (data (i32.const 5411) "\ff\\\00\00@")
 (data (i32.const 5426) "\f8\85\0d")
 (data (i32.const 5458) "<\b0\01\00\000")
 (data (i32.const 5474) "\f8\a7\01")
 (data (i32.const 5489) "(\bf")
 (data (i32.const 5503) "\e0\bc\0f")
 (data (i32.const 5537) "\80\ff\06")
 (data (i32.const 5571) "X\08")
 (data (i32.const 5590) "\f0\0c\01\00\00\00\fe\07\00\00\00\00\f8y\80\00~\0e\00\00\00\00\00\fc\7f\03")
 (data (i32.const 5634) "\7f\bf")
 (data (i32.const 5646) "\fc\ff\ff\fcm")
 (data (i32.const 5666) "~\b4\bf")
 (data (i32.const 5678) "\a3")
 (data (i32.const 5722) "\18\00\00\00\00\00\00\00\ff\01")
 (data (i32.const 5786) "\1f\00\00\00\00\00\00\00\7f\00\0f")
 (data (i32.const 5829) "\80\00\00\00\00\00\00\00\80\ff\ff\00\00\00\00\00\00\00\00\1b")
 (data (i32.const 5871) "`\0f")
 (data (i32.const 5896) "\80\03\f8\ff\e7\0f\00\00\00<")
 (data (i32.const 5924) "\1c")
 (data (i32.const 5948) "\ff\ff\ff\ff\ff\ff\7f\f8\ff\ff\ff\ff\ff\1f \00\10\00\00\f8\fe\ff")
 (data (i32.const 5980) "\7f\ff\ff\f9\db\07")
 (data (i32.const 6018) "\ff?")
 (data (i32.const 6073) "\f0")
 (data (i32.const 6102) "\7f")
 (data (i32.const 6116) "\f0\0f")
 (data (i32.const 6171) "\f8")
 (data (i32.const 6172) "\12\13\14\15\16\17\10\10\10\10\10\10\10\10\10\10\18\10\10\19\10\10\10\10\10\10\10\10\1a\1b\11\1c\1d\1e\10\10\1f
 (data (i32.const 6716) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\fe\ff\ff\07\fe\ff\ff\07\00\00\00\00\00\04 \04\ff\ff\7f\ff\ff\ff\7f\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\f7\f0\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ef\ff\ff\ff\ff\01\03\00\00\00\1f")
 (data (i32.const 6852) " \00\00\00\00\00\cf\bc@\d7\ff\ff\fb\ff\ff\ff\ff\ff\ff\ff\ff\ff\bf\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\03\fc\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\fe\ff\ff\ff\7f\00\ff\ff\ff\ff\ff\01")
 (data (i32.const 6960) "\ff\ff\ff\ff\bf \ff\ff\ff\ff\ff\e7")
 (data (i32.const 6992) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff??")
 (data (i32.const 7020) "\ff\01\ff\ff\ff\ff\ff\e7\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\ff\ff??\ff\ff\ff\ff??\ff\aa\ff\ff\ff?\ff\ff\ff\ff\ff\ff\df_\dc\1f\cf\0f\ff\1f\dc\1f")
 (data (i32.const 7114) "\02\80\00\00\ff\1f")
 (data (i32.const 7132) "\84\fc/>P\bd\1f\f2\e0C\00\00\ff\ff\ff\ff\18")
 (data (i32.const 7186) "\c0\ff\ff\ff\ff\ff\ff\03\00\00\ff\ff\ff\ff\ff\7f\ff\ff\ff\ff\ff\7f\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\1fx\0c\00\ff\ff\ff\ff\bf ")
 (data (i32.const 7268) "\ff\ff\ff\ff\ff?\00\00\ff\ff\ff?")
 (data (i32.const 7296) "\fc\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ffx\ff\ff\ff\ff\ff\ff\fc\07\00\00\00\00`\07\00\00\00\00\00\00\ff\ff\ff\ff\ff\f7\ff\01\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\7f\00\f8")
 (data (i32.const 7392) "\fe\ff\ff\07\fe\ff\ff\07")
 (data (i32.const 7420) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
 (data (i32.const 7442) "\ff\ff\ff\ff\0f\ff\ff\ff\ff\0f")
 (data (i32.const 7468) "\ff\ff\ff\ff\ff\ff\07\00\ff\ff\ff\ff\ff\ff\07")
 (data (i32.const 7504) "\ff\ff\ff\ff\ff\ff\ff\ff")
 (data (i32.const 7524) "\ff\ff\ff\ff\ff\ff\ff\ff")
 (data (i32.const 7548) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\df\ff\ff\ff\ff\ff\ff\ff\ff\dfd\de\ff\eb\ef\ff\ff\ff\ff\ff\ff\ff\bf\e7\df\df\ff\ff\ff{_\fc\fd\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff?\ff\ff\ff\fd\ff\ff\f7\ff\ff\ff\f7\ff\ff\df\ff\ff\ff\df\ff\ff\7f\ff\ff\ff\7f\ff\ff\ff\fd\ff\ff\ff\fd\ff\ff\f7\0f\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\0f")
 (data (i32.const 7714) "\ff\ff\ff\03\ff\ff\ff\03\ff\ff\ff\03")
 (data (i32.const 7740) "\07\08\t\n\0b\0c\06\06\06\06\06\06\06\06\06\06\0d\06\06\0e\06\06\06\06\06\06\06\06\0fa\06\06\06\06\06\06\06\1b\06\06\06\06\06\06\06\06\06\06\06\1c\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\1d\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\1e\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06")
 (data (i32.const 8363) "$++++++++\01\00TVVVVVVVV")
 (data (i32.const 8402) "\18\00\00\00+++++++\07++[VVVVVVVJVV\051P1P1P1P1P1P1P1P$Py1P1P18P1P1P1P1P1P1P1PN1\02N\0d\0dN\03N\00$n\00N1&nQN$PN9\14\81\1b\1d\1dS1P1P\0d1P1P1P\1bS$P1\02\\{\\{\\{\\{\\{\14y\\{\\{\\-+I\03H\03x\\{\14\00\96\n\01+(\06\06\00*\06**+\07\bb\b5+\1e\00+\07+++\01++++++++++++++++++++++++++++++++\01+++++++++++++++++++++++*+++++++++++++\cdF\cd+\00%+\07\01\06\01UVVVVVUVV\02$\81\81\81\81\81\15\81\81\81\00\00+\00\b2\d1\b2\d1\b2\d1\b2\d1\00\00\cd\cc\01\00\d7\d7\d7\d7\d7\83\81\81\81\81\81\81\81\81\81\81\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\1c\00\00\00\00\001P1P1P1P1P1\02\00\001P1P1P1P1P1P1P1P1PN1P1PN1P1P1P1P1P1P1P1\02\87\a6\87\a6\87\a6\87\a6\87\a6\87\a6\87\a6\87\a6*++++++++++++\00\00\00TVVVVVVVVVVVV")
 (data (i32.const 8911) "TVVVVVVVVVVVV\0c\00\0c*+++++++++++++\07*\01")
 (data (i32.const 8997) "*++++++++++++++++++++++++++VVl\81\15\00++++++++++++++++++++++++++++++++++++++++++\07l\03A++VVVVVVVVVVVVVV,V+++++++++++++++++++++\01")
 (data (i32.const 9156) "\0cl\00\00\00\00\00\06")
 (data (i32.const 9202) "\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%Vz\9e&\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06\01++OVV,+\7fVV9++UVV++OVV,+\7fVV\817u[{\\++OVV\02\ac\04\00\009++UVV++OVV,++VV2\13\81W\00o\81~\c9\d7~-\81\81\0e~9\7foW\00\81\81~\15\00~\03++++++++++++\07+$+\97+++++++++*+++++VVVVV\80\81\81\81\819\bb*++++++++++++++++++++++++++++++++++++++++\01\81\81\81\81\81\81\81\81\81\81\81\81\81\81\81\c9\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\d0\0d\00N1\02\b4\c1\c1\d7\d7$P1P1P1P1P1P1P1P1P1P1P1P1P1P1P1P1P\d7\d7S\c1G\d4\d7\d7\d7\05++++++++++++\07\01\00\01")
 (data (i32.const 9653) "N1P1P1P1P1P1P1P\0d\00\00\00\00\00$P1P1P1P1P")
 (data (i32.const 9718) "+++++++++++y\\{\\{O{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\-++y\14\\{\\-y*\\\'\\{\\{\\{\a4\00\n\b4\\{\\{O\03x8+++++++++++++O-++\01")
 (data (i32.const 9831) "H")
 (data (i32.const 9841) "*++++++++++++++++++++++++++")
 (data (i32.const 9901) "++++++++\07\00HVVVVVVVV\02")
 (data (i32.const 9976) "+++++++++++++UVVVVVVVVVVVV\0e")
 (data (i32.const 10034) "$+++++++++++\07\00VVVVVVVVVVVV")
 (data (i32.const 10104) "$++++++++++++++++\07\00\00\00\00VVVVVVVVVVVVVVVVV")
 (data (i32.const 10201) "*++++++++++VVVVVVVVVV\0e")
 (data (i32.const 10255) "*++++++++++VVVVVVVVVV\0e")
 (data (i32.const 10320) "+++++++++++UVVVVVVVVVV\0e")
 (data (i32.const 10409) "\08\00\00V\01\00\009")
 (data (i32.const 10424) "\01 \00\00\00\e0\ff\ff\00\bf\1d\00\00\e7\02\00\00y\00\00\02$\00\00\01\01\00\00\00\ff\ff\ff\00\00\00\00\01\02\00\00\00\fe\ff\ff\019\ff\ff\00\18\ff\ff\01\87\ff\ff\00\d4\fe\ff\00\c3\00\00\01\d2\00\00\01\ce\00\00\01\cd\00\00\01O\00\00\01\ca\00\00\01\cb\00\00\01\cf\00\00\00a\00\00\01\d3\00\00\01\d1\00\00\00\a3\00\00\01\d5\00\00\00\82\00\00\01\d6\00\00\01\da\00\00\01\d9\00\00\01\db\00\00\008\00\00\03\00\00\00\00\b1\ff\ff\01\9f\ff\ff\01\c8\ff\ff\02($\00\00\00\00\00\01\01\00\00\00\ff\ff\ff\003\ff\ff\00&\ff\ff\01~\ff\ff\01+*\00\01]\ff\ff\01(*\00\00?*\00\01=\ff\ff\01E\00\00\01G\00\00\00\1f*\00\00\1c*\00\00\1e*\00\00.\ff\ff\002\ff\ff\006\ff\ff\005\ff\ff\00O\a5\00\00K\a5\00\001\ff\ff\00(\a5\00\00D\a5\00\00/\ff\ff\00-\ff\ff\00\f7)\00\00A\a5\00\00\fd)\00\00+\ff\ff\00*\ff\ff\00\e7)\00\00C\a5\00\00*\a5\00\00\bb\ff\ff\00\'\ff\ff\00\b9\ff\ff\00%\ff\ff\00\15\a5\00\00\12\a5\00\02$L\00\00\00\00\00\01 \00\00\00\e0\ff\ff\01\01\00\00\00\ff\ff\ff\00T\00\00\01t\00\00\01&\00\00\01%\00\00\01@\00\00\01?\00\00\00\da\ff\ff\00\db\ff\ff\00\e1\ff\ff\00\c0\ff\ff\00\c1\ff\ff\01\08\00\00\00\c2\ff\ff\00\c7\ff\ff\00\d1\ff\ff\00\ca\ff\ff\00\f8\ff\ff\00\aa\ff\ff\00\b0\ff\ff\00\07\00\00\00\8c\ff\ff\01\c4\ff\ff\00\a0\ff\ff\01\f9\ff\ff\02\1ap\00\01\01\00\00\00\ff\ff\ff\01 \00\00\00\e0\ff\ff\01P\00\00\01\0f\00\00\00\f1\ff\ff\00\00\00\00\010\00\00\00\d0\ff\ff\01\01\00\00\00\ff\ff\ff\00\00\00\00\00\c0\0b\00\01`\1c\00\00\00\00\00\01\d0\97\00\01\08\00\00\00\f8\ff\ff\02\05\8a\00\00\00\00\00\01@\f4\ff\00\9e\e7\ff\00\c2\89\00\00\db\e7\ff\00\92\e7\ff\00\93\e7\ff\00\9c\e7\ff\00\9d\e7\ff\00\a4\e7\ff\00\00\00\00\008\8a\00\00\04\8a\00\00\e6\0e\00\01\01\00\00\00\ff\ff\ff\00\00\00\00\00\c5\ff\ff\01A\e2\ff\02\1d\8f\00\00\08\00\00\01\f8\ff\ff\00\00\00\00\00V\00\00\01\aa\ff\ff\00J\00\00\00d\00\00\00\80\00\00\00p\00\00\00~\00\00\00\t\00\00\01\b6\ff\ff\01\f7\ff\ff\00\db\e3\ff\01\9c\ff\ff\01\90\ff\ff\01\80\ff\ff\01\82\ff\ff\02\05\ac\00\00\00\00\00\01\10\00\00\00\f0\ff\ff\01\1c\00\00\01\01\00\00\01\a3\e2\ff\01A\df\ff\01\ba\df\ff\00\e4\ff\ff\02\0b\b1\00\01\01\00\00\00\ff\ff\ff\010\00\00\00\d0\ff\ff\00\00\00\00\01\t\d6\ff\01\1a\f1\ff\01\19\d6\ff\00\d5\d5\ff\00\d8\d5\ff\01\e4\d5\ff\01\03\d6\ff\01\e1\d5\ff\01\e2\d5\ff\01\c1\d5\ff\00\00\00\00\00\a0\e3\ff\00\00\00\00\01\01\00\00\00\ff\ff\ff\02\0c\bc\00\00\00\00\00\01\01\00\00\00\ff\ff\ff\01\bcZ\ff\01\a0\03\00\01\fcu\ff\01\d8Z\ff\000\00\00\01\b1Z\ff\01\b5Z\ff\01\bfZ\ff\01\eeZ\ff\01\d6Z\ff\01\ebZ\ff\01\d0\ff\ff\01\bdZ\ff\01\c8u\ff\00\00\00\00\000h\ff\00`\fc\ff\00\00\00\00\01 \00\00\00\e0\ff\ff\00\00\00\00\01(\00\00\00\d8\ff\ff\00\00\00\00\01@\00\00\00\c0\ff\ff\00\00\00\00\01 \00\00\00\e0\ff\ff\00\00\00\00\01 \00\00\00\e0\ff\ff\00\00\00\00\01\"\00\00\00\de\ff\ff")
 (data (i32.const 11381) "\06\'Qow")
 (data (i32.const 11396) "|\00\00\7f\00\00\00\00\00\00\00\00\83\8e\92\97\00\aa")
 (data (i32.const 11424) "\b4\c4")
 (data (i32.const 11546) "\c6\c9\00\00\00\db")
 (data (i32.const 11635) "\de\00\00\00\00\e1\00\00\00\00\00\00\00\e4")
 (data (i32.const 11660) "\e7")
 (data (i32.const 11746) "\ea")
 (data (i32.const 11869) "\ed")
 (data (i32.const 11892) "0\0c1\0dx\0e\7f\0f\80\10\81\11\86\12\89\13\8a\13\8e\14\8f\15\90\16\93\13\94\17\95\18\96\19\97\1a\9a\1b\9c\19\9d\1c\9e\1d\9f\1e\a6\1f\a9\1f\ae\1f\b1 \b2 \b7!\bf\"\c5#\c8#\cb#\dd$\f2#\f6%\f7& -:.=/>0?1@1C2D3E4P5Q6R7S8T9Y:[;\\<a=c>e?f@hAiBj@kClDoBqErFuG}H\82I\87J\89K\8aL\8bL\8cM\92N\9dO\9ePEW{\1d|\1d}\1d\7fX\86Y\88Z\89Z\8aZ\8c[\8e\\\8f\\\ac]\ad^\ae^\af^\c2_\cc`\cda\cea\cfb\d0c\d1d\d5e\d6f\d7g\f0h\f1i\f2j\f3k\f4l\f5m\f9n\fd-\fe-\ff-PiQiRiSiTiUiViWiXiYiZi[i\\i]i^i_i\82\00\83\00\84\00\85\00\86\00\87\00\88\00\89\00\c0u\cfv\80\89\81\8a\82\8b\85\8c\86\8dp\9dq\9dv\9ew\9ex\9fy\9fz\a0{\a0|\a1}\a1\b3\a2\ba\a3\bb\a3\bc\a4\be\a5\c3\a2\cc\a4\da\a6\db\a6\e5j\ea\a7\eb\a7\ecn\f3\a2\f8\a8\f9\a8\fa\a9\fb\a9\fc\a4&\b0*\b1+\b2N\b3\84\08b\bac\bbd\bce\bdf\bem\bfn\c0o\c1p\c2~\c3\7f\c3}\cf\8d\d0\94\d1\ab\d2\ac\d3\ad\d4\b0\d5\b1\d6\b2\d7\c4\d8\c5\d9\c6\da")
 (data (i32.const 12300) "<")
 (data (i32.const 12312) "\01\00\00\00&\00\00\00b\00a\00d\00 \00c\00h\00e\00c\00k\00s\00u\00m\00 \00l\00e\00n\00g\00t\00h")
 (data (i32.const 12364) "<")
 (data (i32.const 12376) "\01\00\00\00\"\00\00\00b\00a\00d\00 \00a\00s\00s\00i\00g\00n\00 \00l\00e\00n\00g\00t\00h")
 (data (i32.const 12428) "\\")
 (data (i32.const 12440) "\01\00\00\00>\00\00\00D\00e\00c\00o\00d\00e\00r\00.\00i\00n\00c\00P\00o\00s\00:\00 \00b\00u\00f\00f\00e\00r\00 \00o\00v\00e\00r\00f\00l\00o\00w")
 (data (i32.const 12524) "\\")
 (data (i32.const 12536) "\01\00\00\00L\00\00\00E\00l\00e\00c\00t\00i\00o\00n\00 \00w\00i\00t\00h\00 \00t\00h\00i\00s\00 \00n\00a\00m\00e\00 \00a\00l\00r\00e\00a\00d\00y\00 \00e\00x\00i\00s\00t\00s")
 (data (i32.const 12620) "l")
 (data (i32.const 12632) "\01\00\00\00Z\00\00\00R\00e\00g\00i\00s\00t\00r\00a\00t\00i\00o\00n\00 \00s\00t\00a\00r\00t\00 \00t\00i\00m\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00i\00n\00 \00t\00h\00e\00 \00f\00u\00t\00u\00r\00e")
 (data (i32.const 12732) "l")
 (data (i32.const 12744) "\01\00\00\00V\00\00\00R\00e\00g\00i\00s\00t\00r\00a\00t\00i\00o\00n\00 \00e\00n\00d\00 \00t\00i\00m\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00i\00n\00 \00t\00h\00e\00 \00f\00u\00t\00u\00r\00e")
 (data (i32.const 12844) "\8c")
 (data (i32.const 12856) "\01\00\00\00x\00\00\00R\00e\00g\00i\00s\00t\00r\00a\00t\00i\00o\00n\00 \00s\00t\00a\00r\00t\00 \00t\00i\00m\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00f\00o\00r\00e\00 \00r\00e\00g\00i\00s\00t\00r\00a\00t\00i\00o\00n\00 \00e\00n\00d\00 \00t\00i\00m\00e")
 (data (i32.const 12988) "l")
 (data (i32.const 13000) "\01\00\00\00V\00\00\00E\00l\00e\00c\00t\00i\00o\00n\00 \00s\00t\00a\00r\00t\00 \00t\00i\00m\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00f\00o\00r\00e\00 \00e\00n\00d\00 \00t\00i\00m\00e")
 (data (i32.const 13100) "l")
 (data (i32.const 13112) "\01\00\00\00X\00\00\00R\00e\00g\00i\00s\00t\00r\00a\00t\00i\00o\00n\00 \00m\00u\00s\00t\00 \00e\00n\00d\00 \00b\00e\00f\00o\00r\00e\00 \00e\00l\00e\00c\00t\00i\00o\00n\00 \00s\00t\00a\00r\00t\00s")
 (data (i32.const 13212) "L")
 (data (i32.const 13224) "\01\00\00\00.\00\00\00i\00n\00c\00P\00o\00s\00:\00 \00b\00u\00f\00f\00e\00r\00 \00o\00v\00e\00r\00f\00l\00o\00w")
 (data (i32.const 13292) "L")
 (data (i32.const 13304) "\01\00\00\002\00\00\00c\00h\00e\00c\00k\00P\00o\00s\00:\00 \00b\00u\00f\00f\00e\00r\00 \00o\00v\00e\00r\00f\00l\00o\00w")
 (data (i32.const 13372) "<")
 (data (i32.const 13384) "\01\00\00\00&\00\00\00n\00o\00 \00s\00e\00c\00o\00n\00d\00a\00r\00y\00 \00v\00a\00l\00u\00e\00!")
 (data (i32.const 13436) "L")
 (data (i32.const 13448) "\01\00\00\000\00\00\00p\00r\00i\00m\00a\00r\00y\00 \00v\00a\00l\00u\00e\00 \00n\00o\00t\00 \00f\00o\00u\00n\00d\00!")
 (data (i32.const 13516) "<")
 (data (i32.const 13528) "\01\00\00\00$\00\00\00E\00l\00e\00c\00t\00i\00o\00n\00 \00n\00o\00t\00 \00f\00o\00u\00n\00d")
 (data (i32.const 13580) "\\")
 (data (i32.const 13592) "\01\00\00\00>\00\00\00R\00e\00g\00i\00s\00t\00r\00a\00t\00i\00o\00n\00 \00i\00s\00 \00n\00o\00t\00 \00s\00t\00a\00r\00t\00e\00d\00 \00y\00e\00t")
 (data (i32.const 13676) "L")
 (data (i32.const 13688) "\01\00\00\00:\00\00\00R\00e\00g\00i\00s\00t\00r\00a\00t\00i\00o\00n\00 \00p\00e\00r\00i\00o\00d\00 \00i\00s\00 \00c\00l\00o\00s\00e\00d")
 (data (i32.const 13756) ",")
 (data (i32.const 13768) "\01\00\00\00\10\00\00\00M\00i\00n\00i\00m\00u\00m\00 ")
 (data (i32.const 13804) "l")
 (data (i32.const 13816) "\01\00\00\00V\00\00\00 \00t\00o\00k\00e\00n\00s\00 \00r\00e\00q\00u\00i\00r\00e\00d\00 \00t\00o\00 \00r\00e\00g\00i\00s\00t\00e\00r\00 \00a\00s\00 \00a\00 \00c\00a\00n\00d\00i\00d\00a\00t\00e")
 (data (i32.const 13916) "\1c")
 (data (i32.const 13928) "b\00\00\00\0c\00\00\00\d05\00\00\00\00\00\00\006")
 (data (i32.const 13948) "\1c")
 (data (i32.const 13960) "\01\00\00\00\02\00\00\000")
 (data (i32.const 13980) "\\")
 (data (i32.const 13992) "\01\00\00\00H\00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z")
 (data (i32.const 14076) "<")
 (data (i32.const 14088) "\01\00\00\00\1e\00\00\00u\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00n\00u\00l\00l")
 (data (i32.const 14140) "\1c")
 (data (i32.const 14152) "b\00\00\00\0c\00\00\00\d05\00\00\00\00\00\00\006")
 (data (i32.const 14172) "\\")
 (data (i32.const 14184) "\01\00\00\00>\00\00\00C\00a\00n\00d\00i\00d\00a\00t\00e\00 \00i\00s\00 \00a\00l\00r\00e\00a\00d\00y\00 \00r\00e\00g\00i\00s\00t\00e\00r\00e\00d")
 (data (i32.const 14268) "<")
 (data (i32.const 14280) "\01\00\00\00&\00\00\00u\00p\00d\00a\00t\00e\00:\00b\00a\00d\00 \00i\00t\00e\00r\00a\00t\00o\00r")
 (data (i32.const 14332) "L")
 (data (i32.const 14344) "\01\00\00\00:\00\00\00g\00e\00t\00 \00p\00r\00i\00m\00a\00r\00y\00:\00 \00i\00n\00v\00a\00l\00i\00d\00 \00i\00t\00e\00r\00a\00t\00o\00r")
 (data (i32.const 14412) "l")
 (data (i32.const 14424) "\01\00\00\00V\00\00\00p\00r\00i\00m\00a\00r\00y\00 \00k\00e\00y\00 \00c\00a\00n\00\'\00t\00 \00b\00e\00 \00c\00h\00a\00n\00g\00e\00d\00 \00d\00u\00r\00i\00n\00g\00 \00u\00p\00d\00a\00t\00e\00!")
 (data (i32.const 14524) "L")
 (data (i32.const 14536) "\01\00\00\006\00\00\00C\00a\00n\00d\00i\00d\00a\00t\00e\00 \00i\00s\00 \00n\00o\00t\00 \00r\00e\00g\00i\00s\00t\00e\00r\00e\00d")
 (data (i32.const 14604) "l")
 (data (i32.const 14616) "\01\00\00\00P\00\00\00C\00a\00n\00n\00o\00t\00 \00w\00i\00t\00h\00d\00r\00a\00w\00 \00a\00f\00t\00e\00r\00 \00v\00o\00t\00i\00n\00g\00 \00h\00a\00s\00 \00s\00t\00a\00r\00t\00e\00d")
 (data (i32.const 14716) "\1c")
 (data (i32.const 14748) "\\")
 (data (i32.const 14760) "\01\00\00\00B\00\00\00V\00o\00t\00i\00n\00g\00 \00p\00e\00r\00i\00o\00d\00 \00h\00a\00s\00 \00n\00o\00t\00 \00s\00t\00a\00r\00t\00e\00d\00 \00y\00e\00t")
 (data (i32.const 14844) "L")
 (data (i32.const 14856) "\01\00\00\00.\00\00\00V\00o\00t\00i\00n\00g\00 \00p\00e\00r\00i\00o\00d\00 \00i\00s\00 \00c\00l\00o\00s\00e\00d")
 (data (i32.const 14924) "l")
 (data (i32.const 14936) "\01\00\00\00N\00\00\00Y\00o\00u\00 \00h\00a\00v\00e\00 \00a\00l\00r\00e\00a\00d\00y\00 \00v\00o\00t\00e\00d\00 \00i\00n\00 \00t\00h\00i\00s\00 \00e\00l\00e\00c\00t\00i\00o\00n")
 (data (i32.const 15036) "l")
 (data (i32.const 15048) "\01\00\00\00R\00\00\00 \00t\00o\00k\00e\00n\00s\00 \00r\00e\00q\00u\00i\00r\00e\00d\00 \00t\00o\00 \00p\00a\00r\00t\00i\00c\00i\00p\00a\00t\00e\00 \00i\00n\00 \00v\00o\00t\00i\00n\00g")
 (data (i32.const 15148) "\1c")
 (data (i32.const 15160) "b\00\00\00\0c\00\00\00\d05\00\00\00\00\00\00\d0:")
 (data (i32.const 15180) "\1c")
 (data (i32.const 15192) "b\00\00\00\0c\00\00\00\d05\00\00\00\00\00\00\d0:")
 (data (i32.const 15212) "<")
 (data (i32.const 15224) "\01\00\00\00&\00\00\00C\00a\00n\00d\00i\00d\00a\00t\00e\00 \00n\00o\00t\00 \00f\00o\00u\00n\00d")
 (data (i32.const 15276) ",")
 (data (i32.const 15288) "\01\00\00\00\0e\00\00\00o\00n\00g\00o\00i\00n\00g")
 (data (i32.const 15324) "l")
 (data (i32.const 15336) "\01\00\00\00Z\00\00\00Y\00o\00u\00 \00a\00r\00e\00 \00n\00o\00t\00 \00a\00u\00t\00h\00o\00r\00i\00z\00e\00d\00 \00t\00o\00 \00p\00e\00r\00f\00o\00r\00m\00 \00t\00h\00i\00s\00 \00a\00c\00t\00i\00o\00n")
 (data (i32.const 15436) "L")
 (data (i32.const 15448) "\01\00\00\002\00\00\00E\00l\00e\00c\00t\00i\00o\00n\00 \00i\00s\00 \00s\00t\00i\00l\00l\00 \00o\00n\00g\00o\00i\00n\00g")
 (data (i32.const 15516) ",")
 (data (i32.const 15528) "\01\00\00\00\0e\00\00\00e\00x\00p\00i\00r\00e\00d")
 (data (i32.const 15564) "\1c")
 (data (i32.const 15596) "\1c")
 (data (i32.const 15628) "<")
 (data (i32.const 15640) "\01\00\00\00(\00\00\00N\00o\00 \00c\00a\00n\00d\00i\00d\00a\00t\00e\00s\00 \00f\00o\00u\00n\00d\00.")
 (data (i32.const 15692) "\1c")
 (data (i32.const 15704) "d\00\00\00\08\00\00\00\02")
 (data (i32.const 15724) "<")
 (data (i32.const 15736) "\01\00\00\00\"\00\00\00N\00o\00 \00w\00i\00n\00n\00e\00r\00s\00 \00f\00o\00u\00n\00d\00.")
 (data (i32.const 15788) ",")
 (data (i32.const 15800) "\01\00\00\00\10\00\00\00f\00o\00u\00n\00d\00e\00r\001")
 (data (i32.const 15836) ",")
 (data (i32.const 15848) "\01\00\00\00\10\00\00\00F\00o\00u\00n\00d\00e\00r\001")
 (data (i32.const 15884) ",")
 (data (i32.const 15896) "\01\00\00\00\10\00\00\00f\00o\00u\00n\00d\00e\00r\002")
 (data (i32.const 15932) ",")
 (data (i32.const 15944) "\01\00\00\00\10\00\00\00F\00o\00u\00n\00d\00e\00r\002")
 (data (i32.const 15980) "\1c")
 (data (i32.const 15992) "\01\00\00\00\n\00\00\00e\00n\00d\00e\00d")
 (data (i32.const 16012) "L")
 (data (i32.const 16024) "\01\00\00\000\00\00\00C\00o\00u\00n\00c\00i\00l\00 \00m\00e\00m\00b\00e\00r\00 \00n\00o\00t\00 \00f\00o\00u\00n\00d")
 (data (i32.const 16092) "\\")
 (data (i32.const 16104) "\01\00\00\00D\00\00\00F\00o\00u\00n\00d\00i\00n\00g\00 \00m\00e\00m\00b\00e\00r\00s\00 \00c\00a\00n\00\'\00t\00 \00b\00e\00 \00r\00e\00p\00l\00a\00c\00e\00d")
 (data (i32.const 16188) "L")
 (data (i32.const 16200) "\01\00\00\006\00\00\00R\00e\00c\00a\00l\00l\00 \00v\00o\00t\00e\00 \00a\00l\00r\00e\00a\00d\00y\00 \00c\00r\00e\00a\00t\00e\00d")
 (data (i32.const 16268) "\\")
 (data (i32.const 16280) "\01\00\00\00J\00\00\00V\00o\00t\00e\00 \00s\00t\00a\00r\00t\00 \00t\00i\00m\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00i\00n\00 \00t\00h\00e\00 \00f\00u\00t\00u\00r\00e")
 (data (i32.const 16364) "\\")
 (data (i32.const 16376) "\01\00\00\00F\00\00\00V\00o\00t\00e\00 \00e\00n\00d\00 \00t\00i\00m\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00i\00n\00 \00t\00h\00e\00 \00f\00u\00t\00u\00r\00e")
 (data (i32.const 16460) "\\")
 (data (i32.const 16472) "\01\00\00\00D\00\00\00S\00t\00a\00r\00t\00 \00t\00i\00m\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00f\00o\00r\00e\00 \00e\00n\00d\00 \00t\00i\00m\00e")
 (data (i32.const 16556) "L")
 (data (i32.const 16568) "\01\00\00\006\00\00\00E\00l\00e\00c\00t\00i\00o\00n\00 \00n\00a\00m\00e\00s\00 \00d\00o\00 \00n\00o\00t\00 \00m\00a\00t\00c\00h")
 (data (i32.const 16636) "\1c")
 (data (i32.const 16648) "b\00\00\00\0c\00\00\00\d05\00\00\00\00\00\00\d0:")
 (data (i32.const 16668) "\1c")
 (data (i32.const 16680) "b\00\00\00\0c\00\00\00\d05\00\00\00\00\00\00\d0:")
 (data (i32.const 16700) "l")
 (data (i32.const 16712) "\01\00\00\00N\00\00\00R\00e\00c\00a\00l\00l\00 \00v\00o\00t\00e\00 \00n\00o\00t\00 \00s\00t\00a\00r\00t\00e\00d\00 \00f\00o\00r\00 \00t\00h\00i\00s\00 \00m\00e\00m\00b\00e\00r")
 (data (i32.const 16812) "L")
 (data (i32.const 16824) "\01\00\00\00.\00\00\00V\00o\00t\00i\00n\00g\00 \00p\00e\00r\00i\00o\00d\00 \00h\00a\00s\00 \00e\00n\00d\00e\00d")
 (data (i32.const 16892) "l")
 (data (i32.const 16904) "\01\00\00\00\\\00\00\00Y\00o\00u\00 \00h\00a\00v\00e\00 \00a\00l\00r\00e\00a\00d\00y\00 \00v\00o\00t\00e\00d\00 \00i\00n\00 \00t\00h\00i\00s\00 \00r\00e\00c\00a\00l\00l\00 \00e\00l\00e\00c\00t\00i\00o\00n")
 (data (i32.const 17004) "\1c")
 (data (i32.const 17036) "l")
 (data (i32.const 17048) "\01\00\00\00N\00\00\00N\00o\00 \00r\00e\00c\00a\00l\00l\00 \00v\00o\00t\00e\00s\00 \00f\00o\00u\00n\00d\00 \00f\00o\00r\00 \00t\00h\00i\00s\00 \00e\00l\00e\00c\00t\00i\00o\00n")
 (data (i32.const 17148) "\\")
 (data (i32.const 17160) "\01\00\00\00L\00\00\00R\00e\00c\00a\00l\00l\00 \00v\00o\00t\00i\00n\00g\00 \00p\00e\00r\00i\00o\00d\00 \00h\00a\00s\00 \00n\00o\00t\00 \00e\00n\00d\00e\00d\00 \00y\00e\00t")
 (data (i32.const 17244) "l")
 (data (i32.const 17256) "\01\00\00\00P\00\00\00R\00e\00c\00a\00l\00l\00 \00v\00o\00t\00i\00n\00g\00 \00p\00e\00r\00i\00o\00d\00 \00h\00a\00s\00 \00n\00o\00t\00 \00s\00t\00a\00r\00t\00e\00d\00 \00y\00e\00t")
 (data (i32.const 17356) "l")
 (data (i32.const 17368) "\01\00\00\00\\\00\00\00N\00o\00t\00 \00e\00n\00o\00u\00g\00h\00 \00v\00o\00t\00e\00s\00 \00t\00o\00 \00r\00e\00p\00l\00a\00c\00e\00 \00t\00h\00e\00 \00c\00o\00u\00n\00c\00i\00l\00 \00m\00e\00m\00b\00e\00r")
 (data (i32.const 17468) "\\")
 (data (i32.const 17480) "\01\00\00\00F\00\00\00C\00o\00u\00n\00c\00i\00l\00 \00m\00e\00m\00b\00e\00r\00 \00n\00o\00t\00 \00f\00o\00u\00n\00d\00 \00f\00o\00r\00 \00r\00e\00c\00a\00l\00l")
 (data (i32.const 17564) "\1c")
 (data (i32.const 17596) "\\")
 (data (i32.const 17608) "\01\00\00\00J\00\00\00N\00o\00 \00c\00a\00n\00d\00i\00d\00a\00t\00e\00s\00 \00f\00o\00u\00n\00d\00 \00f\00o\00r\00 \00t\00h\00i\00s\00 \00e\00l\00e\00c\00t\00i\00o\00n")
 (data (i32.const 17692) "\8c")
 (data (i32.const 17704) "\01\00\00\00p\00\00\00N\00o\00 \00v\00a\00l\00i\00d\00 \00c\00a\00n\00d\00i\00d\00a\00t\00e\00s\00 \00f\00o\00u\00n\00d\00 \00t\00o\00 \00r\00e\00p\00l\00a\00c\00e\00 \00t\00h\00e\00 \00r\00e\00c\00a\00l\00l\00e\00d\00 \00m\00e\00m\00b\00e\00r")
 (data (i32.const 17836) "L")
 (data (i32.const 17848) "\01\00\00\002\00\00\00C\00a\00n\00d\00i\00d\00a\00t\00e\00 \00a\00l\00r\00e\00a\00d\00y\00 \00a\00p\00p\00l\00i\00e\00d")
 (data (i32.const 17916) "L")
 (data (i32.const 17928) "\01\00\00\00:\00\00\00O\00n\00l\00y\00 \00c\00o\00u\00n\00c\00i\00l\00 \00m\00e\00m\00b\00e\00r\00s\00 \00c\00a\00n\00 \00v\00o\00t\00e")
 (data (i32.const 17996) "l")
 (data (i32.const 18008) "\01\00\00\00R\00\00\00Y\00o\00u\00 \00h\00a\00v\00e\00 \00a\00l\00r\00e\00a\00d\00y\00 \00v\00o\00t\00e\00d\00 \00f\00o\00r\00 \00t\00h\00i\00s\00 \00c\00a\00n\00d\00i\00d\00a\00t\00e")
 (data (i32.const 18108) "\\")
 (data (i32.const 18120) "\01\00\00\00F\00\00\00V\00o\00t\00i\00n\00g\00 \00h\00a\00s\00 \00e\00n\00d\00e\00d\00 \00f\00o\00r\00 \00t\00h\00i\00s\00 \00c\00a\00n\00d\00i\00d\00a\00t\00e")
 (data (i32.const 18204) ",")
 (data (i32.const 18216) "\01\00\00\00\0e\00\00\00a\00p\00p\00r\00o\00v\00e")
 (data (i32.const 18252) "\1c")
 (data (i32.const 18264) "\01\00\00\00\0c\00\00\00r\00e\00j\00e\00c\00t")
 (data (i32.const 18284) "\\")
 (data (i32.const 18296) "\01\00\00\00D\00\00\00V\00o\00t\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00\'\00a\00p\00p\00r\00o\00v\00e\00\'\00 \00o\00r\00 \00\'\00r\00e\00j\00e\00c\00t\00\'")
 (data (i32.const 18380) ",")
 (data (i32.const 18392) "\01\00\00\00\10\00\00\00a\00p\00p\00r\00o\00v\00e\00d")
 (data (i32.const 18428) ",")
 (data (i32.const 18440) "\01\00\00\00\10\00\00\00r\00e\00j\00e\00c\00t\00e\00d")
 (data (i32.const 18476) "l")
 (data (i32.const 18488) "\01\00\00\00R\00\00\00O\00n\00l\00y\00 \00c\00o\00u\00n\00c\00i\00l\00 \00m\00e\00m\00b\00e\00r\00s\00 \00c\00a\00n\00 \00r\00e\00c\00a\00l\00l\00 \00m\00o\00d\00e\00r\00a\00t\00o\00r")
 (data (i32.const 18588) "<")
 (data (i32.const 18600) "\01\00\00\00&\00\00\00M\00o\00d\00e\00r\00a\00t\00o\00r\00 \00n\00o\00t\00 \00f\00o\00u\00n\00d")
 (data (i32.const 18652) "\1c")
 (data (i32.const 18684) "\1c")
 (data (i32.const 18696) "\01\00\00\00\0c\00\00\00f\00a\00i\00l\00e\00d")
 (data (i32.const 18716) "\ac")
 (data (i32.const 18728) "\01\00\00\00\9a\00\00\00C\00a\00n\00n\00o\00t\00 \00c\00r\00e\00a\00t\00e\00 \00a\00 \00n\00e\00w\00 \00r\00e\00c\00a\00l\00l\00 \00w\00h\00i\00l\00e\00 \00a\00n\00o\00t\00h\00e\00r\00 \00i\00s\00 \00i\00n\00 \00p\00r\00o\00g\00r\00e\00s\00s\00 \00o\00r\00 \00a\00l\00r\00e\00a\00d\00y\00 \00c\00o\00m\00p\00l\00e\00t\00e\00d\00.")
 (data (i32.const 18892) ",")
 (data (i32.const 18904) "\01\00\00\00\1a\00\00\00b\00a\00d\00 \00d\00b\00 \00i\00n\00d\00e\00x\00!")
 (data (i32.const 18940) "l")
 (data (i32.const 18952) "\01\00\00\00P\00\00\00R\00e\00c\00a\00l\00l\00 \00v\00o\00t\00e\00 \00n\00o\00t\00 \00f\00o\00u\00n\00d\00 \00f\00o\00r\00 \00t\00h\00i\00s\00 \00m\00o\00d\00e\00r\00a\00t\00o\00r")
 (data (i32.const 19052) "\\")
 (data (i32.const 19064) "\01\00\00\00H\00\00\00T\00h\00i\00s\00 \00r\00e\00c\00a\00l\00l\00 \00v\00o\00t\00e\00 \00i\00s\00 \00n\00o\00 \00l\00o\00n\00g\00e\00r\00 \00a\00c\00t\00i\00v\00e")
 (data (i32.const 19148) "\\")
 (data (i32.const 19160) "\01\00\00\00J\00\00\00Y\00o\00u\00 \00h\00a\00v\00e\00 \00a\00l\00r\00e\00a\00d\00y\00 \00v\00o\00t\00e\00d\00 \00i\00n\00 \00t\00h\00i\00s\00 \00r\00e\00c\00a\00l\00l")
 (data (i32.const 19244) "\1c")
 (data (i32.const 19256) "\01\00\00\00\06\00\00\00y\00e\00s")
 (data (i32.const 19276) "\1c")
 (data (i32.const 19288) "\01\00\00\00\04\00\00\00n\00o")
 (data (i32.const 19308) "L")
 (data (i32.const 19320) "\01\00\00\004\00\00\00V\00o\00t\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00\'\00y\00e\00s\00\'\00 \00o\00r\00 \00\'\00n\00o\00\'")
 (data (i32.const 19388) ",")
 (data (i32.const 19400) "\01\00\00\00\0e\00\00\00r\00e\00m\00o\00v\00e\00d")
 (data (i32.const 19436) "\\")
 (data (i32.const 19448) "\01\00\00\00F\00\00\00 \00t\00o\00k\00e\00n\00s\00 \00r\00e\00q\00u\00i\00r\00e\00d\00 \00t\00o\00 \00s\00u\00b\00m\00i\00t\00 \00p\00r\00o\00p\00o\00s\00a\00l")
 (data (i32.const 19532) "\1c")
 (data (i32.const 19544) "b\00\00\00\0c\00\00\00\d05\00\00\00\00\00\00\00L")
 (data (i32.const 19564) "\1c")
 (data (i32.const 19576) "b\00\00\00\0c\00\00\00\d05\00\00\00\00\00\00\00L")
 (data (i32.const 19596) "L")
 (data (i32.const 19608) "\01\00\00\00<\00\00\00D\00e\00a\00d\00l\00i\00n\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00i\00n\00 \00t\00h\00e\00 \00f\00u\00t\00u\00r\00e")
 (data (i32.const 19676) "<")
 (data (i32.const 19688) "\01\00\00\00$\00\00\00P\00r\00o\00p\00o\00s\00a\00l\00 \00n\00o\00t\00 \00f\00o\00u\00n\00d")
 (data (i32.const 19740) "\\")
 (data (i32.const 19752) "\01\00\00\00H\00\00\00 \00t\00o\00k\00e\00n\00s\00 \00r\00e\00q\00u\00i\00r\00e\00d\00 \00t\00o\00 \00v\00o\00t\00e\00 \00i\00n\00 \00p\00r\00o\00p\00o\00s\00a\00l")
 (data (i32.const 19836) "\1c")
 (data (i32.const 19848) "b\00\00\00\0c\00\00\00\d05\00\00\00\00\00\000M")
 (data (i32.const 19868) "\1c")
 (data (i32.const 19880) "b\00\00\00\0c\00\00\00\d05\00\00\00\00\00\000M")
 (data (i32.const 19900) "L")
 (data (i32.const 19912) "\01\00\00\004\00\00\00V\00o\00t\00i\00n\00g\00 \00d\00e\00a\00d\00l\00i\00n\00e\00 \00h\00a\00s\00 \00p\00a\00s\00s\00e\00d")
 (data (i32.const 19980) "\\")
 (data (i32.const 19992) "\01\00\00\00D\00\00\00Y\00o\00u\00 \00a\00l\00r\00e\00a\00d\00y\00 \00v\00o\00t\00e\00d\00 \00i\00n\00 \00t\00h\00i\00s\00 \00p\00r\00o\00p\00o\00s\00a\00l")
 (data (i32.const 20076) "L")
 (data (i32.const 20088) "\01\00\00\00.\00\00\00P\00r\00o\00p\00o\00s\00a\00l\00 \00a\00l\00r\00e\00a\00d\00y\00 \00c\00l\00o\00s\00e\00d")
 (data (i32.const 20156) "<")
 (data (i32.const 20168) "\01\00\00\00\1e\00\00\00V\00o\00t\00e\00 \00s\00t\00i\00l\00l\00 \00o\00p\00e\00n")
 (data (i32.const 20220) "L")
 (data (i32.const 20232) "\01\00\00\002\00\00\00P\00r\00o\00p\00o\00s\00a\00l\00 \00c\00o\00n\00f\00i\00g\00 \00n\00o\00t\00 \00f\00o\00u\00n\00d")
 (data (i32.const 20300) "L")
 (data (i32.const 20312) "\01\00\00\000\00\00\00N\00o\00 \00e\00l\00i\00g\00i\00b\00l\00e\00 \00v\00o\00t\00e\00r\00s\00 \00f\00o\00u\00n\00d")
 (data (i32.const 20380) "\1c")
 (data (i32.const 20392) "\01\00\00\00\0c\00\00\00p\00a\00s\00s\00e\00d")
 (data (i32.const 20412) "<")
 (data (i32.const 20424) "\01\00\00\00\1e\00\00\00i\00d\00x\006\004\00:\00 \00b\00a\00d\00 \00t\00y\00p\00e")
 (data (i32.const 20476) "<")
 (data (i32.const 20488) "\01\00\00\00 \00\00\00i\00d\00x\006\004\00:\00 \00b\00a\00d\00 \00v\00a\00l\00u\00e")
 (table $0 3 funcref)
 (elem $0 (i32.const 1) $start:~lib/as-chain/name~anonymous|0 $snipvote.contract/snipvoting#declareWinners~anonymous|0)
 (export "snipvoting" (global $snipvote.contract/snipvoting))
 (export "snipvoting#get:receiver" (func $~lib/as-chain/helpers/Contract#get:receiver))
 (export "snipvoting#set:receiver" (func $~lib/rt/common/BLOCK#set:mmInfo))
 (export "snipvoting#get:firstReceiver" (func $~lib/as-chain/helpers/Contract#get:firstReceiver))
 (export "snipvoting#set:firstReceiver" (func $~lib/rt/common/OBJECT#set:gcInfo))
 (export "snipvoting#get:action" (func $~lib/as-chain/helpers/Contract#get:action))
 (export "snipvoting#set:action" (func $~lib/rt/common/OBJECT#set:gcInfo2))
 (export "snipvoting#constructor" (func $snipvote.contract/snipvoting#constructor))
 (export "snipvoting#createElection" (func $snipvote.contract/snipvoting#createElection))
 (export "snipvoting#clearAllTables" (func $snipvote.contract/snipvoting#clearAllTables))
 (export "snipvoting#clearRecall" (func $snipvote.contract/snipvoting#clearRecall))
 (export "snipvoting#clearReVote" (func $snipvote.contract/snipvoting#clearReVote))
 (export "snipvoting#clrModCand" (func $snipvote.contract/snipvoting#clrModCand))
 (export "snipvoting#clrModVoter" (func $snipvote.contract/snipvoting#clrModVoter))
 (export "snipvoting#clrModRecall" (func $snipvote.contract/snipvoting#clrModRecall))
 (export "snipvoting#registerCandidate" (func $snipvote.contract/snipvoting#registerCandidate))
 (export "snipvoting#withdrawCandidate" (func $snipvote.contract/snipvoting#withdrawCandidate))
 (export "snipvoting#vote" (func $snipvote.contract/snipvoting#vote))
 (export "snipvoting#declareWinners" (func $snipvote.contract/snipvoting#declareWinners))
 (export "snipvoting#createRecallVoting" (func $snipvote.contract/snipvoting#createRecallVoting))
 (export "snipvoting#recallVote" (func $snipvote.contract/snipvoting#recallVote))
 (export "snipvoting#recallResult" (func $snipvote.contract/snipvoting#recallResult))
 (export "snipvoting#moderatorApply" (func $snipvote.contract/snipvoting#moderatorApply))
 (export "snipvoting#moderatorVote" (func $snipvote.contract/snipvoting#moderatorVote))
 (export "snipvoting#initModRecall" (func $snipvote.contract/snipvoting#initModRecall))
 (export "snipvoting#modRecallVote" (func $snipvote.contract/snipvoting#modRecallVote))
 (export "snipvoting#updateConfig" (func $snipvote.contract/snipvoting#updateConfig))
 (export "snipvoting#submitProposal" (func $snipvote.contract/snipvoting#submitProposal))
 (export "snipvoting#voteProposal" (func $snipvote.contract/snipvoting#voteProposal))
 (export "snipvoting#closeProposal" (func $snipvote.contract/snipvoting#closeProposal))
 (export "apply" (func $snipvote.contract/apply))
 (export "memory" (memory $0))
 (start $~start)
 (func $start:~lib/as-chain/name~anonymous|0 (param $0 i32) (result i32)
  (local $1 i32)
  (if
   (select
    (i32.le_u
     (local.tee $1
      (i32.and
       (local.get $0)
       (i32.const 65535)
      )
     )
     (i32.const 122)
    )
    (i32.const 0)
    (i32.ge_u
     (local.get $1)
     (i32.const 97)
    )
   )
   (return
    (i32.sub
     (local.get $0)
     (i32.const 91)
    )
   )
  )
  (if
   (select
    (i32.le_u
     (local.tee $1
      (i32.and
       (local.get $0)
       (i32.const 65535)
      )
     )
     (i32.const 53)
    )
    (i32.const 0)
    (i32.ge_u
     (local.get $1)
     (i32.const 49)
    )
   )
   (return
    (i32.sub
     (local.get $0)
     (i32.const 48)
    )
   )
  )
  (if
   (i32.eq
    (i32.and
     (local.get $0)
     (i32.const 65535)
    )
    (i32.const 46)
   )
   (return
    (i32.const 0)
   )
  )
  (i32.const 65535)
 )
 (func $~lib/as-chain/name/Name#set:N (param $0 i32) (param $1 i64)
  (i64.store
   (local.get $0)
   (local.get $1)
  )
 )
 (func $~lib/rt/stub/maybeGrowMemory (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (if
   (i32.gt_u
    (local.get $0)
    (local.tee $1
     (i32.and
      (i32.add
       (i32.shl
        (local.tee $2
         (memory.size)
        )
        (i32.const 16)
       )
       (i32.const 15)
      )
      (i32.const -16)
     )
    )
   )
   (if
    (i32.lt_s
     (memory.grow
      (select
       (local.get $2)
       (local.tee $1
        (i32.shr_u
         (i32.and
          (i32.add
           (i32.sub
            (local.get $0)
            (local.get $1)
           )
           (i32.const 65535)
          )
          (i32.const -65536)
         )
         (i32.const 16)
        )
       )
       (i32.lt_s
        (local.get $1)
        (local.get $2)
       )
      )
     )
     (i32.const 0)
    )
    (if
     (i32.lt_s
      (memory.grow
       (local.get $1)
      )
      (i32.const 0)
     )
     (unreachable)
    )
   )
  )
  (global.set $~lib/rt/stub/offset
   (local.get $0)
  )
 )
 (func $~lib/rt/common/BLOCK#set:mmInfo (param $0 i32) (param $1 i32)
  (i32.store
   (local.get $0)
   (local.get $1)
  )
 )
 (func $~lib/rt/stub/__alloc (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (if
   (i32.gt_u
    (local.get $0)
    (i32.const 1073741820)
   )
   (unreachable)
  )
  (local.set $1
   (global.get $~lib/rt/stub/offset)
  )
  (call $~lib/rt/stub/maybeGrowMemory
   (i32.add
    (local.tee $2
     (i32.add
      (global.get $~lib/rt/stub/offset)
      (i32.const 4)
     )
    )
    (local.tee $0
     (i32.sub
      (i32.and
       (i32.add
        (local.get $0)
        (i32.const 19)
       )
       (i32.const -16)
      )
      (i32.const 4)
     )
    )
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $1)
   (local.get $0)
  )
  (local.get $2)
 )
 (func $~lib/rt/common/OBJECT#set:gcInfo (param $0 i32) (param $1 i32)
  (i32.store offset=4
   (local.get $0)
   (local.get $1)
  )
 )
 (func $~lib/rt/common/OBJECT#set:gcInfo2 (param $0 i32) (param $1 i32)
  (i32.store offset=8
   (local.get $0)
   (local.get $1)
  )
 )
 (func $~lib/rt/common/OBJECT#set:rtId (param $0 i32) (param $1 i32)
  (i32.store offset=12
   (local.get $0)
   (local.get $1)
  )
 )
 (func $~lib/rt/common/OBJECT#set:rtSize (param $0 i32) (param $1 i32)
  (i32.store offset=16
   (local.get $0)
   (local.get $1)
  )
 )
 (func $~lib/rt/stub/__new (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (if
   (i32.gt_u
    (local.get $0)
    (i32.const 1073741804)
   )
   (unreachable)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.tee $2
    (i32.sub
     (local.tee $3
      (call $~lib/rt/stub/__alloc
       (i32.add
        (local.get $0)
        (i32.const 16)
       )
      )
     )
     (i32.const 4)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $2)
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:rtId
   (local.get $2)
   (local.get $1)
  )
  (call $~lib/rt/common/OBJECT#set:rtSize
   (local.get $2)
   (local.get $0)
  )
  (i32.add
   (local.get $3)
   (i32.const 16)
  )
 )
 (func $tables/elections.table/ElectionsTable#set:startTime (param $0 i32) (param $1 i64)
  (i64.store offset=8
   (local.get $0)
   (local.get $1)
  )
 )
 (func $tables/elections.table/ElectionsTable#set:endTime (param $0 i32) (param $1 i64)
  (i64.store offset=16
   (local.get $0)
   (local.get $1)
  )
 )
 (func $tables/elections.table/ElectionsTable#set:registrationStartTime (param $0 i32) (param $1 i64)
  (i64.store offset=24
   (local.get $0)
   (local.get $1)
  )
 )
 (func $tables/elections.table/ElectionsTable#set:registrationEndTime (param $0 i32) (param $1 i64)
  (i64.store offset=32
   (local.get $0)
   (local.get $1)
  )
 )
 (func $tables/elections.table/ElectionsTable#set:candidateStakeAmount (param $0 i32) (param $1 i64)
  (i64.store offset=40
   (local.get $0)
   (local.get $1)
  )
 )
 (func $tables/elections.table/ElectionsTable#set:voterStakeAmount (param $0 i32) (param $1 i64)
  (i64.store offset=48
   (local.get $0)
   (local.get $1)
  )
 )
 (func $tables/elections.table/ElectionsTable#set:status (param $0 i32) (param $1 i32)
  (i32.store offset=56
   (local.get $0)
   (local.get $1)
  )
 )
 (func $tables/elections.table/ElectionsTable#set:totalVote (param $0 i32) (param $1 i64)
  (i64.store offset=64
   (local.get $0)
   (local.get $1)
  )
 )
 (func $tables/elections.table/ElectionsTable#set:candidates (param $0 i32) (param $1 i32)
  (i32.store offset=72
   (local.get $0)
   (local.get $1)
  )
 )
 (func $~lib/memory/memory.copy (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (block $~lib/util/memory/memmove|inlined.0
   (local.set $4
    (local.get $2)
   )
   (br_if $~lib/util/memory/memmove|inlined.0
    (i32.eq
     (local.get $0)
     (local.get $1)
    )
   )
   (if
    (i32.lt_u
     (local.get $0)
     (local.get $1)
    )
    (loop $while-continue|0
     (if
      (local.get $4)
      (block
       (local.set $0
        (i32.add
         (local.tee $2
          (local.get $0)
         )
         (i32.const 1)
        )
       )
       (local.set $1
        (i32.add
         (local.tee $3
          (local.get $1)
         )
         (i32.const 1)
        )
       )
       (i32.store8
        (local.get $2)
        (i32.load8_u
         (local.get $3)
        )
       )
       (local.set $4
        (i32.sub
         (local.get $4)
         (i32.const 1)
        )
       )
       (br $while-continue|0)
      )
     )
    )
    (loop $while-continue|1
     (if
      (local.get $4)
      (block
       (i32.store8
        (i32.add
         (local.tee $4
          (i32.sub
           (local.get $4)
           (i32.const 1)
          )
         )
         (local.get $0)
        )
        (i32.load8_u
         (i32.add
          (local.get $1)
          (local.get $4)
         )
        )
       )
       (br $while-continue|1)
      )
     )
    )
   )
  )
 )
 (func $~lib/rt/__newArray (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $5
   (local.tee $4
    (i32.shl
     (local.get $0)
     (local.get $1)
    )
   )
  )
  (local.set $1
   (call $~lib/rt/stub/__new
    (local.get $4)
    (i32.const 0)
   )
  )
  (if
   (local.get $3)
   (call $~lib/memory/memory.copy
    (local.get $1)
    (local.get $3)
    (local.get $5)
   )
  )
  (local.set $3
   (local.get $1)
  )
  (i32.store
   (local.tee $1
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (local.get $2)
    )
   )
   (local.get $3)
  )
  (i32.store offset=4
   (local.get $1)
   (local.get $3)
  )
  (i32.store offset=8
   (local.get $1)
   (local.get $4)
  )
  (i32.store offset=12
   (local.get $1)
   (local.get $0)
  )
  (local.get $1)
 )
 (func $tables/elections.table/ElectionsTable#constructor@varargs (param $0 i32) (param $1 i64) (param $2 i64) (param $3 i64) (param $4 i64) (param $5 i64) (param $6 i64) (result i32)
  (local $7 i32)
  (local $8 i32)
  (block $10of10
   (block $9of10
    (block $6of10
     (block $5of10
      (block $4of10
       (block $3of10
        (block $2of10
         (block $1of10
          (block $0of10
           (block $outOfRange
            (br_table $0of10 $1of10 $2of10 $3of10 $4of10 $5of10 $6of10 $9of10 $9of10 $9of10 $10of10 $outOfRange
             (global.get $~argumentsLength)
            )
           )
           (unreachable)
          )
          (local.set $0
           (i32.const 2512)
          )
         )
         (local.set $1
          (i64.const 0)
         )
        )
        (local.set $2
         (i64.const 0)
        )
       )
       (local.set $3
        (i64.const 0)
       )
      )
      (local.set $4
       (i64.const 0)
      )
     )
     (local.set $5
      (i64.const 0)
     )
    )
    (local.set $6
     (i64.const 0)
    )
   )
   (local.set $8
    (call $~lib/rt/__newArray
     (i32.const 0)
     (i32.const 2)
     (i32.const 13)
     (i32.const 2592)
    )
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $7
    (call $~lib/rt/stub/__new
     (i32.const 76)
     (i32.const 10)
    )
   )
   (local.get $0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $7)
   (local.get $1)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $7)
   (local.get $2)
  )
  (call $tables/elections.table/ElectionsTable#set:registrationStartTime
   (local.get $7)
   (local.get $3)
  )
  (call $tables/elections.table/ElectionsTable#set:registrationEndTime
   (local.get $7)
   (local.get $4)
  )
  (call $tables/elections.table/ElectionsTable#set:candidateStakeAmount
   (local.get $7)
   (local.get $5)
  )
  (call $tables/elections.table/ElectionsTable#set:voterStakeAmount
   (local.get $7)
   (local.get $6)
  )
  (call $tables/elections.table/ElectionsTable#set:status
   (local.get $7)
   (i32.const 2544)
  )
  (call $tables/elections.table/ElectionsTable#set:totalVote
   (local.get $7)
   (i64.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:candidates
   (local.get $7)
   (local.get $8)
  )
  (local.get $7)
 )
 (func $tables/elections.table/ElectionsTable.get:tableName (result i32)
  (local $0 i32)
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $0
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $0)
   (i64.const 6076636530200281088)
  )
  (local.get $0)
 )
 (func $tables/candidates.table/CandidatesTable#set:status (param $0 i32) (param $1 i32)
  (i32.store offset=24
   (local.get $0)
   (local.get $1)
  )
 )
 (func $tables/candidates.table/CandidatesTable#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i64) (result i32)
  (local $4 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $4
    (call $~lib/rt/stub/__new
     (i32.const 40)
     (i32.const 19)
    )
   )
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (local.get $1)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $4)
   (local.get $2)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (i64.const 0)
  )
  (call $tables/candidates.table/CandidatesTable#set:status
   (local.get $4)
   (i32.const 2656)
  )
  (call $tables/elections.table/ElectionsTable#set:registrationEndTime
   (local.get $4)
   (local.get $3)
  )
  (local.get $4)
 )
 (func $tables/candidates.table/CandidatesTable#constructor@varargs (result i32)
  (local $0 i32)
  (block $6of6
   (block $0of6
    (block $outOfRange
     (br_table $0of6 $6of6 $6of6 $6of6 $6of6 $6of6 $6of6 $outOfRange
      (global.get $~argumentsLength)
     )
    )
    (unreachable)
   )
   (call $~lib/as-chain/name/Name#set:N
    (local.tee $0
     (call $~lib/rt/stub/__new
      (i32.const 8)
      (i32.const 5)
     )
    )
    (i64.const 0)
   )
   (call $~lib/as-chain/name/Name#set:N
    (local.get $0)
    (i64.const 0)
   )
  )
  (call $tables/candidates.table/CandidatesTable#constructor
   (local.get $0)
   (i32.const 2512)
   (i32.const 2512)
   (i64.const 0)
  )
 )
 (func $tables/candidates.table/CandidatesTable.get:tableName (result i32)
  (local $0 i32)
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $0
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $0)
   (i64.const 4730634643120193536)
  )
  (local.get $0)
 )
 (func $tables/voters.table/VotersTable#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i64) (result i32)
  (local $5 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $5
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 23)
    )
   )
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $5)
   (local.get $1)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $5)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:rtId
   (local.get $5)
   (local.get $3)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $5)
   (local.get $4)
  )
  (local.get $5)
 )
 (func $tables/voters.table/VotersTable#constructor@varargs (result i32)
  (local $0 i32)
  (local $1 i32)
  (block $5of5
   (block $3of5
    (block $0of5
     (block $outOfRange
      (br_table $0of5 $3of5 $3of5 $3of5 $5of5 $5of5 $outOfRange
       (global.get $~argumentsLength)
      )
     )
     (unreachable)
    )
    (call $~lib/as-chain/name/Name#set:N
     (local.tee $1
      (call $~lib/rt/stub/__new
       (i32.const 8)
       (i32.const 5)
      )
     )
     (i64.const 0)
    )
    (call $~lib/as-chain/name/Name#set:N
     (local.get $1)
     (i64.const 0)
    )
   )
   (call $~lib/as-chain/name/Name#set:N
    (local.tee $0
     (call $~lib/rt/stub/__new
      (i32.const 8)
      (i32.const 5)
     )
    )
    (i64.const 0)
   )
   (call $~lib/as-chain/name/Name#set:N
    (local.get $0)
    (i64.const 0)
   )
  )
  (call $tables/voters.table/VotersTable#constructor
   (local.get $1)
   (i32.const 2512)
   (i32.const 2512)
   (local.get $0)
   (i64.const 0)
  )
 )
 (func $tables/voters.table/VotersTable.get:tableName (result i32)
  (local $0 i32)
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $0
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $0)
   (i64.const -2507753063930920960)
  )
  (local.get $0)
 )
 (func $snipvote.contract/snipvoting#set:votersTable (param $0 i32) (param $1 i32)
  (i32.store offset=20
   (local.get $0)
   (local.get $1)
  )
 )
 (func $tables/winners.table/WinnersTable#set:rank (param $0 i32) (param $1 i32)
  (i32.store8 offset=20
   (local.get $0)
   (local.get $1)
  )
 )
 (func $tables/winners.table/WinnersTable#set:isFoundingMember (param $0 i32) (param $1 i32)
  (i32.store8 offset=21
   (local.get $0)
   (local.get $1)
  )
 )
 (func $tables/winners.table/WinnersTable#constructor (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $6
    (call $~lib/rt/stub/__new
     (i32.const 28)
     (i32.const 27)
    )
   )
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $6)
   (local.get $1)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $6)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:rtSize
   (local.get $6)
   (local.get $3)
  )
  (call $tables/winners.table/WinnersTable#set:rank
   (local.get $6)
   (local.get $4)
  )
  (call $tables/winners.table/WinnersTable#set:isFoundingMember
   (local.get $6)
   (local.get $5)
  )
  (call $tables/candidates.table/CandidatesTable#set:status
   (local.get $6)
   (i32.const 2656)
  )
  (local.get $6)
 )
 (func $tables/winners.table/WinnersTable#constructor@varargs (result i32)
  (local $0 i32)
  (block $7of7
   (block $0of7
    (block $outOfRange
     (br_table $0of7 $7of7 $7of7 $7of7 $7of7 $7of7 $7of7 $7of7 $outOfRange
      (global.get $~argumentsLength)
     )
    )
    (unreachable)
   )
   (call $~lib/as-chain/name/Name#set:N
    (local.tee $0
     (call $~lib/rt/stub/__new
      (i32.const 8)
      (i32.const 5)
     )
    )
    (i64.const 0)
   )
   (call $~lib/as-chain/name/Name#set:N
    (local.get $0)
    (i64.const 0)
   )
  )
  (call $tables/winners.table/WinnersTable#constructor
   (local.get $0)
   (i32.const 2512)
   (i64.const 0)
   (i32.const 2512)
   (i32.const 0)
   (i32.const 0)
  )
 )
 (func $tables/winners.table/WinnersTable.get:tableName (result i32)
  (local $0 i32)
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $0
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $0)
   (i64.const -2042605223851065344)
  )
  (local.get $0)
 )
 (func $tables/recallVote.table/RecallVotesTable#set:status (param $0 i32) (param $1 i32)
  (i32.store offset=48
   (local.get $0)
   (local.get $1)
  )
 )
 (func $tables/recallVote.table/RecallVotesTable#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i64) (param $4 i64) (result i32)
  (local $5 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $5
    (call $~lib/rt/stub/__new
     (i32.const 52)
     (i32.const 31)
    )
   )
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $5)
   (local.get $1)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $5)
   (local.get $2)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $5)
   (i64.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:registrationStartTime
   (local.get $5)
   (i64.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:registrationEndTime
   (local.get $5)
   (local.get $3)
  )
  (call $tables/elections.table/ElectionsTable#set:candidateStakeAmount
   (local.get $5)
   (local.get $4)
  )
  (call $tables/recallVote.table/RecallVotesTable#set:status
   (local.get $5)
   (i32.const 2544)
  )
  (local.get $5)
 )
 (func $tables/recallVote.table/RecallVotesTable#constructor@varargs (result i32)
  (local $0 i32)
  (block $8of8
   (block $0of8
    (block $outOfRange
     (br_table $0of8 $8of8 $8of8 $8of8 $8of8 $8of8 $8of8 $8of8 $8of8 $outOfRange
      (global.get $~argumentsLength)
     )
    )
    (unreachable)
   )
   (call $~lib/as-chain/name/Name#set:N
    (local.tee $0
     (call $~lib/rt/stub/__new
      (i32.const 8)
      (i32.const 5)
     )
    )
    (i64.const 0)
   )
   (call $~lib/as-chain/name/Name#set:N
    (local.get $0)
    (i64.const 0)
   )
  )
  (call $tables/recallVote.table/RecallVotesTable#constructor
   (local.get $0)
   (i32.const 2512)
   (i32.const 2512)
   (i64.const 0)
   (i64.const 0)
  )
 )
 (func $tables/recallVote.table/RecallVotesTable.get:tableName (result i32)
  (local $0 i32)
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $0
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $0)
   (i64.const -5003383980141400064)
  )
  (local.get $0)
 )
 (func $tables/recallVoters.table/RecallVotersTable#set:votedToReplace (param $0 i32) (param $1 i32)
  (i32.store8 offset=16
   (local.get $0)
   (local.get $1)
  )
 )
 (func $tables/recallVoters.table/RecallVotersTable#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $5
    (call $~lib/rt/stub/__new
     (i32.const 32)
     (i32.const 35)
    )
   )
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $5)
   (local.get $1)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $5)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:rtId
   (local.get $5)
   (local.get $3)
  )
  (call $tables/recallVoters.table/RecallVotersTable#set:votedToReplace
   (local.get $5)
   (local.get $4)
  )
  (call $tables/elections.table/ElectionsTable#set:registrationStartTime
   (local.get $5)
   (i64.const 0)
  )
  (local.get $5)
 )
 (func $tables/recallVoters.table/RecallVotersTable#constructor@varargs (result i32)
  (local $0 i32)
  (local $1 i32)
  (block $6of6
   (block $2of6
    (block $0of6
     (block $outOfRange
      (br_table $0of6 $2of6 $2of6 $6of6 $6of6 $6of6 $6of6 $outOfRange
       (global.get $~argumentsLength)
      )
     )
     (unreachable)
    )
    (call $~lib/as-chain/name/Name#set:N
     (local.tee $1
      (call $~lib/rt/stub/__new
       (i32.const 8)
       (i32.const 5)
      )
     )
     (i64.const 0)
    )
    (call $~lib/as-chain/name/Name#set:N
     (local.get $1)
     (i64.const 0)
    )
   )
   (call $~lib/as-chain/name/Name#set:N
    (local.tee $0
     (call $~lib/rt/stub/__new
      (i32.const 8)
      (i32.const 5)
     )
    )
    (i64.const 0)
   )
   (call $~lib/as-chain/name/Name#set:N
    (local.get $0)
    (i64.const 0)
   )
  )
  (call $tables/recallVoters.table/RecallVotersTable#constructor
   (local.get $1)
   (i32.const 2512)
   (local.get $0)
   (i32.const 2512)
   (i32.const 1)
  )
 )
 (func $tables/recallVoters.table/RecallVotersTable.get:tableName (result i32)
  (local $0 i32)
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $0
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $0)
   (i64.const -5003383980141400192)
  )
  (local.get $0)
 )
 (func $snipvote.contract/snipvoting#set:recallVotersTable (param $0 i32) (param $1 i32)
  (i32.store offset=32
   (local.get $0)
   (local.get $1)
  )
 )
 (func $tables/moderatorCand.table/ModeratorCandTable#constructor (param $0 i32) (param $1 i32) (param $2 i64) (result i32)
  (local $3 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $3
    (call $~lib/rt/stub/__new
     (i32.const 40)
     (i32.const 39)
    )
   )
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $3)
   (local.get $1)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $3)
   (i64.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $3)
   (i64.const 0)
  )
  (call $tables/candidates.table/CandidatesTable#set:status
   (local.get $3)
   (i32.const 2848)
  )
  (call $tables/elections.table/ElectionsTable#set:registrationEndTime
   (local.get $3)
   (local.get $2)
  )
  (local.get $3)
 )
 (func $tables/moderatorCand.table/ModeratorCandTable#constructor@varargs (result i32)
  (local $0 i32)
  (block $6of6
   (block $0of6
    (block $outOfRange
     (br_table $0of6 $6of6 $6of6 $6of6 $6of6 $6of6 $6of6 $outOfRange
      (global.get $~argumentsLength)
     )
    )
    (unreachable)
   )
   (call $~lib/as-chain/name/Name#set:N
    (local.tee $0
     (call $~lib/rt/stub/__new
      (i32.const 8)
      (i32.const 5)
     )
    )
    (i64.const 0)
   )
   (call $~lib/as-chain/name/Name#set:N
    (local.get $0)
    (i64.const 0)
   )
  )
  (call $tables/moderatorCand.table/ModeratorCandTable#constructor
   (local.get $0)
   (i32.const 2512)
   (i64.const 0)
  )
 )
 (func $tables/moderatorCand.table/ModeratorCandTable.get:tableName (result i32)
  (local $0 i32)
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $0
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $0)
   (i64.const -7704951644965195104)
  )
  (local.get $0)
 )
 (func $tables/moderators.table/ModeratorsTable#constructor (param $0 i32) (param $1 i32) (param $2 i64) (result i32)
  (local $3 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $3
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 43)
    )
   )
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $3)
   (local.get $1)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $3)
   (local.get $2)
  )
  (local.get $3)
 )
 (func $tables/moderators.table/ModeratorsTable#constructor@varargs (result i32)
  (local $0 i32)
  (block $3of3
   (block $0of3
    (block $outOfRange
     (br_table $0of3 $3of3 $3of3 $3of3 $outOfRange
      (global.get $~argumentsLength)
     )
    )
    (unreachable)
   )
   (call $~lib/as-chain/name/Name#set:N
    (local.tee $0
     (call $~lib/rt/stub/__new
      (i32.const 8)
      (i32.const 5)
     )
    )
    (i64.const 0)
   )
   (call $~lib/as-chain/name/Name#set:N
    (local.get $0)
    (i64.const 0)
   )
  )
  (call $tables/moderators.table/ModeratorsTable#constructor
   (local.get $0)
   (i32.const 2512)
   (i64.const 0)
  )
 )
 (func $tables/moderators.table/ModeratorsTable.get:tableName (result i32)
  (local $0 i32)
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $0
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $0)
   (i64.const -7704907329384349696)
  )
  (local.get $0)
 )
 (func $snipvote.contract/snipvoting#set:moderatorsTable (param $0 i32) (param $1 i32)
  (i32.store offset=40
   (local.get $0)
   (local.get $1)
  )
 )
 (func $tables/moderatorVoter.table/ModeratorVotersTable#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i64) (result i32)
  (local $4 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $4
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 47)
    )
   )
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (local.get $1)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $4)
   (local.get $2)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (local.get $3)
  )
  (local.get $4)
 )
 (func $tables/moderatorVoter.table/ModeratorVotersTable#constructor@varargs (result i32)
  (local $0 i32)
  (local $1 i32)
  (block $4of4
   (block $1of4
    (block $0of4
     (block $outOfRange
      (br_table $0of4 $1of4 $4of4 $4of4 $4of4 $outOfRange
       (global.get $~argumentsLength)
      )
     )
     (unreachable)
    )
    (call $~lib/as-chain/name/Name#set:N
     (local.tee $1
      (call $~lib/rt/stub/__new
       (i32.const 8)
       (i32.const 5)
      )
     )
     (i64.const 0)
    )
    (call $~lib/as-chain/name/Name#set:N
     (local.get $1)
     (i64.const 0)
    )
   )
   (call $~lib/as-chain/name/Name#set:N
    (local.tee $0
     (call $~lib/rt/stub/__new
      (i32.const 8)
      (i32.const 5)
     )
    )
    (i64.const 0)
   )
   (call $~lib/as-chain/name/Name#set:N
    (local.get $0)
    (i64.const 0)
   )
  )
  (call $tables/moderatorVoter.table/ModeratorVotersTable#constructor
   (local.get $1)
   (local.get $0)
   (i32.const 2512)
   (i64.const 0)
  )
 )
 (func $tables/moderatorVoter.table/ModeratorVotersTable.get:tableName (result i32)
  (local $0 i32)
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $0
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $0)
   (i64.const -7704609593074122752)
  )
  (local.get $0)
 )
 (func $tables/modRecall.table/ModRecallTable#constructor (param $0 i64) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $4
    (call $~lib/rt/stub/__new
     (i32.const 44)
     (i32.const 51)
    )
   )
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $4)
   (local.get $1)
  )
  (call $~lib/rt/common/OBJECT#set:rtId
   (local.get $4)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:rtSize
   (local.get $4)
   (local.get $3)
  )
  (call $tables/elections.table/ElectionsTable#set:registrationStartTime
   (local.get $4)
   (i64.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:registrationEndTime
   (local.get $4)
   (i64.const 0)
  )
  (call $snipvote.contract/snipvoting#set:moderatorsTable
   (local.get $4)
   (i32.const 2848)
  )
  (local.get $4)
 )
 (func $tables/modRecall.table/ModRecallTable#constructor@varargs (result i32)
  (local $0 i32)
  (block $7of7
   (block $1of7
    (block $outOfRange
     (br_table $1of7 $1of7 $7of7 $7of7 $7of7 $7of7 $7of7 $7of7 $outOfRange
      (global.get $~argumentsLength)
     )
    )
    (unreachable)
   )
   (call $~lib/as-chain/name/Name#set:N
    (local.tee $0
     (call $~lib/rt/stub/__new
      (i32.const 8)
      (i32.const 5)
     )
    )
    (i64.const 0)
   )
   (call $~lib/as-chain/name/Name#set:N
    (local.get $0)
    (i64.const 0)
   )
  )
  (call $tables/modRecall.table/ModRecallTable#constructor
   (i64.const 0)
   (local.get $0)
   (i32.const 2512)
   (i32.const 2512)
  )
 )
 (func $tables/modRecall.table/ModRecallTable.get:tableName (result i32)
  (local $0 i32)
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $0
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $0)
   (i64.const -7704685753686032384)
  )
  (local.get $0)
 )
 (func $~lib/array/Array<~lib/as-chain/idxdb/IDXDB>#__uset (param $0 i32) (param $1 i32) (param $2 i32)
  (i32.store
   (i32.add
    (i32.load offset=4
     (local.get $0)
    )
    (i32.shl
     (local.get $1)
     (i32.const 2)
    )
   )
   (local.get $2)
  )
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/modRecall.table/ModRecallTable>#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i64)
  (local $7 i64)
  (local $8 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $4
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 52)
    )
   )
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $4)
   (i64.const -1)
  )
  (global.set $~argumentsLength
   (i32.const 0)
  )
  (drop
   (call $tables/modRecall.table/ModRecallTable#constructor@varargs)
  )
  (local.set $3
   (local.get $0)
  )
  (local.set $8
   (call $tables/modRecall.table/ModRecallTable.get:tableName)
  )
  (local.set $5
   (i64.and
    (i64.load
     (call $tables/modRecall.table/ModRecallTable.get:tableName)
    )
    (i64.const -16)
   )
  )
  (drop
   (i32.load offset=4
    (local.tee $0
     (call $~lib/rt/__newArray
      (i32.const 1)
      (i32.const 2)
      (i32.const 18)
      (i32.const 0)
     )
    )
   )
  )
  (local.set $6
   (i64.load
    (local.get $3)
   )
  )
  (local.set $7
   (i64.load
    (local.get $1)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (block (result i32)
    (if
     (i32.eqz
      (local.tee $2
       (call $~lib/rt/stub/__new
        (i32.const 28)
        (i32.const 76)
       )
      )
     )
     (local.set $2
      (call $~lib/rt/stub/__new
       (i32.const 28)
       (i32.const 17)
      )
     )
    )
    (local.get $2)
   )
   (local.get $6)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $2)
   (local.get $7)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $2)
   (local.get $5)
  )
  (i32.store offset=24
   (local.get $2)
   (i32.const 0)
  )
  (call $~lib/array/Array<~lib/as-chain/idxdb/IDXDB>#__uset
   (local.get $0)
   (i32.const 0)
   (local.get $2)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 53)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $2)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $2)
   (i64.const -1)
  )
  (local.set $5
   (i64.load
    (local.get $3)
   )
  )
  (local.set $6
   (i64.load
    (local.get $1)
   )
  )
  (local.set $7
   (i64.load
    (local.get $8)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $1
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 54)
    )
   )
   (local.get $5)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $1)
   (local.get $6)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $1)
   (local.get $7)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $2)
   (local.get $1)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $2)
   (local.get $0)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $4)
   (local.get $2)
  )
  (local.get $4)
 )
 (func $tables/modrecallvoter.table/ModRecallVotersTable#constructor (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32) (param $4 i64) (result i32)
  (local $5 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $5
    (call $~lib/rt/stub/__new
     (i32.const 32)
     (i32.const 55)
    )
   )
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $5)
   (local.get $1)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $5)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:rtSize
   (local.get $5)
   (local.get $3)
  )
  (call $tables/elections.table/ElectionsTable#set:registrationStartTime
   (local.get $5)
   (local.get $4)
  )
  (local.get $5)
 )
 (func $tables/modrecallvoter.table/ModRecallVotersTable#constructor@varargs (result i32)
  (local $0 i32)
  (local $1 i32)
  (block $5of5
   (block $1of5
    (block $0of5
     (block $outOfRange
      (br_table $0of5 $1of5 $5of5 $5of5 $5of5 $5of5 $outOfRange
       (global.get $~argumentsLength)
      )
     )
     (unreachable)
    )
    (call $~lib/as-chain/name/Name#set:N
     (local.tee $1
      (call $~lib/rt/stub/__new
       (i32.const 8)
       (i32.const 5)
      )
     )
     (i64.const 0)
    )
    (call $~lib/as-chain/name/Name#set:N
     (local.get $1)
     (i64.const 0)
    )
   )
   (call $~lib/as-chain/name/Name#set:N
    (local.tee $0
     (call $~lib/rt/stub/__new
      (i32.const 8)
      (i32.const 5)
     )
    )
    (i64.const 0)
   )
   (call $~lib/as-chain/name/Name#set:N
    (local.get $0)
    (i64.const 0)
   )
  )
  (call $tables/modrecallvoter.table/ModRecallVotersTable#constructor
   (local.get $1)
   (local.get $0)
   (i64.const 0)
   (i32.const 2512)
   (i64.const 0)
  )
 )
 (func $tables/modrecallvoter.table/ModRecallVotersTable.get:tableName (result i32)
  (local $0 i32)
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $0
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $0)
   (i64.const -7650345529334824960)
  )
  (local.get $0)
 )
 (func $tables/proposals.table/ProposalsTable#constructor (param $0 i64) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i64) (result i32)
  (local $7 i32)
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $7
    (call $~lib/rt/stub/__new
     (i32.const 60)
     (i32.const 59)
    )
   )
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $7)
   (local.get $1)
  )
  (call $~lib/rt/common/OBJECT#set:rtId
   (local.get $7)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:rtSize
   (local.get $7)
   (local.get $3)
  )
  (call $snipvote.contract/snipvoting#set:votersTable
   (local.get $7)
   (local.get $4)
  )
  (call $tables/candidates.table/CandidatesTable#set:status
   (local.get $7)
   (local.get $5)
  )
  (call $tables/elections.table/ElectionsTable#set:registrationEndTime
   (local.get $7)
   (i64.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:candidateStakeAmount
   (local.get $7)
   (i64.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:voterStakeAmount
   (local.get $7)
   (local.get $6)
  )
  (call $tables/elections.table/ElectionsTable#set:status
   (local.get $7)
   (i32.const 3024)
  )
  (local.get $7)
 )
 (func $tables/proposals.table/ProposalsTable#constructor@varargs (result i32)
  (local $0 i32)
  (block $10of10
   (block $1of10
    (block $outOfRange
     (br_table $1of10 $1of10 $10of10 $10of10 $10of10 $10of10 $10of10 $10of10 $10of10 $10of10 $10of10 $outOfRange
      (global.get $~argumentsLength)
     )
    )
    (unreachable)
   )
   (call $~lib/as-chain/name/Name#set:N
    (local.tee $0
     (call $~lib/rt/stub/__new
      (i32.const 8)
      (i32.const 5)
     )
    )
    (i64.const 0)
   )
   (call $~lib/as-chain/name/Name#set:N
    (local.get $0)
    (i64.const 0)
   )
  )
  (call $tables/proposals.table/ProposalsTable#constructor
   (i64.const 0)
   (local.get $0)
   (i32.const 2512)
   (i32.const 2512)
   (i32.const 2512)
   (i32.const 2512)
   (i64.const 0)
  )
 )
 (func $tables/proposals.table/ProposalsTable.get:tableName (result i32)
  (local $0 i32)
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $0
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $0)
   (i64.const -5915097263692054528)
  )
  (local.get $0)
 )
 (func $tables/propVoter.table/PropVotersTable#constructor (param $0 i32) (param $1 i64) (param $2 i32) (result i32)
  (local $3 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $3
    (call $~lib/rt/stub/__new
     (i32.const 20)
     (i32.const 63)
    )
   )
   (local.get $0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $3)
   (local.get $1)
  )
  (call $~lib/rt/common/OBJECT#set:rtSize
   (local.get $3)
   (local.get $2)
  )
  (local.get $3)
 )
 (func $tables/propVoter.table/PropVotersTable#constructor@varargs (result i32)
  (local $0 i32)
  (block $3of3
   (block $0of3
    (block $outOfRange
     (br_table $0of3 $3of3 $3of3 $3of3 $outOfRange
      (global.get $~argumentsLength)
     )
    )
    (unreachable)
   )
   (call $~lib/as-chain/name/Name#set:N
    (local.tee $0
     (call $~lib/rt/stub/__new
      (i32.const 8)
      (i32.const 5)
     )
    )
    (i64.const 0)
   )
   (call $~lib/as-chain/name/Name#set:N
    (local.get $0)
    (i64.const 0)
   )
  )
  (call $tables/propVoter.table/PropVotersTable#constructor
   (local.get $0)
   (i64.const 0)
   (i32.const 2512)
  )
 )
 (func $tables/propVoter.table/PropVotersTable.get:tableName (result i32)
  (local $0 i32)
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $0
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $0)
   (i64.const -5915093474037858304)
  )
  (local.get $0)
 )
 (func $tables/propConfig.table/PropConfigTable#set:id (param $0 i32) (param $1 i32)
  (i32.store8
   (local.get $0)
   (local.get $1)
  )
 )
 (func $tables/propConfig.table/PropConfigTable#constructor (param $0 i64) (param $1 i64) (result i32)
  (local $2 i32)
  (call $tables/propConfig.table/PropConfigTable#set:id
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 67)
    )
   )
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $2)
   (local.get $0)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $2)
   (local.get $1)
  )
  (local.get $2)
 )
 (func $tables/propConfig.table/PropConfigTable.get:tableName (result i32)
  (local $0 i32)
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $0
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $0)
   (i64.const -5915103922607685632)
  )
  (local.get $0)
 )
 (func $tables/account.table/AccountsTable#set:level (param $0 i32) (param $1 i32)
  (i32.store8 offset=24
   (local.get $0)
   (local.get $1)
  )
 )
 (func $tables/account.table/AccountsTable#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $1
    (call $~lib/rt/stub/__new
     (i32.const 40)
     (i32.const 71)
    )
   )
   (local.get $0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $1)
   (i64.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $1)
   (i64.const 0)
  )
  (call $tables/account.table/AccountsTable#set:level
   (local.get $1)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:registrationEndTime
   (local.get $1)
   (i64.const 0)
  )
  (local.get $1)
 )
 (func $tables/account.table/AccountsTable.get:tableName (result i32)
  (local $0 i32)
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $0
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $0)
   (i64.const 3607749779137757184)
  )
  (local.get $0)
 )
 (func $snipvote.contract/snipvoting#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  (local $7 i64)
  (local $8 i64)
  (local $9 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (block (result i32)
    (if
     (i32.eqz
      (block (result i32)
       (if
        (i32.eqz
         (local.get $0)
        )
        (local.set $0
         (call $~lib/rt/stub/__new
          (i32.const 72)
          (i32.const 8)
         )
        )
       )
       (local.get $0)
      )
     )
     (local.set $0
      (call $~lib/rt/stub/__new
       (i32.const 12)
       (i32.const 9)
      )
     )
    )
    (local.get $0)
   )
   (local.get $1)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $0)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $0)
   (local.get $3)
  )
  (local.set $3
   (i32.load
    (local.get $0)
   )
  )
  (local.set $4
   (i32.load
    (local.get $0)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 14)
    )
   )
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $2)
   (i64.const -1)
  )
  (global.set $~argumentsLength
   (i32.const 0)
  )
  (drop
   (call $tables/elections.table/ElectionsTable#constructor@varargs
    (i32.const 2512)
    (i64.const 0)
    (i64.const 0)
    (i64.const 0)
    (i64.const 0)
    (i64.const 0)
    (i64.const 0)
   )
  )
  (local.set $5
   (call $tables/elections.table/ElectionsTable.get:tableName)
  )
  (drop
   (i64.load
    (call $tables/elections.table/ElectionsTable.get:tableName)
   )
  )
  (local.set $9
   (call $~lib/rt/__newArray
    (i32.const 0)
    (i32.const 2)
    (i32.const 18)
    (i32.const 2624)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $1
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 15)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $1)
   (i64.const -1)
  )
  (local.set $6
   (i64.load
    (local.get $3)
   )
  )
  (local.set $7
   (i64.load
    (local.get $4)
   )
  )
  (local.set $8
   (i64.load
    (local.get $5)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $3
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 16)
    )
   )
   (local.get $6)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $3)
   (local.get $7)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $3)
   (local.get $8)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $1)
   (local.get $3)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (local.get $9)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $2)
   (local.get $1)
  )
  (call $~lib/rt/common/OBJECT#set:rtId
   (local.get $0)
   (local.get $2)
  )
  (local.set $3
   (i32.load
    (local.get $0)
   )
  )
  (local.set $4
   (i32.load
    (local.get $0)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 20)
    )
   )
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $2)
   (i64.const -1)
  )
  (global.set $~argumentsLength
   (i32.const 0)
  )
  (drop
   (call $tables/candidates.table/CandidatesTable#constructor@varargs)
  )
  (local.set $5
   (call $tables/candidates.table/CandidatesTable.get:tableName)
  )
  (drop
   (i64.load
    (call $tables/candidates.table/CandidatesTable.get:tableName)
   )
  )
  (local.set $9
   (call $~lib/rt/__newArray
    (i32.const 0)
    (i32.const 2)
    (i32.const 18)
    (i32.const 2688)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $1
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 21)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $1)
   (i64.const -1)
  )
  (local.set $6
   (i64.load
    (local.get $3)
   )
  )
  (local.set $7
   (i64.load
    (local.get $4)
   )
  )
  (local.set $8
   (i64.load
    (local.get $5)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $3
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 22)
    )
   )
   (local.get $6)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $3)
   (local.get $7)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $3)
   (local.get $8)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $1)
   (local.get $3)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (local.get $9)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $2)
   (local.get $1)
  )
  (call $~lib/rt/common/OBJECT#set:rtSize
   (local.get $0)
   (local.get $2)
  )
  (local.set $3
   (i32.load
    (local.get $0)
   )
  )
  (local.set $4
   (i32.load
    (local.get $0)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 24)
    )
   )
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $2)
   (i64.const -1)
  )
  (global.set $~argumentsLength
   (i32.const 0)
  )
  (drop
   (call $tables/voters.table/VotersTable#constructor@varargs)
  )
  (local.set $5
   (call $tables/voters.table/VotersTable.get:tableName)
  )
  (drop
   (i64.load
    (call $tables/voters.table/VotersTable.get:tableName)
   )
  )
  (local.set $9
   (call $~lib/rt/__newArray
    (i32.const 0)
    (i32.const 2)
    (i32.const 18)
    (i32.const 2720)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $1
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 25)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $1)
   (i64.const -1)
  )
  (local.set $6
   (i64.load
    (local.get $3)
   )
  )
  (local.set $7
   (i64.load
    (local.get $4)
   )
  )
  (local.set $8
   (i64.load
    (local.get $5)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $3
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 26)
    )
   )
   (local.get $6)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $3)
   (local.get $7)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $3)
   (local.get $8)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $1)
   (local.get $3)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (local.get $9)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $2)
   (local.get $1)
  )
  (call $snipvote.contract/snipvoting#set:votersTable
   (local.get $0)
   (local.get $2)
  )
  (local.set $3
   (i32.load
    (local.get $0)
   )
  )
  (local.set $4
   (i32.load
    (local.get $0)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 28)
    )
   )
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $2)
   (i64.const -1)
  )
  (global.set $~argumentsLength
   (i32.const 0)
  )
  (drop
   (call $tables/winners.table/WinnersTable#constructor@varargs)
  )
  (local.set $5
   (call $tables/winners.table/WinnersTable.get:tableName)
  )
  (drop
   (i64.load
    (call $tables/winners.table/WinnersTable.get:tableName)
   )
  )
  (local.set $9
   (call $~lib/rt/__newArray
    (i32.const 0)
    (i32.const 2)
    (i32.const 18)
    (i32.const 2752)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $1
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 29)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $1)
   (i64.const -1)
  )
  (local.set $6
   (i64.load
    (local.get $3)
   )
  )
  (local.set $7
   (i64.load
    (local.get $4)
   )
  )
  (local.set $8
   (i64.load
    (local.get $5)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $3
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 30)
    )
   )
   (local.get $6)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $3)
   (local.get $7)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $3)
   (local.get $8)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $1)
   (local.get $3)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (local.get $9)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $2)
   (local.get $1)
  )
  (call $tables/candidates.table/CandidatesTable#set:status
   (local.get $0)
   (local.get $2)
  )
  (local.set $3
   (i32.load
    (local.get $0)
   )
  )
  (local.set $4
   (i32.load
    (local.get $0)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 32)
    )
   )
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $2)
   (i64.const -1)
  )
  (global.set $~argumentsLength
   (i32.const 0)
  )
  (drop
   (call $tables/recallVote.table/RecallVotesTable#constructor@varargs)
  )
  (local.set $5
   (call $tables/recallVote.table/RecallVotesTable.get:tableName)
  )
  (drop
   (i64.load
    (call $tables/recallVote.table/RecallVotesTable.get:tableName)
   )
  )
  (local.set $9
   (call $~lib/rt/__newArray
    (i32.const 0)
    (i32.const 2)
    (i32.const 18)
    (i32.const 2784)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $1
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 33)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $1)
   (i64.const -1)
  )
  (local.set $6
   (i64.load
    (local.get $3)
   )
  )
  (local.set $7
   (i64.load
    (local.get $4)
   )
  )
  (local.set $8
   (i64.load
    (local.get $5)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $3
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 34)
    )
   )
   (local.get $6)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $3)
   (local.get $7)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $3)
   (local.get $8)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $1)
   (local.get $3)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (local.get $9)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $2)
   (local.get $1)
  )
  (i32.store offset=28
   (local.get $0)
   (local.get $2)
  )
  (local.set $3
   (i32.load
    (local.get $0)
   )
  )
  (local.set $4
   (i32.load
    (local.get $0)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 36)
    )
   )
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $2)
   (i64.const -1)
  )
  (global.set $~argumentsLength
   (i32.const 0)
  )
  (drop
   (call $tables/recallVoters.table/RecallVotersTable#constructor@varargs)
  )
  (local.set $5
   (call $tables/recallVoters.table/RecallVotersTable.get:tableName)
  )
  (drop
   (i64.load
    (call $tables/recallVoters.table/RecallVotersTable.get:tableName)
   )
  )
  (local.set $9
   (call $~lib/rt/__newArray
    (i32.const 0)
    (i32.const 2)
    (i32.const 18)
    (i32.const 2816)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $1
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 37)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $1)
   (i64.const -1)
  )
  (local.set $6
   (i64.load
    (local.get $3)
   )
  )
  (local.set $7
   (i64.load
    (local.get $4)
   )
  )
  (local.set $8
   (i64.load
    (local.get $5)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $3
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 38)
    )
   )
   (local.get $6)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $3)
   (local.get $7)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $3)
   (local.get $8)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $1)
   (local.get $3)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (local.get $9)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $2)
   (local.get $1)
  )
  (call $snipvote.contract/snipvoting#set:recallVotersTable
   (local.get $0)
   (local.get $2)
  )
  (local.set $3
   (i32.load
    (local.get $0)
   )
  )
  (local.set $4
   (i32.load
    (local.get $0)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 40)
    )
   )
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $2)
   (i64.const -1)
  )
  (global.set $~argumentsLength
   (i32.const 0)
  )
  (drop
   (call $tables/moderatorCand.table/ModeratorCandTable#constructor@varargs)
  )
  (local.set $5
   (call $tables/moderatorCand.table/ModeratorCandTable.get:tableName)
  )
  (drop
   (i64.load
    (call $tables/moderatorCand.table/ModeratorCandTable.get:tableName)
   )
  )
  (local.set $9
   (call $~lib/rt/__newArray
    (i32.const 0)
    (i32.const 2)
    (i32.const 18)
    (i32.const 2896)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $1
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 41)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $1)
   (i64.const -1)
  )
  (local.set $6
   (i64.load
    (local.get $3)
   )
  )
  (local.set $7
   (i64.load
    (local.get $4)
   )
  )
  (local.set $8
   (i64.load
    (local.get $5)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $3
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 42)
    )
   )
   (local.get $6)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $3)
   (local.get $7)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $3)
   (local.get $8)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $1)
   (local.get $3)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (local.get $9)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $2)
   (local.get $1)
  )
  (i32.store offset=36
   (local.get $0)
   (local.get $2)
  )
  (local.set $3
   (i32.load
    (local.get $0)
   )
  )
  (local.set $4
   (i32.load
    (local.get $0)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 44)
    )
   )
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $2)
   (i64.const -1)
  )
  (global.set $~argumentsLength
   (i32.const 0)
  )
  (drop
   (call $tables/moderators.table/ModeratorsTable#constructor@varargs)
  )
  (local.set $5
   (call $tables/moderators.table/ModeratorsTable.get:tableName)
  )
  (drop
   (i64.load
    (call $tables/moderators.table/ModeratorsTable.get:tableName)
   )
  )
  (local.set $9
   (call $~lib/rt/__newArray
    (i32.const 0)
    (i32.const 2)
    (i32.const 18)
    (i32.const 2928)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $1
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 45)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $1)
   (i64.const -1)
  )
  (local.set $6
   (i64.load
    (local.get $3)
   )
  )
  (local.set $7
   (i64.load
    (local.get $4)
   )
  )
  (local.set $8
   (i64.load
    (local.get $5)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $3
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 46)
    )
   )
   (local.get $6)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $3)
   (local.get $7)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $3)
   (local.get $8)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $1)
   (local.get $3)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (local.get $9)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $2)
   (local.get $1)
  )
  (call $snipvote.contract/snipvoting#set:moderatorsTable
   (local.get $0)
   (local.get $2)
  )
  (local.set $3
   (i32.load
    (local.get $0)
   )
  )
  (local.set $4
   (i32.load
    (local.get $0)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 48)
    )
   )
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $2)
   (i64.const -1)
  )
  (global.set $~argumentsLength
   (i32.const 0)
  )
  (drop
   (call $tables/moderatorVoter.table/ModeratorVotersTable#constructor@varargs)
  )
  (local.set $5
   (call $tables/moderatorVoter.table/ModeratorVotersTable.get:tableName)
  )
  (drop
   (i64.load
    (call $tables/moderatorVoter.table/ModeratorVotersTable.get:tableName)
   )
  )
  (local.set $9
   (call $~lib/rt/__newArray
    (i32.const 0)
    (i32.const 2)
    (i32.const 18)
    (i32.const 2960)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $1
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 49)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $1)
   (i64.const -1)
  )
  (local.set $6
   (i64.load
    (local.get $3)
   )
  )
  (local.set $7
   (i64.load
    (local.get $4)
   )
  )
  (local.set $8
   (i64.load
    (local.get $5)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $3
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 50)
    )
   )
   (local.get $6)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $3)
   (local.get $7)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $3)
   (local.get $8)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $1)
   (local.get $3)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (local.get $9)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $2)
   (local.get $1)
  )
  (i32.store offset=44
   (local.get $0)
   (local.get $2)
  )
  (call $tables/recallVote.table/RecallVotesTable#set:status
   (local.get $0)
   (call $~lib/proton-tsc/modules/store/store/TableStore<tables/modRecall.table/ModRecallTable>#constructor
    (i32.load
     (local.get $0)
    )
    (i32.load
     (local.get $0)
    )
   )
  )
  (local.set $3
   (i32.load
    (local.get $0)
   )
  )
  (local.set $4
   (i32.load
    (local.get $0)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 56)
    )
   )
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $2)
   (i64.const -1)
  )
  (global.set $~argumentsLength
   (i32.const 0)
  )
  (drop
   (call $tables/modrecallvoter.table/ModRecallVotersTable#constructor@varargs)
  )
  (local.set $5
   (call $tables/modrecallvoter.table/ModRecallVotersTable.get:tableName)
  )
  (drop
   (i64.load
    (call $tables/modrecallvoter.table/ModRecallVotersTable.get:tableName)
   )
  )
  (local.set $9
   (call $~lib/rt/__newArray
    (i32.const 0)
    (i32.const 2)
    (i32.const 18)
    (i32.const 2992)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $1
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 57)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $1)
   (i64.const -1)
  )
  (local.set $6
   (i64.load
    (local.get $3)
   )
  )
  (local.set $7
   (i64.load
    (local.get $4)
   )
  )
  (local.set $8
   (i64.load
    (local.get $5)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $3
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 58)
    )
   )
   (local.get $6)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $3)
   (local.get $7)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $3)
   (local.get $8)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $1)
   (local.get $3)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (local.get $9)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $2)
   (local.get $1)
  )
  (i32.store offset=52
   (local.get $0)
   (local.get $2)
  )
  (local.set $3
   (i32.load
    (local.get $0)
   )
  )
  (local.set $4
   (i32.load
    (local.get $0)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 60)
    )
   )
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $2)
   (i64.const -1)
  )
  (global.set $~argumentsLength
   (i32.const 0)
  )
  (drop
   (call $tables/proposals.table/ProposalsTable#constructor@varargs)
  )
  (local.set $5
   (call $tables/proposals.table/ProposalsTable.get:tableName)
  )
  (drop
   (i64.load
    (call $tables/proposals.table/ProposalsTable.get:tableName)
   )
  )
  (local.set $9
   (call $~lib/rt/__newArray
    (i32.const 0)
    (i32.const 2)
    (i32.const 18)
    (i32.const 3056)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $1
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 61)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $1)
   (i64.const -1)
  )
  (local.set $6
   (i64.load
    (local.get $3)
   )
  )
  (local.set $7
   (i64.load
    (local.get $4)
   )
  )
  (local.set $8
   (i64.load
    (local.get $5)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $3
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 62)
    )
   )
   (local.get $6)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $3)
   (local.get $7)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $3)
   (local.get $8)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $1)
   (local.get $3)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (local.get $9)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $2)
   (local.get $1)
  )
  (call $tables/elections.table/ElectionsTable#set:status
   (local.get $0)
   (local.get $2)
  )
  (local.set $3
   (i32.load
    (local.get $0)
   )
  )
  (local.set $4
   (i32.load
    (local.get $0)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 64)
    )
   )
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $2)
   (i64.const -1)
  )
  (global.set $~argumentsLength
   (i32.const 0)
  )
  (drop
   (call $tables/propVoter.table/PropVotersTable#constructor@varargs)
  )
  (local.set $5
   (call $tables/propVoter.table/PropVotersTable.get:tableName)
  )
  (drop
   (i64.load
    (call $tables/propVoter.table/PropVotersTable.get:tableName)
   )
  )
  (local.set $9
   (call $~lib/rt/__newArray
    (i32.const 0)
    (i32.const 2)
    (i32.const 18)
    (i32.const 3088)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $1
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 65)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $1)
   (i64.const -1)
  )
  (local.set $6
   (i64.load
    (local.get $3)
   )
  )
  (local.set $7
   (i64.load
    (local.get $4)
   )
  )
  (local.set $8
   (i64.load
    (local.get $5)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $3
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 66)
    )
   )
   (local.get $6)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $3)
   (local.get $7)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $3)
   (local.get $8)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $1)
   (local.get $3)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (local.get $9)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $2)
   (local.get $1)
  )
  (i32.store offset=60
   (local.get $0)
   (local.get $2)
  )
  (local.set $3
   (i32.load
    (local.get $0)
   )
  )
  (local.set $4
   (i32.load
    (local.get $0)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 68)
    )
   )
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $2)
   (i64.const -1)
  )
  (drop
   (call $tables/propConfig.table/PropConfigTable#constructor
    (i64.const 10000000)
    (i64.const 10000000)
   )
  )
  (local.set $5
   (call $tables/propConfig.table/PropConfigTable.get:tableName)
  )
  (drop
   (i64.load
    (call $tables/propConfig.table/PropConfigTable.get:tableName)
   )
  )
  (local.set $9
   (call $~lib/rt/__newArray
    (i32.const 0)
    (i32.const 2)
    (i32.const 18)
    (i32.const 3120)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $1
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 69)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $1)
   (i64.const -1)
  )
  (local.set $6
   (i64.load
    (local.get $3)
   )
  )
  (local.set $7
   (i64.load
    (local.get $4)
   )
  )
  (local.set $8
   (i64.load
    (local.get $5)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $3
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 70)
    )
   )
   (local.get $6)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $3)
   (local.get $7)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $3)
   (local.get $8)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $1)
   (local.get $3)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (local.get $9)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $2)
   (local.get $1)
  )
  (i32.store offset=64
   (local.get $0)
   (local.get $2)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const -4261148079266201600)
  )
  (global.set $~argumentsLength
   (i32.const 1)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $3
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 72)
    )
   )
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $3)
   (i64.const -1)
  )
  (drop
   (call $tables/account.table/AccountsTable#constructor
    (global.get $~lib/as-chain/name/EMPTY_NAME)
   )
  )
  (local.set $4
   (call $tables/account.table/AccountsTable.get:tableName)
  )
  (drop
   (i64.load
    (call $tables/account.table/AccountsTable.get:tableName)
   )
  )
  (local.set $5
   (call $~lib/rt/__newArray
    (i32.const 0)
    (i32.const 2)
    (i32.const 18)
    (i32.const 3152)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $1
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 73)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $1)
   (i64.const -1)
  )
  (local.set $6
   (i64.load
    (local.get $2)
   )
  )
  (local.set $7
   (i64.load
    (local.get $2)
   )
  )
  (local.set $8
   (i64.load
    (local.get $4)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 74)
    )
   )
   (local.get $6)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $2)
   (local.get $7)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $2)
   (local.get $8)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (local.get $5)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $3)
   (local.get $1)
  )
  (i32.store offset=68
   (local.get $0)
   (local.get $3)
  )
  (local.get $0)
 )
 (func $~lib/as-chain/helpers/Contract#get:receiver (param $0 i32) (result i32)
  (i32.load
   (local.get $0)
  )
 )
 (func $~lib/as-chain/helpers/Contract#get:firstReceiver (param $0 i32) (result i32)
  (i32.load offset=4
   (local.get $0)
  )
 )
 (func $~lib/as-chain/helpers/Contract#get:action (param $0 i32) (result i32)
  (i32.load offset=8
   (local.get $0)
  )
 )
 (func $~lib/string/String#get:length (param $0 i32) (result i32)
  (i32.shr_u
   (i32.load offset=16
    (i32.sub
     (local.get $0)
     (i32.const 20)
    )
   )
   (i32.const 1)
  )
 )
 (func $~lib/util/string/stagedBinaryLookup (param $0 i32) (param $1 i32) (result i32)
  (i32.and
   (i32.shr_u
    (i32.load8_u
     (i32.add
      (i32.add
       (local.get $0)
       (i32.shl
        (i32.load8_u
         (i32.add
          (local.get $0)
          (i32.shr_u
           (local.get $1)
           (i32.const 8)
          )
         )
        )
        (i32.const 5)
       )
      )
      (i32.shr_u
       (i32.and
        (local.get $1)
        (i32.const 255)
       )
       (i32.const 3)
      )
     )
    )
    (i32.and
     (local.get $1)
     (i32.const 7)
    )
   )
   (i32.const 1)
  )
 )
 (func $~lib/util/casemap/casemap (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $2
   (i32.shr_s
    (local.tee $1
     (i32.load
      (i32.add
       (i32.shl
        (i32.add
         (i32.load8_u
          (i32.add
           (local.tee $1
            (i32.shr_u
             (local.get $0)
             (i32.const 8)
            )
           )
           (i32.const 11380)
          )
         )
         (i32.rem_u
          (i32.shr_u
           (i32.mul
            (i32.load8_u
             (i32.add
              (i32.add
               (i32.mul
                (i32.load8_u
                 (i32.add
                  (local.get $1)
                  (i32.const 7740)
                 )
                )
                (i32.const 86)
               )
               (i32.const 7740)
              )
              (i32.div_u
               (local.tee $4
                (i32.and
                 (local.get $0)
                 (i32.const 255)
                )
               )
               (i32.const 3)
              )
             )
            )
            (i32.load
             (i32.add
              (i32.shl
               (i32.rem_u
                (local.get $4)
                (i32.const 3)
               )
               (i32.const 2)
              )
              (i32.const 10408)
             )
            )
           )
           (i32.const 11)
          )
          (i32.const 6)
         )
        )
        (i32.const 2)
       )
       (i32.const 10420)
      )
     )
    )
    (i32.const 8)
   )
  )
  (block $folding-inner0
   (br_if $folding-inner0
    (i32.lt_u
     (local.tee $1
      (i32.and
       (local.get $1)
       (i32.const 255)
      )
     )
     (i32.const 2)
    )
   )
   (local.set $1
    (i32.and
     (local.get $2)
     (i32.const 255)
    )
   )
   (local.set $3
    (i32.shr_u
     (local.get $2)
     (i32.const 8)
    )
   )
   (loop $while-continue|0
    (if
     (local.get $1)
     (block
      (local.set $1
       (if (result i32)
        (i32.eq
         (local.get $4)
         (local.tee $5
          (i32.load8_u
           (i32.add
            (i32.shl
             (i32.add
              (local.get $3)
              (local.tee $2
               (i32.shr_u
                (local.get $1)
                (i32.const 1)
               )
              )
             )
             (i32.const 1)
            )
            (i32.const 11892)
           )
          )
         )
        )
        (block
         (local.set $2
          (i32.shr_s
           (local.tee $1
            (i32.load
             (i32.add
              (i32.shl
               (i32.load8_u offset=1
                (i32.add
                 (i32.shl
                  (i32.add
                   (local.get $2)
                   (local.get $3)
                  )
                  (i32.const 1)
                 )
                 (i32.const 11892)
                )
               )
               (i32.const 2)
              )
              (i32.const 10420)
             )
            )
           )
           (i32.const 8)
          )
         )
         (br_if $folding-inner0
          (i32.lt_u
           (local.tee $1
            (i32.and
             (local.get $1)
             (i32.const 255)
            )
           )
           (i32.const 2)
          )
         )
         (return
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
        )
        (if (result i32)
         (i32.lt_u
          (local.get $4)
          (local.get $5)
         )
         (local.get $2)
         (block (result i32)
          (local.set $3
           (i32.add
            (local.get $2)
            (local.get $3)
           )
          )
          (i32.sub
           (local.get $1)
           (local.get $2)
          )
         )
        )
       )
      )
      (br $while-continue|0)
     )
    )
   )
   (return
    (local.get $0)
   )
  )
  (i32.add
   (local.get $0)
   (i32.and
    (local.get $2)
    (i32.sub
     (i32.const 0)
     (local.get $1)
    )
   )
  )
 )
 (func $~lib/rt/stub/__renew (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (if
   (i32.gt_u
    (local.get $1)
    (i32.const 1073741804)
   )
   (unreachable)
  )
  (local.set $3
   (i32.add
    (local.get $1)
    (i32.const 16)
   )
  )
  (if
   (i32.eqz
    (select
     (i32.eqz
      (i32.and
       (local.tee $0
        (i32.sub
         (local.get $0)
         (i32.const 16)
        )
       )
       (i32.const 15)
      )
     )
     (i32.const 0)
     (local.get $0)
    )
   )
   (unreachable)
  )
  (local.set $6
   (i32.eq
    (global.get $~lib/rt/stub/offset)
    (i32.add
     (local.get $0)
     (local.tee $4
      (i32.load
       (local.tee $5
        (i32.sub
         (local.get $0)
         (i32.const 4)
        )
       )
      )
     )
    )
   )
  )
  (local.set $2
   (i32.sub
    (i32.and
     (i32.add
      (local.get $3)
      (i32.const 19)
     )
     (i32.const -16)
    )
    (i32.const 4)
   )
  )
  (if
   (i32.gt_u
    (local.get $3)
    (local.get $4)
   )
   (if
    (local.get $6)
    (block
     (if
      (i32.gt_u
       (local.get $3)
       (i32.const 1073741820)
      )
      (unreachable)
     )
     (call $~lib/rt/stub/maybeGrowMemory
      (i32.add
       (local.get $0)
       (local.get $2)
      )
     )
     (call $~lib/rt/common/BLOCK#set:mmInfo
      (local.get $5)
      (local.get $2)
     )
    )
    (block
     (call $~lib/memory/memory.copy
      (local.tee $2
       (call $~lib/rt/stub/__alloc
        (select
         (local.get $2)
         (local.tee $3
          (i32.shl
           (local.get $4)
           (i32.const 1)
          )
         )
         (i32.gt_u
          (local.get $2)
          (local.get $3)
         )
        )
       )
      )
      (local.get $0)
      (local.get $4)
     )
     (local.set $0
      (local.get $2)
     )
    )
   )
   (if
    (local.get $6)
    (block
     (global.set $~lib/rt/stub/offset
      (i32.add
       (local.get $0)
       (local.get $2)
      )
     )
     (call $~lib/rt/common/BLOCK#set:mmInfo
      (local.get $5)
      (local.get $2)
     )
    )
   )
  )
  (call $~lib/rt/common/OBJECT#set:rtSize
   (i32.sub
    (local.get $0)
    (i32.const 4)
   )
   (local.get $1)
  )
  (i32.add
   (local.get $0)
   (i32.const 16)
  )
 )
 (func $~lib/string/String#toLowerCase (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (if
   (i32.eqz
    (local.tee $8
     (call $~lib/string/String#get:length
      (local.get $0)
     )
    )
   )
   (return
    (local.get $0)
   )
  )
  (local.set $7
   (call $~lib/rt/stub/__new
    (i32.shl
     (local.get $8)
     (i32.const 2)
    )
    (i32.const 1)
   )
  )
  (loop $for-loop|0
   (if
    (i32.lt_u
     (local.get $4)
     (local.get $8)
    )
    (block
     (if
      (i32.shr_u
       (local.tee $1
        (i32.load16_u
         (i32.add
          (local.get $0)
          (i32.shl
           (local.get $4)
           (i32.const 1)
          )
         )
        )
       )
       (i32.const 7)
      )
      (block $for-continue|0
       (if
        (select
         (i32.lt_u
          (local.get $4)
          (i32.sub
           (local.get $8)
           (i32.const 1)
          )
         )
         (i32.const 0)
         (i32.lt_u
          (i32.sub
           (local.get $1)
           (i32.const 55295)
          )
          (i32.const 1025)
         )
        )
        (if
         (i32.lt_u
          (i32.sub
           (local.tee $3
            (i32.load16_u offset=2
             (i32.add
              (local.get $0)
              (i32.shl
               (local.get $4)
               (i32.const 1)
              )
             )
            )
           )
           (i32.const 56319)
          )
          (i32.const 1025)
         )
         (block
          (local.set $4
           (i32.add
            (local.get $4)
            (i32.const 1)
           )
          )
          (if
           (i32.ge_u
            (local.tee $1
             (i32.add
              (i32.or
               (i32.and
                (local.get $3)
                (i32.const 1023)
               )
               (i32.shl
                (i32.and
                 (local.tee $2
                  (local.get $1)
                 )
                 (i32.const 1023)
                )
                (i32.const 10)
               )
              )
              (i32.const 65536)
             )
            )
            (i32.const 131072)
           )
           (block
            (i32.store
             (i32.add
              (local.get $7)
              (i32.shl
               (local.get $6)
               (i32.const 1)
              )
             )
             (i32.or
              (local.get $2)
              (i32.shl
               (local.get $3)
               (i32.const 16)
              )
             )
            )
            (local.set $6
             (i32.add
              (local.get $6)
              (i32.const 1)
             )
            )
            (br $for-continue|0)
           )
          )
         )
        )
       )
       (if
        (i32.eq
         (local.get $1)
         (i32.const 304)
        )
        (block
         (i32.store
          (i32.add
           (local.get $7)
           (i32.shl
            (local.get $6)
            (i32.const 1)
           )
          )
          (i32.const 50790505)
         )
         (local.set $6
          (i32.add
           (local.get $6)
           (i32.const 1)
          )
         )
        )
        (if
         (i32.eq
          (local.get $1)
          (i32.const 931)
         )
         (i32.store16
          (i32.add
           (local.get $7)
           (i32.shl
            (local.get $6)
            (i32.const 1)
           )
          )
          (select
           (i32.const 962)
           (i32.const 963)
           (if (result i32)
            (i32.gt_u
             (local.get $8)
             (i32.const 1)
            )
            (block $~lib/util/string/isFinalSigma|inlined.0 (result i32)
             (local.set $1
              (i32.const 0)
             )
             (local.set $10
              (select
               (i32.const 0)
               (local.tee $3
                (i32.sub
                 (local.tee $2
                  (local.get $4)
                 )
                 (i32.const 30)
                )
               )
               (i32.lt_s
                (local.get $3)
                (i32.const 0)
               )
              )
             )
             (loop $while-continue|1
              (if
               (i32.gt_s
                (local.get $2)
                (local.get $10)
               )
               (block
                (local.set $3
                 (i32.const -1)
                )
                (block $~lib/util/string/codePointBefore|inlined.0
                 (br_if $~lib/util/string/codePointBefore|inlined.0
                  (i32.le_s
                   (local.tee $5
                    (local.get $2)
                   )
                   (i32.const 0)
                  )
                 )
                 (if
                  (i32.and
                   (i32.eq
                    (i32.and
                     (local.tee $9
                      (i32.load16_u
                       (i32.add
                        (local.get $0)
                        (i32.shl
                         (i32.sub
                          (local.get $5)
                          (i32.const 1)
                         )
                         (i32.const 1)
                        )
                       )
                      )
                     )
                     (i32.const 64512)
                    )
                    (i32.const 56320)
                   )
                   (i32.ge_s
                    (i32.sub
                     (local.get $5)
                     (i32.const 2)
                    )
                    (i32.const 0)
                   )
                  )
                  (block
                   (local.set $3
                    (i32.add
                     (i32.add
                      (i32.and
                       (local.get $9)
                       (i32.const 1023)
                      )
                      (i32.shl
                       (i32.and
                        (local.tee $2
                         (i32.load16_u
                          (i32.add
                           (local.get $0)
                           (i32.shl
                            (i32.sub
                             (local.get $5)
                             (i32.const 2)
                            )
                            (i32.const 1)
                           )
                          )
                         )
                        )
                        (i32.const 1023)
                       )
                       (i32.const 10)
                      )
                     )
                     (i32.const 65536)
                    )
                   )
                   (br_if $~lib/util/string/codePointBefore|inlined.0
                    (i32.eq
                     (i32.and
                      (local.get $2)
                      (i32.const 64512)
                     )
                     (i32.const 55296)
                    )
                   )
                  )
                 )
                 (local.set $3
                  (select
                   (i32.const 65533)
                   (local.get $9)
                   (i32.eq
                    (i32.and
                     (local.get $9)
                     (i32.const 63488)
                    )
                    (i32.const 55296)
                   )
                  )
                 )
                )
                (if
                 (i32.eqz
                  (if (result i32)
                   (i32.lt_u
                    (local.tee $2
                     (local.get $3)
                    )
                    (i32.const 918000)
                   )
                   (call $~lib/util/string/stagedBinaryLookup
                    (i32.const 3164)
                    (local.get $2)
                   )
                   (i32.const 0)
                  )
                 )
                 (local.set $1
                  (if (result i32)
                   (if (result i32)
                    (i32.lt_u
                     (local.get $2)
                     (i32.const 127370)
                    )
                    (call $~lib/util/string/stagedBinaryLookup
                     (i32.const 6172)
                     (local.get $2)
                    )
                    (i32.const 0)
                   )
                   (i32.const 1)
                   (br $~lib/util/string/isFinalSigma|inlined.0
                    (i32.const 0)
                   )
                  )
                 )
                )
                (local.set $2
                 (i32.sub
                  (local.get $5)
                  (i32.add
                   (i32.ge_s
                    (local.get $2)
                    (i32.const 65536)
                   )
                   (i32.const 1)
                  )
                 )
                )
                (br $while-continue|1)
               )
              )
             )
             (drop
              (br_if $~lib/util/string/isFinalSigma|inlined.0
               (i32.const 0)
               (i32.eqz
                (local.get $1)
               )
              )
             )
             (local.set $5
              (select
               (local.tee $1
                (i32.add
                 (local.tee $2
                  (i32.add
                   (local.get $4)
                   (i32.const 1)
                  )
                 )
                 (i32.const 30)
                )
               )
               (local.get $8)
               (i32.lt_s
                (local.get $1)
                (local.get $8)
               )
              )
             )
             (loop $while-continue|2
              (if
               (i32.lt_s
                (local.get $2)
                (local.get $5)
               )
               (block
                (if
                 (i32.eqz
                  (if (result i32)
                   (i32.lt_u
                    (block (result i32)
                     (if
                      (i32.and
                       (i32.eq
                        (i32.and
                         (local.tee $1
                          (i32.load16_u
                           (i32.add
                            (local.get $0)
                            (i32.shl
                             (local.get $2)
                             (i32.const 1)
                            )
                           )
                          )
                         )
                         (i32.const 64512)
                        )
                        (i32.const 55296)
                       )
                       (i32.ne
                        (local.get $8)
                        (i32.add
                         (local.get $2)
                         (i32.const 1)
                        )
                       )
                      )
                      (if
                       (i32.eq
                        (i32.and
                         (local.tee $3
                          (i32.load16_u offset=2
                           (i32.add
                            (local.get $0)
                            (i32.shl
                             (local.get $2)
                             (i32.const 1)
                            )
                           )
                          )
                         )
                         (i32.const 64512)
                        )
                        (i32.const 56320)
                       )
                       (local.set $1
                        (i32.sub
                         (i32.add
                          (i32.shl
                           (local.get $1)
                           (i32.const 10)
                          )
                          (local.get $3)
                         )
                         (i32.const 56613888)
                        )
                       )
                      )
                     )
                     (local.get $1)
                    )
                    (i32.const 918000)
                   )
                   (call $~lib/util/string/stagedBinaryLookup
                    (i32.const 3164)
                    (local.get $1)
                   )
                   (i32.const 0)
                  )
                 )
                 (br $~lib/util/string/isFinalSigma|inlined.0
                  (i32.eqz
                   (if (result i32)
                    (i32.lt_u
                     (local.get $1)
                     (i32.const 127370)
                    )
                    (call $~lib/util/string/stagedBinaryLookup
                     (i32.const 6172)
                     (local.get $1)
                    )
                    (i32.const 0)
                   )
                  )
                 )
                )
                (local.set $2
                 (i32.add
                  (local.get $2)
                  (i32.add
                   (i32.ge_u
                    (local.get $1)
                    (i32.const 65536)
                   )
                   (i32.const 1)
                  )
                 )
                )
                (br $while-continue|2)
               )
              )
             )
             (i32.const 1)
            )
            (i32.const 0)
           )
          )
         )
         (if
          (i32.le_u
           (i32.sub
            (local.get $1)
            (i32.const 9398)
           )
           (i32.const 25)
          )
          (i32.store16
           (i32.add
            (local.get $7)
            (i32.shl
             (local.get $6)
             (i32.const 1)
            )
           )
           (i32.add
            (local.get $1)
            (i32.const 26)
           )
          )
          (if
           (i32.lt_u
            (local.tee $2
             (i32.and
              (call $~lib/util/casemap/casemap
               (local.get $1)
              )
              (i32.const 2097151)
             )
            )
            (i32.const 65536)
           )
           (i32.store16
            (i32.add
             (local.get $7)
             (i32.shl
              (local.get $6)
              (i32.const 1)
             )
            )
            (local.get $2)
           )
           (block
            (i32.store
             (i32.add
              (local.get $7)
              (i32.shl
               (local.get $6)
               (i32.const 1)
              )
             )
             (i32.or
              (i32.or
               (i32.shr_u
                (local.tee $2
                 (i32.sub
                  (local.get $2)
                  (i32.const 65536)
                 )
                )
                (i32.const 10)
               )
               (i32.const 55296)
              )
              (i32.shl
               (i32.or
                (i32.and
                 (local.get $2)
                 (i32.const 1023)
                )
                (i32.const 56320)
               )
               (i32.const 16)
              )
             )
            )
            (local.set $6
             (i32.add
              (local.get $6)
              (i32.const 1)
             )
            )
           )
          )
         )
        )
       )
      )
      (i32.store16
       (i32.add
        (local.get $7)
        (i32.shl
         (local.get $6)
         (i32.const 1)
        )
       )
       (i32.or
        (local.get $1)
        (i32.shl
         (i32.lt_u
          (i32.sub
           (local.get $1)
           (i32.const 65)
          )
          (i32.const 26)
         )
         (i32.const 5)
        )
       )
      )
     )
     (local.set $4
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
     (local.set $6
      (i32.add
       (local.get $6)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (call $~lib/rt/stub/__renew
   (local.get $7)
   (i32.shl
    (local.get $6)
    (i32.const 1)
   )
  )
 )
 (func $~lib/string/String.UTF8.byteLength (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $4
   (i32.add
    (local.get $0)
    (i32.load offset=16
     (i32.sub
      (local.get $0)
      (i32.const 20)
     )
    )
   )
  )
  (local.set $2
   (i32.ne
    (local.get $1)
    (i32.const 0)
   )
  )
  (loop $while-continue|0
   (if
    (i32.lt_u
     (local.get $0)
     (local.get $4)
    )
    (block $while-break|0
     (local.set $2
      (if (result i32)
       (i32.lt_u
        (local.tee $3
         (i32.load16_u
          (local.get $0)
         )
        )
        (i32.const 128)
       )
       (block (result i32)
        (br_if $while-break|0
         (i32.and
          (local.get $1)
          (i32.eqz
           (local.get $3)
          )
         )
        )
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (if (result i32)
        (i32.lt_u
         (local.get $3)
         (i32.const 2048)
        )
        (i32.add
         (local.get $2)
         (i32.const 2)
        )
        (block (result i32)
         (if
          (select
           (i32.gt_u
            (local.get $4)
            (i32.add
             (local.get $0)
             (i32.const 2)
            )
           )
           (i32.const 0)
           (i32.eq
            (i32.and
             (local.get $3)
             (i32.const 64512)
            )
            (i32.const 55296)
           )
          )
          (if
           (i32.eq
            (i32.and
             (i32.load16_u offset=2
              (local.get $0)
             )
             (i32.const 64512)
            )
            (i32.const 56320)
           )
           (block
            (local.set $2
             (i32.add
              (local.get $2)
              (i32.const 4)
             )
            )
            (local.set $0
             (i32.add
              (local.get $0)
              (i32.const 4)
             )
            )
            (br $while-continue|0)
           )
          )
         )
         (i32.add
          (local.get $2)
          (i32.const 3)
         )
        )
       )
      )
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 2)
      )
     )
     (br $while-continue|0)
    )
   )
  )
  (local.get $2)
 )
 (func $~lib/string/String.UTF8.encodeUnsafe (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $4
   (i32.add
    (local.get $0)
    (i32.shl
     (local.get $1)
     (i32.const 1)
    )
   )
  )
  (local.set $1
   (local.get $2)
  )
  (loop $while-continue|0
   (if
    (i32.lt_u
     (local.get $0)
     (local.get $4)
    )
    (block
     (local.set $1
      (if (result i32)
       (i32.lt_u
        (local.tee $2
         (i32.load16_u
          (local.get $0)
         )
        )
        (i32.const 128)
       )
       (block (result i32)
        (i32.store8
         (local.get $1)
         (local.get $2)
        )
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (if (result i32)
        (i32.lt_u
         (local.get $2)
         (i32.const 2048)
        )
        (block (result i32)
         (i32.store16
          (local.get $1)
          (i32.or
           (i32.or
            (i32.shr_u
             (local.get $2)
             (i32.const 6)
            )
            (i32.const 192)
           )
           (i32.shl
            (i32.or
             (i32.and
              (local.get $2)
              (i32.const 63)
             )
             (i32.const 128)
            )
            (i32.const 8)
           )
          )
         )
         (i32.add
          (local.get $1)
          (i32.const 2)
         )
        )
        (block (result i32)
         (if
          (select
           (i32.gt_u
            (local.get $4)
            (i32.add
             (local.get $0)
             (i32.const 2)
            )
           )
           (i32.const 0)
           (i32.eq
            (i32.and
             (local.get $2)
             (i32.const 64512)
            )
            (i32.const 55296)
           )
          )
          (if
           (i32.eq
            (i32.and
             (local.tee $5
              (i32.load16_u offset=2
               (local.get $0)
              )
             )
             (i32.const 64512)
            )
            (i32.const 56320)
           )
           (block
            (i32.store
             (local.get $1)
             (i32.or
              (i32.or
               (i32.or
                (i32.shl
                 (i32.or
                  (i32.and
                   (local.tee $2
                    (i32.or
                     (i32.add
                      (i32.shl
                       (i32.and
                        (local.get $2)
                        (i32.const 1023)
                       )
                       (i32.const 10)
                      )
                      (i32.const 65536)
                     )
                     (i32.and
                      (local.get $5)
                      (i32.const 1023)
                     )
                    )
                   )
                   (i32.const 63)
                  )
                  (i32.const 128)
                 )
                 (i32.const 24)
                )
                (i32.shl
                 (i32.or
                  (i32.and
                   (i32.shr_u
                    (local.get $2)
                    (i32.const 6)
                   )
                   (i32.const 63)
                  )
                  (i32.const 128)
                 )
                 (i32.const 16)
                )
               )
               (i32.shl
                (i32.or
                 (i32.and
                  (i32.shr_u
                   (local.get $2)
                   (i32.const 12)
                  )
                  (i32.const 63)
                 )
                 (i32.const 128)
                )
                (i32.const 8)
               )
              )
              (i32.or
               (i32.shr_u
                (local.get $2)
                (i32.const 18)
               )
               (i32.const 240)
              )
             )
            )
            (local.set $1
             (i32.add
              (local.get $1)
              (i32.const 4)
             )
            )
            (local.set $0
             (i32.add
              (local.get $0)
              (i32.const 4)
             )
            )
            (br $while-continue|0)
           )
          )
         )
         (i32.store16
          (local.get $1)
          (i32.or
           (i32.or
            (i32.shr_u
             (local.get $2)
             (i32.const 12)
            )
            (i32.const 224)
           )
           (i32.shl
            (i32.or
             (i32.and
              (i32.shr_u
               (local.get $2)
               (i32.const 6)
              )
              (i32.const 63)
             )
             (i32.const 128)
            )
            (i32.const 8)
           )
          )
         )
         (i32.store8 offset=2
          (local.get $1)
          (i32.or
           (i32.and
            (local.get $2)
            (i32.const 63)
           )
           (i32.const 128)
          )
         )
         (i32.add
          (local.get $1)
          (i32.const 3)
         )
        )
       )
      )
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 2)
      )
     )
     (br $while-continue|0)
    )
   )
  )
  (if
   (local.get $3)
   (i32.store8
    (local.get $1)
    (i32.const 0)
   )
  )
 )
 (func $~lib/string/String.UTF8.encode (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $2
   (call $~lib/rt/stub/__new
    (call $~lib/string/String.UTF8.byteLength
     (local.get $0)
     (local.get $1)
    )
    (i32.const 0)
   )
  )
  (call $~lib/string/String.UTF8.encodeUnsafe
   (local.get $0)
   (call $~lib/string/String#get:length
    (local.get $0)
   )
   (local.get $2)
   (local.get $1)
  )
  (local.get $2)
 )
 (func $~lib/arraybuffer/ArrayBuffer#get:byteLength (param $0 i32) (result i32)
  (i32.load offset=16
   (i32.sub
    (local.get $0)
    (i32.const 20)
   )
  )
 )
 (func $~lib/memory/memory.fill (param $0 i32) (param $1 i32)
  (local $2 i32)
  (loop $while-continue|0
   (if
    (local.get $1)
    (block
     (local.set $0
      (i32.add
       (local.tee $2
        (local.get $0)
       )
       (i32.const 1)
      )
     )
     (i32.store8
      (local.get $2)
      (i32.const 0)
     )
     (local.set $1
      (i32.sub
       (local.get $1)
       (i32.const 1)
      )
     )
     (br $while-continue|0)
    )
   )
  )
 )
 (func $~lib/array/Array<u8>#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $1
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 4)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $1)
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:rtId
   (local.get $1)
   (i32.const 0)
  )
  (if
   (i32.gt_u
    (local.get $0)
    (i32.const 1073741820)
   )
   (unreachable)
  )
  (call $~lib/memory/memory.fill
   (local.tee $3
    (call $~lib/rt/stub/__new
     (local.tee $2
      (select
       (local.get $0)
       (i32.const 8)
       (i32.gt_u
        (local.get $0)
        (i32.const 8)
       )
      )
     )
     (i32.const 0)
    )
   )
   (local.get $2)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $1)
   (local.get $3)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (local.get $3)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:rtId
   (local.get $1)
   (local.get $0)
  )
  (local.get $1)
 )
 (func $~lib/as-chain/system/assert (param $0 i32) (param $1 i32)
  (local $2 i32)
  (if
   (local.get $0)
   (return)
  )
  (local.set $0
   (call $~lib/string/String.UTF8.encode
    (local.get $1)
    (i32.const 1)
   )
  )
  (global.set $~argumentsLength
   (i32.const 1)
  )
  (local.set $2
   (call $~lib/arraybuffer/ArrayBuffer#get:byteLength
    (local.get $0)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $1
    (call $~lib/rt/stub/__new
     (i32.const 12)
     (i32.const 79)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $1)
   (i32.const 0)
  )
  (if
   (i32.or
    (i32.lt_u
     (call $~lib/arraybuffer/ArrayBuffer#get:byteLength
      (local.get $0)
     )
     (local.get $2)
    )
    (i32.gt_u
     (local.get $2)
     (i32.const 1073741820)
    )
   )
   (unreachable)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $1)
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/as-chain/env/eosio_assert
   (i32.const 0)
   (i32.load offset=4
    (local.get $1)
   )
  )
 )
 (func $~lib/as-chain/system/check (param $0 i32) (param $1 i32)
  (call $~lib/as-chain/system/assert
   (local.get $0)
   (local.get $1)
  )
 )
 (func $~lib/array/Array<u8>#__get (param $0 i32) (param $1 i32) (result i32)
  (if
   (i32.ge_u
    (local.get $1)
    (i32.load offset=12
     (local.get $0)
    )
   )
   (unreachable)
  )
  (i32.load8_u
   (i32.add
    (i32.load offset=4
     (local.get $0)
    )
    (local.get $1)
   )
  )
 )
 (func $utils/index/stringToU64 (param $0 i32) (result i64)
  (local $1 i32)
  (local $2 i32)
  (drop
   (call $~lib/as-chain/env/memcpy
    (i32.load offset=4
     (local.tee $0
      (call $~lib/array/Array<u8>#constructor
       (local.tee $2
        (call $~lib/arraybuffer/ArrayBuffer#get:byteLength
         (local.tee $1
          (call $~lib/string/String.UTF8.encode
           (call $~lib/string/String#toLowerCase
            (local.get $0)
           )
           (i32.const 0)
          )
         )
        )
       )
      )
     )
    )
    (local.get $1)
    (local.get $2)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (block (result i32)
    (if
     (i32.eqz
      (local.tee $1
       (call $~lib/rt/stub/__new
        (i32.const 4)
        (i32.const 77)
       )
      )
     )
     (local.set $1
      (call $~lib/rt/stub/__new
       (i32.const 4)
       (i32.const 78)
      )
     )
    )
    (local.get $1)
   )
   (call $~lib/array/Array<u8>#constructor
    (call $~lib/as-chain/crypto/Checksum#getSize@virtual
     (local.get $1)
    )
   )
  )
  (local.set $2
   (call $~lib/array/Array<u8>#constructor
    (i32.const 32)
   )
  )
  (call $~lib/as-chain/env/sha256
   (i32.load offset=4
    (local.get $0)
   )
   (i32.load offset=12
    (local.get $0)
   )
   (i32.load offset=4
    (local.get $2)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $1)
   (local.get $2)
  )
  (i64.or
   (i64.or
    (i64.or
     (i64.or
      (i64.or
       (i64.or
        (i64.or
         (i64.shl
          (i64.extend_i32_u
           (call $~lib/array/Array<u8>#__get
            (local.tee $0
             (i32.load
              (local.get $1)
             )
            )
            (i32.const 0)
           )
          )
          (i64.const 56)
         )
         (i64.shl
          (i64.extend_i32_u
           (call $~lib/array/Array<u8>#__get
            (local.get $0)
            (i32.const 1)
           )
          )
          (i64.const 48)
         )
        )
        (i64.shl
         (i64.extend_i32_u
          (call $~lib/array/Array<u8>#__get
           (local.get $0)
           (i32.const 2)
          )
         )
         (i64.const 40)
        )
       )
       (i64.shl
        (i64.extend_i32_u
         (call $~lib/array/Array<u8>#__get
          (local.get $0)
          (i32.const 3)
         )
        )
        (i64.const 32)
       )
      )
      (i64.shl
       (i64.extend_i32_u
        (call $~lib/array/Array<u8>#__get
         (local.get $0)
         (i32.const 4)
        )
       )
       (i64.const 24)
      )
     )
     (i64.shl
      (i64.extend_i32_u
       (call $~lib/array/Array<u8>#__get
        (local.get $0)
        (i32.const 5)
       )
      )
      (i64.const 16)
     )
    )
    (i64.shl
     (i64.extend_i32_u
      (call $~lib/array/Array<u8>#__get
       (local.get $0)
       (i32.const 6)
      )
     )
     (i64.const 8)
    )
   )
   (i64.extend_i32_u
    (call $~lib/array/Array<u8>#__get
     (local.get $0)
     (i32.const 7)
    )
   )
  )
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary (param $0 i32) (param $1 i32)
  (i32.store8 offset=8
   (local.get $0)
   (local.get $1)
  )
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#constructor (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32) (result i32)
  (local $4 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $4
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 80)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (i32.const 0)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (i64.const 0)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $4)
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (local.get $1)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (local.get $2)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (local.get $3)
  )
  (local.get $4)
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/elections.table/ElectionsTable>#find (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/elections.table/ElectionsTable>#find (result i32)
   (if
    (i32.ge_s
     (local.tee $2
      (call $~lib/as-chain/env/db_find_i64
       (i64.load
        (local.tee $0
         (i32.load
          (local.get $0)
         )
        )
       )
       (i64.load offset=8
        (local.get $0)
       )
       (i64.load offset=16
        (local.get $0)
       )
       (local.get $1)
      )
     )
     (i32.const 0)
    )
    (br $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/elections.table/ElectionsTable>#find
     (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#constructor
      (local.get $0)
      (local.get $2)
      (local.get $1)
      (i32.const 1)
     )
    )
   )
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#constructor
    (local.get $0)
    (local.get $2)
    (i64.const 0)
    (i32.const 0)
   )
  )
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk (param $0 i32) (result i32)
  (i32.ge_s
   (i32.load offset=4
    (local.get $0)
   )
   (i32.const 0)
  )
 )
 (func $~lib/as-chain/serializer/Decoder#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $1
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 81)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (i32.const 0)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $1)
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (i32.const 0)
  )
  (local.get $1)
 )
 (func $~lib/as-chain/serializer/Decoder#incPos (param $0 i32) (param $1 i32)
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $0)
   (i32.add
    (local.get $1)
    (i32.load offset=4
     (local.get $0)
    )
   )
  )
  (if
   (i32.gt_u
    (i32.load offset=4
     (local.get $0)
    )
    (i32.load offset=12
     (i32.load
      (local.get $0)
     )
    )
   )
   (call $~lib/as-chain/system/check
    (i32.const 0)
    (i32.const 12448)
   )
  )
 )
 (func $~lib/as-chain/serializer/Decoder#unpackNumber<u8> (param $0 i32) (result i32)
  (local $1 i32)
  (local.set $1
   (i32.load8_u
    (i32.add
     (i32.load offset=4
      (i32.load
       (local.get $0)
      )
     )
     (i32.load offset=4
      (local.get $0)
     )
    )
   )
  )
  (call $~lib/as-chain/serializer/Decoder#incPos
   (local.get $0)
   (i32.const 1)
  )
  (local.get $1)
 )
 (func $~lib/as-chain/serializer/Decoder#unpackLength (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (loop $while-continue|0
   (local.set $1
    (i32.or
     (local.get $1)
     (i32.shl
      (i32.and
       (local.tee $3
        (call $~lib/as-chain/serializer/Decoder#unpackNumber<u8>
         (local.get $0)
        )
       )
       (i32.const 127)
      )
      (local.get $2)
     )
    )
   )
   (local.set $2
    (i32.add
     (local.get $2)
     (i32.const 7)
    )
   )
   (local.set $4
    (i32.add
     (local.get $4)
     (i32.const 1)
    )
   )
   (br_if $while-continue|0
    (i32.and
     (local.get $3)
     (i32.const 128)
    )
   )
  )
  (local.get $1)
 )
 (func $~lib/array/Array<u8>#slice (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local.set $3
   (i32.load offset=12
    (local.get $0)
   )
  )
  (local.set $1
   (if (result i32)
    (i32.lt_s
     (local.get $1)
     (i32.const 0)
    )
    (select
     (local.tee $1
      (i32.add
       (local.get $1)
       (local.get $3)
      )
     )
     (i32.const 0)
     (i32.gt_s
      (local.get $1)
      (i32.const 0)
     )
    )
    (select
     (local.get $1)
     (local.get $3)
     (i32.lt_s
      (local.get $1)
      (local.get $3)
     )
    )
   )
  )
  (call $~lib/memory/memory.copy
   (i32.load offset=4
    (local.tee $3
     (call $~lib/rt/__newArray
      (local.tee $2
       (select
        (local.tee $2
         (i32.sub
          (if (result i32)
           (i32.lt_s
            (local.get $2)
            (i32.const 0)
           )
           (select
            (local.tee $2
             (i32.add
              (local.get $2)
              (local.get $3)
             )
            )
            (i32.const 0)
            (i32.gt_s
             (local.get $2)
             (i32.const 0)
            )
           )
           (select
            (local.get $2)
            (local.get $3)
            (i32.lt_s
             (local.get $2)
             (local.get $3)
            )
           )
          )
          (local.get $1)
         )
        )
        (i32.const 0)
        (i32.gt_s
         (local.get $2)
         (i32.const 0)
        )
       )
      )
      (i32.const 0)
      (i32.const 4)
      (i32.const 0)
     )
    )
   )
   (i32.add
    (i32.load offset=4
     (local.get $0)
    )
    (local.get $1)
   )
   (local.get $2)
  )
  (local.get $3)
 )
 (func $~lib/string/String.UTF8.decodeUnsafe (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (if
   (i32.gt_u
    (local.get $0)
    (local.tee $3
     (i32.add
      (local.get $0)
      (local.get $1)
     )
    )
   )
   (unreachable)
  )
  (local.set $1
   (local.tee $5
    (call $~lib/rt/stub/__new
     (i32.shl
      (local.get $1)
      (i32.const 1)
     )
     (i32.const 1)
    )
   )
  )
  (loop $while-continue|0
   (if
    (i32.lt_u
     (local.get $0)
     (local.get $3)
    )
    (block $while-break|0
     (local.set $2
      (i32.load8_u
       (local.get $0)
      )
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (if
      (i32.and
       (local.get $2)
       (i32.const 128)
      )
      (block
       (br_if $while-break|0
        (i32.eq
         (local.get $0)
         (local.get $3)
        )
       )
       (local.set $4
        (i32.and
         (i32.load8_u
          (local.get $0)
         )
         (i32.const 63)
        )
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (if
        (i32.eq
         (i32.and
          (local.get $2)
          (i32.const 224)
         )
         (i32.const 192)
        )
        (i32.store16
         (local.get $1)
         (i32.or
          (local.get $4)
          (i32.shl
           (i32.and
            (local.get $2)
            (i32.const 31)
           )
           (i32.const 6)
          )
         )
        )
        (block
         (br_if $while-break|0
          (i32.eq
           (local.get $0)
           (local.get $3)
          )
         )
         (local.set $6
          (i32.and
           (i32.load8_u
            (local.get $0)
           )
           (i32.const 63)
          )
         )
         (local.set $0
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
         (if
          (i32.eq
           (i32.and
            (local.get $2)
            (i32.const 240)
           )
           (i32.const 224)
          )
          (local.set $2
           (i32.or
            (local.get $6)
            (i32.or
             (i32.shl
              (i32.and
               (local.get $2)
               (i32.const 15)
              )
              (i32.const 12)
             )
             (i32.shl
              (local.get $4)
              (i32.const 6)
             )
            )
           )
          )
          (block
           (br_if $while-break|0
            (i32.eq
             (local.get $0)
             (local.get $3)
            )
           )
           (local.set $2
            (i32.or
             (i32.and
              (i32.load8_u
               (local.get $0)
              )
              (i32.const 63)
             )
             (i32.or
              (i32.or
               (i32.shl
                (i32.and
                 (local.get $2)
                 (i32.const 7)
                )
                (i32.const 18)
               )
               (i32.shl
                (local.get $4)
                (i32.const 12)
               )
              )
              (i32.shl
               (local.get $6)
               (i32.const 6)
              )
             )
            )
           )
           (local.set $0
            (i32.add
             (local.get $0)
             (i32.const 1)
            )
           )
          )
         )
         (if
          (i32.lt_u
           (local.get $2)
           (i32.const 65536)
          )
          (i32.store16
           (local.get $1)
           (local.get $2)
          )
          (block
           (i32.store
            (local.get $1)
            (i32.or
             (i32.or
              (i32.shr_u
               (local.tee $2
                (i32.sub
                 (local.get $2)
                 (i32.const 65536)
                )
               )
               (i32.const 10)
              )
              (i32.const 55296)
             )
             (i32.shl
              (i32.or
               (i32.and
                (local.get $2)
                (i32.const 1023)
               )
               (i32.const 56320)
              )
              (i32.const 16)
             )
            )
           )
           (local.set $1
            (i32.add
             (local.get $1)
             (i32.const 2)
            )
           )
          )
         )
        )
       )
      )
      (i32.store16
       (local.get $1)
       (local.get $2)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 2)
      )
     )
     (br $while-continue|0)
    )
   )
  )
  (call $~lib/rt/stub/__renew
   (local.get $5)
   (i32.sub
    (local.get $1)
    (local.get $5)
   )
  )
 )
 (func $~lib/string/String.UTF8.decode (param $0 i32) (result i32)
  (call $~lib/string/String.UTF8.decodeUnsafe
   (local.get $0)
   (call $~lib/arraybuffer/ArrayBuffer#get:byteLength
    (local.get $0)
   )
  )
 )
 (func $~lib/as-chain/serializer/Decoder#unpackString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/as-chain/serializer/Decoder#unpackLength
    (local.get $0)
   )
  )
  (local.set $2
   (call $~lib/array/Array<u8>#slice
    (i32.load
     (local.get $0)
    )
    (i32.load offset=4
     (local.get $0)
    )
    (i32.add
     (local.get $1)
     (i32.load offset=4
      (local.get $0)
     )
    )
   )
  )
  (call $~lib/as-chain/serializer/Decoder#incPos
   (local.get $0)
   (local.get $1)
  )
  (call $~lib/string/String.UTF8.decode
   (i32.load
    (local.get $2)
   )
  )
 )
 (func $~lib/as-chain/serializer/Decoder#unpackNumber<u64> (param $0 i32) (result i64)
  (local $1 i64)
  (local.set $1
   (i64.load
    (i32.add
     (i32.load offset=4
      (i32.load
       (local.get $0)
      )
     )
     (i32.load offset=4
      (local.get $0)
     )
    )
   )
  )
  (call $~lib/as-chain/serializer/Decoder#incPos
   (local.get $0)
   (i32.const 8)
  )
  (local.get $1)
 )
 (func $~lib/array/ensureCapacity (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (i32.gt_u
    (local.get $1)
    (i32.shr_u
     (local.tee $3
      (i32.load offset=8
       (local.get $0)
      )
     )
     (local.get $2)
    )
   )
   (block
    (if
     (i32.gt_u
      (local.get $1)
      (i32.shr_u
       (i32.const 1073741820)
       (local.get $2)
      )
     )
     (unreachable)
    )
    (local.set $1
     (i32.shl
      (select
       (local.get $1)
       (i32.const 8)
       (i32.gt_u
        (local.get $1)
        (i32.const 8)
       )
      )
      (local.get $2)
     )
    )
    (call $~lib/memory/memory.fill
     (i32.add
      (local.tee $2
       (call $~lib/rt/stub/__renew
        (local.tee $4
         (i32.load
          (local.get $0)
         )
        )
        (local.tee $1
         (select
          (local.tee $2
           (select
            (local.tee $2
             (i32.shl
              (local.get $3)
              (i32.const 1)
             )
            )
            (i32.const 1073741820)
            (i32.lt_u
             (local.get $2)
             (i32.const 1073741820)
            )
           )
          )
          (local.get $1)
          (i32.lt_u
           (local.get $1)
           (local.get $2)
          )
         )
        )
       )
      )
      (local.get $3)
     )
     (i32.sub
      (local.get $1)
      (local.get $3)
     )
    )
    (if
     (i32.ne
      (local.get $2)
      (local.get $4)
     )
     (block
      (i32.store
       (local.get $0)
       (local.get $2)
      )
      (i32.store offset=4
       (local.get $0)
       (local.get $2)
      )
     )
    )
    (i32.store offset=8
     (local.get $0)
     (local.get $1)
    )
   )
  )
 )
 (func $~lib/as-chain/serializer/Decoder#unpack (param $0 i32) (param $1 i32)
  (call $~lib/as-chain/serializer/Decoder#incPos
   (local.get $0)
   (call $~lib/as-chain/serializer/Packer#unpack@virtual
    (local.get $1)
    (call $~lib/array/Array<u8>#slice
     (i32.load
      (local.get $0)
     )
     (i32.load offset=4
      (local.get $0)
     )
     (i32.load offset=12
      (i32.load
       (local.get $0)
      )
     )
    )
   )
  )
 )
 (func $tables/elections.table/ElectionsTable#unpack (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.tee $2
     (call $~lib/as-chain/serializer/Decoder#constructor
      (local.get $1)
     )
    )
   )
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $2)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $2)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:registrationStartTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $2)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:registrationEndTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $2)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:candidateStakeAmount
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $2)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:voterStakeAmount
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $2)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:status
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $2)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:totalVote
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $2)
   )
  )
  (local.set $3
   (local.tee $7
    (call $~lib/as-chain/serializer/Decoder#unpackLength
     (local.get $2)
    )
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $4
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 13)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $4)
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:rtId
   (local.get $4)
   (i32.const 0)
  )
  (if
   (i32.gt_u
    (local.get $3)
    (i32.const 268435455)
   )
   (unreachable)
  )
  (call $~lib/memory/memory.fill
   (local.tee $1
    (call $~lib/rt/stub/__new
     (local.tee $6
      (i32.shl
       (select
        (local.get $3)
        (i32.const 8)
        (i32.gt_u
         (local.get $3)
         (i32.const 8)
        )
       )
       (i32.const 2)
      )
     )
     (i32.const 0)
    )
   )
   (local.get $6)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $4)
   (local.get $1)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (local.get $1)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $4)
   (local.get $6)
  )
  (call $~lib/rt/common/OBJECT#set:rtId
   (local.get $4)
   (local.get $3)
  )
  (call $tables/elections.table/ElectionsTable#set:candidates
   (local.get $0)
   (local.get $4)
  )
  (loop $for-loop|0
   (if
    (i32.lt_s
     (local.get $5)
     (local.get $7)
    )
    (block
     (call $~lib/as-chain/name/Name#set:N
      (local.tee $1
       (call $~lib/rt/stub/__new
        (i32.const 8)
        (i32.const 5)
       )
      )
      (i64.const 0)
     )
     (call $~lib/as-chain/name/Name#set:N
      (local.get $1)
      (i64.const 0)
     )
     (if
      (i32.ge_u
       (local.get $5)
       (i32.load offset=12
        (local.tee $3
         (i32.load offset=72
          (local.get $0)
         )
        )
       )
      )
      (block
       (if
        (i32.lt_s
         (local.get $5)
         (i32.const 0)
        )
        (unreachable)
       )
       (call $~lib/array/ensureCapacity
        (local.get $3)
        (local.tee $6
         (i32.add
          (local.get $5)
          (i32.const 1)
         )
        )
        (i32.const 2)
       )
       (call $~lib/rt/common/OBJECT#set:rtId
        (local.get $3)
        (local.get $6)
       )
      )
     )
     (call $~lib/array/Array<~lib/as-chain/idxdb/IDXDB>#__uset
      (local.get $3)
      (local.get $5)
      (local.get $1)
     )
     (call $~lib/as-chain/serializer/Decoder#unpack
      (local.get $2)
      (local.get $1)
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (i32.load offset=4
   (local.get $2)
  )
 )
 (func $~lib/as-chain/dbi64/DBI64<tables/elections.table/ElectionsTable>#getEx (param $0 i32) (param $1 i32) (result i32)
  (if
   (i32.eqz
    (local.tee $0
     (call $~lib/as-chain/env/db_get_i64
      (local.get $1)
      (i32.const 0)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (drop
   (call $~lib/as-chain/env/db_get_i64
    (local.get $1)
    (i32.load offset=4
     (local.tee $1
      (call $~lib/array/Array<u8>#constructor
       (local.get $0)
      )
     )
    )
    (local.get $0)
   )
  )
  (global.set $~argumentsLength
   (i32.const 0)
  )
  (drop
   (call $tables/elections.table/ElectionsTable#unpack
    (local.tee $0
     (call $tables/elections.table/ElectionsTable#constructor@varargs
      (i32.const 2512)
      (i64.const 0)
      (i64.const 0)
      (i64.const 0)
      (i64.const 0)
      (i64.const 0)
      (i64.const 0)
     )
    )
    (local.get $1)
   )
  )
  (local.get $0)
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/elections.table/ElectionsTable>#get (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (local $3 i32)
  (block $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/elections.table/ElectionsTable>#getByKey (result i32)
   (drop
    (br_if $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/elections.table/ElectionsTable>#getByKey
     (i32.const 0)
     (i32.eqz
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
       (local.tee $2
        (call $~lib/as-chain/mi/MultiIndex<tables/elections.table/ElectionsTable>#find
         (local.tee $0
          (i32.load
           (local.get $0)
          )
         )
         (local.get $1)
        )
       )
      )
     )
    )
   )
   (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/elections.table/ElectionsTable>#get (result i32)
    (local.set $3
     (i32.load
      (local.get $0)
     )
    )
    (drop
     (br_if $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/elections.table/ElectionsTable>#get
      (i32.const 0)
      (i32.eqz
       (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
        (local.tee $0
         (local.get $2)
        )
       )
      )
     )
    )
    (call $~lib/as-chain/dbi64/DBI64<tables/elections.table/ElectionsTable>#getEx
     (local.get $3)
     (i32.load offset=4
      (local.get $0)
     )
    )
   )
  )
 )
 (func $~lib/as-chain/time/Microseconds#constructor (param $0 i64) (result i32)
  (local $1 i32)
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $1
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 83)
    )
   )
   (local.get $0)
  )
  (local.get $1)
 )
 (func $~lib/as-chain/system/currentTimeSec (result i32)
  (local $0 i32)
  (local $1 i64)
  (local.set $1
   (call $~lib/as-chain/env/current_time)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $0
    (call $~lib/rt/stub/__new
     (i32.const 4)
     (i32.const 82)
    )
   )
   (call $~lib/as-chain/time/Microseconds#constructor
    (i64.const 0)
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $0)
   (call $~lib/as-chain/time/Microseconds#constructor
    (local.get $1)
   )
  )
  (i32.wrap_i64
   (i64.div_s
    (i64.load
     (i32.load
      (local.get $0)
     )
    )
    (i64.const 1000000)
   )
  )
 )
 (func $tables/elections.table/ElectionsTable#getPrimaryValue (param $0 i32) (result i64)
  (call $utils/index/stringToU64
   (i32.load
    (local.get $0)
   )
  )
 )
 (func $~lib/as-chain/serializer/Encoder#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $1
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 84)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (i32.const 0)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $1)
   (call $~lib/array/Array<u8>#constructor
    (local.get $0)
   )
  )
  (local.get $1)
 )
 (func $~lib/as-chain/varint/calcPackedVarUint32Length (param $0 i32) (result i32)
  (local $1 i32)
  (loop $while-continue|0
   (local.set $1
    (i32.add
     (local.get $1)
     (i32.const 1)
    )
   )
   (br_if $while-continue|0
    (local.tee $0
     (i32.shr_u
      (local.get $0)
      (i32.const 7)
     )
    )
   )
  )
  (local.get $1)
 )
 (func $~lib/as-chain/utils/Utils.calcPackedStringLength (param $0 i32) (result i32)
  (i32.add
   (call $~lib/as-chain/varint/calcPackedVarUint32Length
    (call $~lib/arraybuffer/ArrayBuffer#get:byteLength
     (local.tee $0
      (call $~lib/string/String.UTF8.encode
       (local.get $0)
       (i32.const 0)
      )
     )
    )
   )
   (call $~lib/arraybuffer/ArrayBuffer#get:byteLength
    (local.get $0)
   )
  )
 )
 (func $~lib/array/Array<~lib/as-chain/name/Name>#__get (param $0 i32) (param $1 i32) (result i32)
  (if
   (i32.ge_u
    (local.get $1)
    (i32.load offset=12
     (local.get $0)
    )
   )
   (unreachable)
  )
  (if
   (i32.eqz
    (local.tee $0
     (i32.load
      (i32.add
       (i32.load offset=4
        (local.get $0)
       )
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
      )
     )
    )
   )
   (unreachable)
  )
  (local.get $0)
 )
 (func $~lib/as-chain/serializer/Encoder#incPos (param $0 i32) (param $1 i32)
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $0)
   (i32.add
    (local.get $1)
    (i32.load offset=4
     (local.get $0)
    )
   )
  )
  (if
   (i32.gt_u
    (i32.load offset=4
     (local.get $0)
    )
    (i32.load offset=12
     (i32.load
      (local.get $0)
     )
    )
   )
   (call $~lib/as-chain/system/check
    (i32.const 0)
    (i32.const 13232)
   )
  )
 )
 (func $~lib/as-chain/serializer/Encoder#packNumber<u8> (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local.set $2
   (i32.load offset=4
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#incPos
   (local.get $0)
   (i32.const 1)
  )
  (i32.store8
   (i32.add
    (local.get $2)
    (i32.load offset=4
     (i32.load
      (local.get $0)
     )
    )
   )
   (local.get $1)
  )
 )
 (func $~lib/as-chain/serializer/Encoder#packLength (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (loop $while-continue|0
   (call $~lib/as-chain/serializer/Encoder#packNumber<u8>
    (local.get $0)
    (select
     (i32.or
      (local.tee $2
       (i32.and
        (local.get $1)
        (i32.const 127)
       )
      )
      (i32.const 128)
     )
     (local.get $2)
     (local.tee $1
      (i32.shr_u
       (local.get $1)
       (i32.const 7)
      )
     )
    )
   )
   (local.set $3
    (i32.add
     (local.get $3)
     (i32.const 1)
    )
   )
   (br_if $while-continue|0
    (local.get $1)
   )
  )
 )
 (func $~lib/as-chain/serializer/Encoder#packString (param $0 i32) (param $1 i32)
  (local $2 i32)
  (call $~lib/as-chain/serializer/Encoder#packLength
   (local.get $0)
   (call $~lib/arraybuffer/ArrayBuffer#get:byteLength
    (local.tee $1
     (call $~lib/string/String.UTF8.encode
      (local.get $1)
      (i32.const 0)
     )
    )
   )
  )
  (local.set $2
   (i32.add
    (i32.load offset=4
     (i32.load
      (local.get $0)
     )
    )
    (i32.load offset=4
     (local.get $0)
    )
   )
  )
  (call $~lib/as-chain/serializer/Encoder#incPos
   (local.get $0)
   (call $~lib/arraybuffer/ArrayBuffer#get:byteLength
    (local.get $1)
   )
  )
  (drop
   (call $~lib/as-chain/env/memcpy
    (local.get $2)
    (local.get $1)
    (call $~lib/arraybuffer/ArrayBuffer#get:byteLength
     (local.get $1)
    )
   )
  )
  (drop
   (call $~lib/arraybuffer/ArrayBuffer#get:byteLength
    (local.get $1)
   )
  )
 )
 (func $~lib/as-chain/serializer/Encoder#packNumber<u64> (param $0 i32) (param $1 i64)
  (local $2 i32)
  (local.set $2
   (i32.load offset=4
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#incPos
   (local.get $0)
   (i32.const 8)
  )
  (i64.store
   (i32.add
    (local.get $2)
    (i32.load offset=4
     (i32.load
      (local.get $0)
     )
    )
   )
   (local.get $1)
  )
 )
 (func $~lib/as-chain/serializer/Encoder#pack (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $1
   (i32.load offset=12
    (local.tee $2
     (call $~lib/as-chain/serializer/Packer#pack@virtual
      (local.get $1)
     )
    )
   )
  )
  (if
   (i32.lt_u
    (i32.load offset=12
     (i32.load
      (local.get $0)
     )
    )
    (i32.add
     (local.get $1)
     (i32.load offset=4
      (local.get $0)
     )
    )
   )
   (call $~lib/as-chain/system/check
    (i32.const 0)
    (i32.const 13312)
   )
  )
  (local.set $2
   (i32.load offset=4
    (local.get $2)
   )
  )
  (local.set $3
   (i32.load offset=4
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#incPos
   (local.get $0)
   (local.get $1)
  )
  (drop
   (call $~lib/as-chain/env/memcpy
    (i32.add
     (local.get $3)
     (i32.load offset=4
      (i32.load
       (local.get $0)
      )
     )
    )
    (local.get $2)
    (local.get $1)
   )
  )
 )
 (func $~lib/as-chain/serializer/Encoder#getBytes (param $0 i32) (result i32)
  (call $~lib/array/Array<u8>#slice
   (i32.load
    (local.get $0)
   )
   (i32.const 0)
   (i32.load offset=4
    (local.get $0)
   )
  )
 )
 (func $tables/elections.table/ElectionsTable#pack (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $2
   (i32.add
    (i32.add
     (i32.add
      (call $~lib/as-chain/utils/Utils.calcPackedStringLength
       (i32.load
        (local.get $0)
       )
      )
      (call $~lib/as-chain/utils/Utils.calcPackedStringLength
       (i32.load offset=56
        (local.get $0)
       )
      )
     )
     (i32.const 56)
    )
    (call $~lib/as-chain/varint/calcPackedVarUint32Length
     (i32.load offset=12
      (i32.load offset=72
       (local.get $0)
      )
     )
    )
   )
  )
  (loop $for-loop|0
   (if
    (i32.lt_s
     (local.get $1)
     (i32.load offset=12
      (i32.load offset=72
       (local.get $0)
      )
     )
    )
    (block
     (drop
      (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
       (i32.load offset=72
        (local.get $0)
       )
       (local.get $1)
      )
     )
     (local.set $2
      (i32.add
       (local.get $2)
       (i32.const 8)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.tee $1
    (call $~lib/as-chain/serializer/Encoder#constructor
     (local.get $2)
    )
   )
   (i32.load
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=8
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=16
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=24
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=32
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=40
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=48
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=56
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=64
    (local.get $0)
   )
  )
  (drop
   (i32.load offset=4
    (local.get $1)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packLength
   (local.get $1)
   (i32.load offset=12
    (local.tee $0
     (i32.load offset=72
      (local.get $0)
     )
    )
   )
  )
  (loop $for-loop|00
   (if
    (i32.lt_s
     (local.get $3)
     (i32.load offset=12
      (local.get $0)
     )
    )
    (block
     (call $~lib/as-chain/serializer/Encoder#pack
      (local.get $1)
      (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
       (local.get $0)
       (local.get $3)
      )
     )
     (local.set $3
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (br $for-loop|00)
    )
   )
  )
  (drop
   (i32.load offset=4
    (local.get $1)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#getBytes
   (local.get $1)
  )
 )
 (func $~lib/as-chain/idxdb/SecondaryValue#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $1
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 85)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (local.get $0)
  )
  (local.get $1)
 )
 (func $~lib/array/Array<u64>#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $1
    (call $~lib/rt/stub/__new
     (i32.const 16)
     (i32.const 86)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $1)
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:rtId
   (local.get $1)
   (i32.const 0)
  )
  (if
   (i32.gt_u
    (local.get $0)
    (i32.const 134217727)
   )
   (unreachable)
  )
  (call $~lib/memory/memory.fill
   (local.tee $3
    (call $~lib/rt/stub/__new
     (local.tee $2
      (i32.shl
       (select
        (local.get $0)
        (i32.const 8)
        (i32.gt_u
         (local.get $0)
         (i32.const 8)
        )
       )
       (i32.const 3)
      )
     )
     (i32.const 0)
    )
   )
   (local.get $2)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $1)
   (local.get $3)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $1)
   (local.get $3)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:rtId
   (local.get $1)
   (local.get $0)
  )
  (local.get $1)
 )
 (func $tables/elections.table/ElectionsTable#getSecondaryValue (result i32)
  (call $~lib/as-chain/system/check
   (i32.const 0)
   (i32.const 13392)
  )
  (call $~lib/as-chain/idxdb/SecondaryValue#constructor
   (call $~lib/array/Array<u64>#constructor
    (i32.const 0)
   )
  )
 )
 (func $snipvote.contract/snipvoting#createElection (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i64) (param $4 i64) (param $5 i64) (param $6 i64) (param $7 i64)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (call $~lib/as-chain/system/check
   (i32.eqz
    (call $~lib/proton-tsc/modules/store/store/TableStore<tables/elections.table/ElectionsTable>#get
     (i32.load offset=12
      (local.get $0)
     )
     (call $utils/index/stringToU64
      (local.get $1)
     )
    )
   )
   (i32.const 12544)
  )
  (call $~lib/as-chain/system/check
   (i64.gt_u
    (local.get $4)
    (i64.extend_i32_u
     (local.tee $8
      (call $~lib/as-chain/system/currentTimeSec)
     )
    )
   )
   (i32.const 12640)
  )
  (call $~lib/as-chain/system/check
   (i64.gt_u
    (local.get $5)
    (i64.extend_i32_u
     (local.get $8)
    )
   )
   (i32.const 12752)
  )
  (call $~lib/as-chain/system/check
   (i64.lt_u
    (local.get $4)
    (local.get $5)
   )
   (i32.const 12864)
  )
  (call $~lib/as-chain/system/check
   (i64.lt_u
    (local.get $2)
    (local.get $3)
   )
   (i32.const 13008)
  )
  (call $~lib/as-chain/system/check
   (i64.gt_u
    (local.get $2)
    (local.get $5)
   )
   (i32.const 13120)
  )
  (global.set $~argumentsLength
   (i32.const 8)
  )
  (local.set $1
   (call $tables/elections.table/ElectionsTable#constructor@varargs
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (local.get $5)
    (local.get $6)
    (local.get $7)
   )
  )
  (local.set $8
   (i32.load
    (local.get $0)
   )
  )
  (local.set $9
   (i32.load offset=12
    (local.get $0)
   )
  )
  (local.set $2
   (call $tables/elections.table/ElectionsTable#getPrimaryValue
    (local.get $1)
   )
  )
  (call $~lib/as-chain/system/check
   (i32.eqz
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
     (call $~lib/as-chain/mi/MultiIndex<tables/elections.table/ElectionsTable>#find
      (i32.load
       (local.get $9)
      )
      (local.get $2)
     )
    )
   )
   (i32.const 1200)
  )
  (local.set $12
   (i32.load
    (local.tee $11
     (i32.load
      (local.get $9)
     )
    )
   )
  )
  (local.set $3
   (call $tables/elections.table/ElectionsTable#getPrimaryValue
    (local.tee $0
     (local.get $1)
    )
   )
  )
  (local.set $4
   (i64.load
    (local.get $8)
   )
  )
  (local.set $13
   (i32.load offset=12
    (local.tee $1
     (call $tables/elections.table/ElectionsTable#pack
      (local.get $0)
     )
    )
   )
  )
  (drop
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#constructor
    (local.get $12)
    (call $~lib/as-chain/env/db_store_i64
     (i64.load offset=8
      (local.get $12)
     )
     (i64.load offset=16
      (local.get $12)
     )
     (local.get $4)
     (local.get $3)
     (i32.load offset=4
      (local.get $1)
     )
     (local.get $13)
    )
    (local.get $3)
    (i32.const 1)
   )
  )
  (loop $for-loop|0
   (if
    (i32.lt_s
     (local.get $10)
     (i32.load offset=12
      (i32.load offset=4
       (local.get $11)
      )
     )
    )
    (block
     (call $~lib/as-chain/idxdb/IDXDB#storeEx@virtual
      (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
       (i32.load offset=4
        (local.get $11)
       )
       (local.get $10)
      )
      (call $tables/elections.table/ElectionsTable#getPrimaryValue
       (local.get $0)
      )
      (call $tables/elections.table/ElectionsTable#getSecondaryValue)
      (i64.load
       (local.get $8)
      )
     )
     (local.set $10
      (i32.add
       (local.get $10)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (if
   (i64.ge_u
    (local.tee $3
     (call $tables/elections.table/ElectionsTable#getPrimaryValue
      (local.get $0)
     )
    )
    (i64.load offset=8
     (local.get $11)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $11)
    (select
     (i64.const -2)
     (i64.add
      (local.get $3)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $3)
      (i64.const -2)
     )
    )
   )
  )
  (if
   (i64.ge_u
    (local.get $2)
    (i64.load offset=8
     (local.get $9)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $9)
    (select
     (i64.const -2)
     (i64.add
      (local.get $2)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $2)
      (i64.const -2)
     )
    )
   )
  )
 )
 (func $~lib/as-chain/action/requireAuth (param $0 i32)
  (call $~lib/as-chain/env/require_auth
   (i64.load
    (local.get $0)
   )
  )
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#getValue (param $0 i32) (result i32)
  (if
   (i32.eqz
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
     (local.get $0)
    )
   )
   (return
    (i32.const 0)
   )
  )
  (call $~lib/as-chain/dbi64/DBI64<tables/elections.table/ElectionsTable>#getEx
   (i32.load
    (local.get $0)
   )
   (i32.load offset=4
    (local.get $0)
   )
  )
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/elections.table/ElectionsTable>#first (param $0 i32) (result i32)
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#getValue
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#constructor
    (local.tee $0
     (i32.load
      (i32.load
       (local.get $0)
      )
     )
    )
    (call $~lib/as-chain/env/db_lowerbound_i64
     (i64.load
      (local.get $0)
     )
     (i64.load offset=8
      (local.get $0)
     )
     (i64.load offset=16
      (local.get $0)
     )
     (i64.const 0)
    )
    (i64.const 0)
    (i32.const 0)
   )
  )
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/elections.table/ElectionsTable>#requireFind (param $0 i32) (param $1 i64) (param $2 i32) (result i32)
  (call $~lib/as-chain/system/check
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
    (local.tee $0
     (call $~lib/as-chain/mi/MultiIndex<tables/elections.table/ElectionsTable>#find
      (local.get $0)
      (local.get $1)
     )
    )
   )
   (local.get $2)
  )
  (local.get $0)
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/elections.table/ElectionsTable>#next (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/as-chain/mi/MultiIndex<tables/elections.table/ElectionsTable>#requireFind
    (i32.load
     (local.get $0)
    )
    (call $tables/elections.table/ElectionsTable#getPrimaryValue
     (local.get $1)
    )
    (i32.const 1872)
   )
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#getValue
   (block (result i32)
    (local.set $2
     (i32.load
      (i32.load
       (local.get $0)
      )
     )
    )
    (local.set $0
     (call $~lib/rt/stub/__alloc
      (i32.const 8)
     )
    )
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#constructor
     (local.get $2)
     (call $~lib/as-chain/env/db_next_i64
      (i32.load offset=4
       (local.get $1)
      )
      (local.get $0)
     )
     (i64.load
      (local.get $0)
     )
     (i32.const 1)
    )
   )
  )
 )
 (func $~lib/as-chain/dbi64/DBI64<tables/elections.table/ElectionsTable>#remove (param $0 i32) (param $1 i32)
  (call $~lib/as-chain/env/db_remove_i64
   (i32.load offset=4
    (local.get $1)
   )
  )
 )
 (func $~lib/as-chain/idxdb/SecondaryIterator#isOk (param $0 i32) (result i32)
  (i32.ge_s
   (i32.load
    (local.get $0)
   )
   (i32.const 0)
  )
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/candidates.table/CandidatesTable>#constructor (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32) (result i32)
  (local $4 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $4
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 89)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (i32.const 0)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (i64.const 0)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $4)
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (local.get $1)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (local.get $2)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (local.get $3)
  )
  (local.get $4)
 )
 (func $tables/candidates.table/CandidatesTable#unpack (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/as-chain/serializer/Decoder#constructor
    (local.get $1)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $0)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (call $tables/candidates.table/CandidatesTable#set:status
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:registrationEndTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (i32.load offset=4
   (local.get $1)
  )
 )
 (func $~lib/as-chain/dbi64/DBI64<tables/candidates.table/CandidatesTable>#getEx (param $0 i32) (param $1 i32) (result i32)
  (if
   (i32.eqz
    (local.tee $0
     (call $~lib/as-chain/env/db_get_i64
      (local.get $1)
      (i32.const 0)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (drop
   (call $~lib/as-chain/env/db_get_i64
    (local.get $1)
    (i32.load offset=4
     (local.tee $1
      (call $~lib/array/Array<u8>#constructor
       (local.get $0)
      )
     )
    )
    (local.get $0)
   )
  )
  (global.set $~argumentsLength
   (i32.const 0)
  )
  (drop
   (call $tables/candidates.table/CandidatesTable#unpack
    (local.tee $0
     (call $tables/candidates.table/CandidatesTable#constructor@varargs)
    )
    (local.get $1)
   )
  )
  (local.get $0)
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/candidates.table/CandidatesTable>#getValue (param $0 i32) (result i32)
  (if
   (i32.eqz
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
     (local.get $0)
    )
   )
   (return
    (i32.const 0)
   )
  )
  (call $~lib/as-chain/dbi64/DBI64<tables/candidates.table/CandidatesTable>#getEx
   (i32.load
    (local.get $0)
   )
   (i32.load offset=4
    (local.get $0)
   )
  )
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/candidates.table/CandidatesTable>#first (param $0 i32) (result i32)
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/candidates.table/CandidatesTable>#getValue
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/candidates.table/CandidatesTable>#constructor
    (local.tee $0
     (i32.load
      (i32.load
       (local.get $0)
      )
     )
    )
    (call $~lib/as-chain/env/db_lowerbound_i64
     (i64.load
      (local.get $0)
     )
     (i64.load offset=8
      (local.get $0)
     )
     (i64.load offset=16
      (local.get $0)
     )
     (i64.const 0)
    )
    (i64.const 0)
    (i32.const 0)
   )
  )
 )
 (func $tables/candidates.table/CandidatesTable#getPrimaryValue (param $0 i32) (result i64)
  (i64.add
   (i64.load
    (i32.load
     (local.get $0)
    )
   )
   (call $utils/index/stringToU64
    (i32.load offset=8
     (local.get $0)
    )
   )
  )
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/candidates.table/CandidatesTable>#find (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/candidates.table/CandidatesTable>#find (result i32)
   (if
    (i32.ge_s
     (local.tee $2
      (call $~lib/as-chain/env/db_find_i64
       (i64.load
        (local.tee $0
         (i32.load
          (local.get $0)
         )
        )
       )
       (i64.load offset=8
        (local.get $0)
       )
       (i64.load offset=16
        (local.get $0)
       )
       (local.get $1)
      )
     )
     (i32.const 0)
    )
    (br $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/candidates.table/CandidatesTable>#find
     (call $~lib/as-chain/dbi64/PrimaryIterator<tables/candidates.table/CandidatesTable>#constructor
      (local.get $0)
      (local.get $2)
      (local.get $1)
      (i32.const 1)
     )
    )
   )
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/candidates.table/CandidatesTable>#constructor
    (local.get $0)
    (local.get $2)
    (i64.const 0)
    (i32.const 0)
   )
  )
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/candidates.table/CandidatesTable>#requireFind (param $0 i32) (param $1 i64) (param $2 i32) (result i32)
  (call $~lib/as-chain/system/check
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
    (local.tee $0
     (call $~lib/as-chain/mi/MultiIndex<tables/candidates.table/CandidatesTable>#find
      (local.get $0)
      (local.get $1)
     )
    )
   )
   (local.get $2)
  )
  (local.get $0)
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/candidates.table/CandidatesTable>#next (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/as-chain/mi/MultiIndex<tables/candidates.table/CandidatesTable>#requireFind
    (i32.load
     (local.get $0)
    )
    (call $tables/candidates.table/CandidatesTable#getPrimaryValue
     (local.get $1)
    )
    (i32.const 1872)
   )
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/candidates.table/CandidatesTable>#getValue
   (block (result i32)
    (local.set $2
     (i32.load
      (i32.load
       (local.get $0)
      )
     )
    )
    (local.set $0
     (call $~lib/rt/stub/__alloc
      (i32.const 8)
     )
    )
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/candidates.table/CandidatesTable>#constructor
     (local.get $2)
     (call $~lib/as-chain/env/db_next_i64
      (i32.load offset=4
       (local.get $1)
      )
      (local.get $0)
     )
     (i64.load
      (local.get $0)
     )
     (i32.const 1)
    )
   )
  )
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/candidates.table/CandidatesTable>#remove (param $0 i32) (param $1 i32)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local.set $2
   (call $tables/candidates.table/CandidatesTable#getPrimaryValue
    (local.get $1)
   )
  )
  (drop
   (call $~lib/as-chain/mi/MultiIndex<tables/candidates.table/CandidatesTable>#requireFind
    (i32.load
     (local.get $0)
    )
    (local.get $2)
    (i32.const 1648)
   )
  )
  (local.set $1
   (i32.const 0)
  )
  (call $~lib/as-chain/system/check
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
    (local.tee $4
     (call $~lib/as-chain/mi/MultiIndex<tables/candidates.table/CandidatesTable>#find
      (local.tee $3
       (i32.load
        (local.get $0)
       )
      )
      (local.get $2)
     )
    )
   )
   (i32.const 13456)
  )
  (call $~lib/as-chain/dbi64/DBI64<tables/elections.table/ElectionsTable>#remove
   (i32.load
    (local.get $3)
   )
   (local.get $4)
  )
  (loop $for-loop|0
   (if
    (i32.lt_s
     (local.get $1)
     (i32.load offset=12
      (i32.load offset=4
       (local.get $3)
      )
     )
    )
    (block
     (if
      (call $~lib/as-chain/idxdb/SecondaryIterator#isOk
       (i32.load
        (local.tee $4
         (call $~lib/as-chain/idxdb/IDXDB#findPrimaryEx@virtual
          (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
           (i32.load offset=4
            (local.get $3)
           )
           (local.get $1)
          )
          (local.get $2)
         )
        )
       )
      )
      (call $~lib/as-chain/idxdb/IDXDB#remove@virtual
       (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
        (i32.load offset=4
         (local.get $3)
        )
        (local.get $1)
       )
       (i32.load
        (local.get $4)
       )
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (if
   (i64.eq
    (local.get $2)
    (i64.sub
     (i64.load offset=8
      (local.get $0)
     )
     (i64.const 1)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $0)
    (i64.const -1)
   )
  )
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/voters.table/VotersTable>#constructor (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32) (result i32)
  (local $4 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $4
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 90)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (i32.const 0)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (i64.const 0)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $4)
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (local.get $1)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (local.get $2)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (local.get $3)
  )
  (local.get $4)
 )
 (func $tables/voters.table/VotersTable#unpack (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/as-chain/serializer/Decoder#constructor
    (local.get $1)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $0)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:rtId
   (local.get $0)
   (local.get $2)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (i32.load offset=4
   (local.get $1)
  )
 )
 (func $~lib/as-chain/dbi64/DBI64<tables/voters.table/VotersTable>#getEx (param $0 i32) (param $1 i32) (result i32)
  (if
   (i32.eqz
    (local.tee $0
     (call $~lib/as-chain/env/db_get_i64
      (local.get $1)
      (i32.const 0)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (drop
   (call $~lib/as-chain/env/db_get_i64
    (local.get $1)
    (i32.load offset=4
     (local.tee $1
      (call $~lib/array/Array<u8>#constructor
       (local.get $0)
      )
     )
    )
    (local.get $0)
   )
  )
  (global.set $~argumentsLength
   (i32.const 0)
  )
  (drop
   (call $tables/voters.table/VotersTable#unpack
    (local.tee $0
     (call $tables/voters.table/VotersTable#constructor@varargs)
    )
    (local.get $1)
   )
  )
  (local.get $0)
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/voters.table/VotersTable>#getValue (param $0 i32) (result i32)
  (if
   (i32.eqz
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
     (local.get $0)
    )
   )
   (return
    (i32.const 0)
   )
  )
  (call $~lib/as-chain/dbi64/DBI64<tables/voters.table/VotersTable>#getEx
   (i32.load
    (local.get $0)
   )
   (i32.load offset=4
    (local.get $0)
   )
  )
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/voters.table/VotersTable>#find (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/voters.table/VotersTable>#find (result i32)
   (if
    (i32.ge_s
     (local.tee $2
      (call $~lib/as-chain/env/db_find_i64
       (i64.load
        (local.tee $0
         (i32.load
          (local.get $0)
         )
        )
       )
       (i64.load offset=8
        (local.get $0)
       )
       (i64.load offset=16
        (local.get $0)
       )
       (local.get $1)
      )
     )
     (i32.const 0)
    )
    (br $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/voters.table/VotersTable>#find
     (call $~lib/as-chain/dbi64/PrimaryIterator<tables/voters.table/VotersTable>#constructor
      (local.get $0)
      (local.get $2)
      (local.get $1)
      (i32.const 1)
     )
    )
   )
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/voters.table/VotersTable>#constructor
    (local.get $0)
    (local.get $2)
    (i64.const 0)
    (i32.const 0)
   )
  )
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/voters.table/VotersTable>#requireFind (param $0 i32) (param $1 i64) (param $2 i32) (result i32)
  (call $~lib/as-chain/system/check
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
    (local.tee $0
     (call $~lib/as-chain/mi/MultiIndex<tables/voters.table/VotersTable>#find
      (local.get $0)
      (local.get $1)
     )
    )
   )
   (local.get $2)
  )
  (local.get $0)
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/winners.table/WinnersTable>#constructor (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32) (result i32)
  (local $4 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $4
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 91)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (i32.const 0)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (i64.const 0)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $4)
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (local.get $1)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (local.get $2)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (local.get $3)
  )
  (local.get $4)
 )
 (func $tables/winners.table/WinnersTable#unpack (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/as-chain/serializer/Decoder#constructor
    (local.get $1)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $0)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (call $~lib/rt/common/OBJECT#set:rtSize
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $tables/winners.table/WinnersTable#set:rank
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u8>
    (local.get $1)
   )
  )
  (call $tables/winners.table/WinnersTable#set:isFoundingMember
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u8>
    (local.get $1)
   )
  )
  (call $tables/candidates.table/CandidatesTable#set:status
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (i32.load offset=4
   (local.get $1)
  )
 )
 (func $~lib/as-chain/dbi64/DBI64<tables/winners.table/WinnersTable>#getEx (param $0 i32) (param $1 i32) (result i32)
  (if
   (i32.eqz
    (local.tee $0
     (call $~lib/as-chain/env/db_get_i64
      (local.get $1)
      (i32.const 0)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (drop
   (call $~lib/as-chain/env/db_get_i64
    (local.get $1)
    (i32.load offset=4
     (local.tee $1
      (call $~lib/array/Array<u8>#constructor
       (local.get $0)
      )
     )
    )
    (local.get $0)
   )
  )
  (global.set $~argumentsLength
   (i32.const 0)
  )
  (drop
   (call $tables/winners.table/WinnersTable#unpack
    (local.tee $0
     (call $tables/winners.table/WinnersTable#constructor@varargs)
    )
    (local.get $1)
   )
  )
  (local.get $0)
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/winners.table/WinnersTable>#getValue (param $0 i32) (result i32)
  (if
   (i32.eqz
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
     (local.get $0)
    )
   )
   (return
    (i32.const 0)
   )
  )
  (call $~lib/as-chain/dbi64/DBI64<tables/winners.table/WinnersTable>#getEx
   (i32.load
    (local.get $0)
   )
   (i32.load offset=4
    (local.get $0)
   )
  )
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/winners.table/WinnersTable>#first (param $0 i32) (result i32)
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/winners.table/WinnersTable>#getValue
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/winners.table/WinnersTable>#constructor
    (local.tee $0
     (i32.load
      (i32.load
       (local.get $0)
      )
     )
    )
    (call $~lib/as-chain/env/db_lowerbound_i64
     (i64.load
      (local.get $0)
     )
     (i64.load offset=8
      (local.get $0)
     )
     (i64.load offset=16
      (local.get $0)
     )
     (i64.const 0)
    )
    (i64.const 0)
    (i32.const 0)
   )
  )
 )
 (func $tables/winners.table/WinnersTable#getPrimaryValue (param $0 i32) (result i64)
  (i64.add
   (i64.load
    (i32.load
     (local.get $0)
    )
   )
   (call $utils/index/stringToU64
    (i32.load offset=16
     (local.get $0)
    )
   )
  )
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/winners.table/WinnersTable>#find (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/winners.table/WinnersTable>#find (result i32)
   (if
    (i32.ge_s
     (local.tee $2
      (call $~lib/as-chain/env/db_find_i64
       (i64.load
        (local.tee $0
         (i32.load
          (local.get $0)
         )
        )
       )
       (i64.load offset=8
        (local.get $0)
       )
       (i64.load offset=16
        (local.get $0)
       )
       (local.get $1)
      )
     )
     (i32.const 0)
    )
    (br $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/winners.table/WinnersTable>#find
     (call $~lib/as-chain/dbi64/PrimaryIterator<tables/winners.table/WinnersTable>#constructor
      (local.get $0)
      (local.get $2)
      (local.get $1)
      (i32.const 1)
     )
    )
   )
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/winners.table/WinnersTable>#constructor
    (local.get $0)
    (local.get $2)
    (i64.const 0)
    (i32.const 0)
   )
  )
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/winners.table/WinnersTable>#requireFind (param $0 i32) (param $1 i64) (param $2 i32) (result i32)
  (call $~lib/as-chain/system/check
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
    (local.tee $0
     (call $~lib/as-chain/mi/MultiIndex<tables/winners.table/WinnersTable>#find
      (local.get $0)
      (local.get $1)
     )
    )
   )
   (local.get $2)
  )
  (local.get $0)
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/winners.table/WinnersTable>#next (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/as-chain/mi/MultiIndex<tables/winners.table/WinnersTable>#requireFind
    (i32.load
     (local.get $0)
    )
    (call $tables/winners.table/WinnersTable#getPrimaryValue
     (local.get $1)
    )
    (i32.const 1872)
   )
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/winners.table/WinnersTable>#getValue
   (block (result i32)
    (local.set $2
     (i32.load
      (i32.load
       (local.get $0)
      )
     )
    )
    (local.set $0
     (call $~lib/rt/stub/__alloc
      (i32.const 8)
     )
    )
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/winners.table/WinnersTable>#constructor
     (local.get $2)
     (call $~lib/as-chain/env/db_next_i64
      (i32.load offset=4
       (local.get $1)
      )
      (local.get $0)
     )
     (i64.load
      (local.get $0)
     )
     (i32.const 1)
    )
   )
  )
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/winners.table/WinnersTable>#remove (param $0 i32) (param $1 i32)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local.set $2
   (call $tables/winners.table/WinnersTable#getPrimaryValue
    (local.get $1)
   )
  )
  (drop
   (call $~lib/as-chain/mi/MultiIndex<tables/winners.table/WinnersTable>#requireFind
    (i32.load
     (local.get $0)
    )
    (local.get $2)
    (i32.const 1648)
   )
  )
  (local.set $1
   (i32.const 0)
  )
  (call $~lib/as-chain/system/check
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
    (local.tee $4
     (call $~lib/as-chain/mi/MultiIndex<tables/winners.table/WinnersTable>#find
      (local.tee $3
       (i32.load
        (local.get $0)
       )
      )
      (local.get $2)
     )
    )
   )
   (i32.const 13456)
  )
  (call $~lib/as-chain/dbi64/DBI64<tables/elections.table/ElectionsTable>#remove
   (i32.load
    (local.get $3)
   )
   (local.get $4)
  )
  (loop $for-loop|0
   (if
    (i32.lt_s
     (local.get $1)
     (i32.load offset=12
      (i32.load offset=4
       (local.get $3)
      )
     )
    )
    (block
     (if
      (call $~lib/as-chain/idxdb/SecondaryIterator#isOk
       (i32.load
        (local.tee $4
         (call $~lib/as-chain/idxdb/IDXDB#findPrimaryEx@virtual
          (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
           (i32.load offset=4
            (local.get $3)
           )
           (local.get $1)
          )
          (local.get $2)
         )
        )
       )
      )
      (call $~lib/as-chain/idxdb/IDXDB#remove@virtual
       (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
        (i32.load offset=4
         (local.get $3)
        )
        (local.get $1)
       )
       (i32.load
        (local.get $4)
       )
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (if
   (i64.eq
    (local.get $2)
    (i64.sub
     (i64.load offset=8
      (local.get $0)
     )
     (i64.const 1)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $0)
    (i64.const -1)
   )
  )
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/recallVote.table/RecallVotesTable>#constructor (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32) (result i32)
  (local $4 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $4
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 92)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (i32.const 0)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (i64.const 0)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $4)
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (local.get $1)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (local.get $2)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (local.get $3)
  )
  (local.get $4)
 )
 (func $tables/recallVote.table/RecallVotesTable#unpack (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/as-chain/serializer/Decoder#constructor
    (local.get $1)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $0)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:registrationStartTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:registrationEndTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:candidateStakeAmount
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (call $tables/recallVote.table/RecallVotesTable#set:status
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (i32.load offset=4
   (local.get $1)
  )
 )
 (func $~lib/as-chain/dbi64/DBI64<tables/recallVote.table/RecallVotesTable>#getEx (param $0 i32) (param $1 i32) (result i32)
  (if
   (i32.eqz
    (local.tee $0
     (call $~lib/as-chain/env/db_get_i64
      (local.get $1)
      (i32.const 0)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (drop
   (call $~lib/as-chain/env/db_get_i64
    (local.get $1)
    (i32.load offset=4
     (local.tee $1
      (call $~lib/array/Array<u8>#constructor
       (local.get $0)
      )
     )
    )
    (local.get $0)
   )
  )
  (global.set $~argumentsLength
   (i32.const 0)
  )
  (drop
   (call $tables/recallVote.table/RecallVotesTable#unpack
    (local.tee $0
     (call $tables/recallVote.table/RecallVotesTable#constructor@varargs)
    )
    (local.get $1)
   )
  )
  (local.get $0)
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/recallVote.table/RecallVotesTable>#getValue (param $0 i32) (result i32)
  (if
   (i32.eqz
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
     (local.get $0)
    )
   )
   (return
    (i32.const 0)
   )
  )
  (call $~lib/as-chain/dbi64/DBI64<tables/recallVote.table/RecallVotesTable>#getEx
   (i32.load
    (local.get $0)
   )
   (i32.load offset=4
    (local.get $0)
   )
  )
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/recallVote.table/RecallVotesTable>#first (param $0 i32) (result i32)
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/recallVote.table/RecallVotesTable>#getValue
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/recallVote.table/RecallVotesTable>#constructor
    (local.tee $0
     (i32.load
      (i32.load
       (local.get $0)
      )
     )
    )
    (call $~lib/as-chain/env/db_lowerbound_i64
     (i64.load
      (local.get $0)
     )
     (i64.load offset=8
      (local.get $0)
     )
     (i64.load offset=16
      (local.get $0)
     )
     (i64.const 0)
    )
    (i64.const 0)
    (i32.const 0)
   )
  )
 )
 (func $tables/recallVote.table/RecallVotesTable#getPrimaryValue (param $0 i32) (result i64)
  (i64.add
   (i64.load
    (i32.load
     (local.get $0)
    )
   )
   (call $utils/index/stringToU64
    (i32.load offset=4
     (local.get $0)
    )
   )
  )
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/recallVote.table/RecallVotesTable>#find (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/recallVote.table/RecallVotesTable>#find (result i32)
   (if
    (i32.ge_s
     (local.tee $2
      (call $~lib/as-chain/env/db_find_i64
       (i64.load
        (local.tee $0
         (i32.load
          (local.get $0)
         )
        )
       )
       (i64.load offset=8
        (local.get $0)
       )
       (i64.load offset=16
        (local.get $0)
       )
       (local.get $1)
      )
     )
     (i32.const 0)
    )
    (br $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/recallVote.table/RecallVotesTable>#find
     (call $~lib/as-chain/dbi64/PrimaryIterator<tables/recallVote.table/RecallVotesTable>#constructor
      (local.get $0)
      (local.get $2)
      (local.get $1)
      (i32.const 1)
     )
    )
   )
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/recallVote.table/RecallVotesTable>#constructor
    (local.get $0)
    (local.get $2)
    (i64.const 0)
    (i32.const 0)
   )
  )
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/recallVote.table/RecallVotesTable>#requireFind (param $0 i32) (param $1 i64) (param $2 i32) (result i32)
  (call $~lib/as-chain/system/check
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
    (local.tee $0
     (call $~lib/as-chain/mi/MultiIndex<tables/recallVote.table/RecallVotesTable>#find
      (local.get $0)
      (local.get $1)
     )
    )
   )
   (local.get $2)
  )
  (local.get $0)
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/recallVote.table/RecallVotesTable>#next (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/as-chain/mi/MultiIndex<tables/recallVote.table/RecallVotesTable>#requireFind
    (i32.load
     (local.get $0)
    )
    (call $tables/recallVote.table/RecallVotesTable#getPrimaryValue
     (local.get $1)
    )
    (i32.const 1872)
   )
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/recallVote.table/RecallVotesTable>#getValue
   (block (result i32)
    (local.set $2
     (i32.load
      (i32.load
       (local.get $0)
      )
     )
    )
    (local.set $0
     (call $~lib/rt/stub/__alloc
      (i32.const 8)
     )
    )
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/recallVote.table/RecallVotesTable>#constructor
     (local.get $2)
     (call $~lib/as-chain/env/db_next_i64
      (i32.load offset=4
       (local.get $1)
      )
      (local.get $0)
     )
     (i64.load
      (local.get $0)
     )
     (i32.const 1)
    )
   )
  )
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/recallVote.table/RecallVotesTable>#remove (param $0 i32) (param $1 i32)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local.set $2
   (call $tables/recallVote.table/RecallVotesTable#getPrimaryValue
    (local.get $1)
   )
  )
  (drop
   (call $~lib/as-chain/mi/MultiIndex<tables/recallVote.table/RecallVotesTable>#requireFind
    (i32.load
     (local.get $0)
    )
    (local.get $2)
    (i32.const 1648)
   )
  )
  (local.set $1
   (i32.const 0)
  )
  (call $~lib/as-chain/system/check
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
    (local.tee $4
     (call $~lib/as-chain/mi/MultiIndex<tables/recallVote.table/RecallVotesTable>#find
      (local.tee $3
       (i32.load
        (local.get $0)
       )
      )
      (local.get $2)
     )
    )
   )
   (i32.const 13456)
  )
  (call $~lib/as-chain/dbi64/DBI64<tables/elections.table/ElectionsTable>#remove
   (i32.load
    (local.get $3)
   )
   (local.get $4)
  )
  (loop $for-loop|0
   (if
    (i32.lt_s
     (local.get $1)
     (i32.load offset=12
      (i32.load offset=4
       (local.get $3)
      )
     )
    )
    (block
     (if
      (call $~lib/as-chain/idxdb/SecondaryIterator#isOk
       (i32.load
        (local.tee $4
         (call $~lib/as-chain/idxdb/IDXDB#findPrimaryEx@virtual
          (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
           (i32.load offset=4
            (local.get $3)
           )
           (local.get $1)
          )
          (local.get $2)
         )
        )
       )
      )
      (call $~lib/as-chain/idxdb/IDXDB#remove@virtual
       (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
        (i32.load offset=4
         (local.get $3)
        )
        (local.get $1)
       )
       (i32.load
        (local.get $4)
       )
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (if
   (i64.eq
    (local.get $2)
    (i64.sub
     (i64.load offset=8
      (local.get $0)
     )
     (i64.const 1)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $0)
    (i64.const -1)
   )
  )
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/recallVoters.table/RecallVotersTable>#constructor (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32) (result i32)
  (local $4 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $4
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 93)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (i32.const 0)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (i64.const 0)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $4)
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (local.get $1)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (local.get $2)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (local.get $3)
  )
  (local.get $4)
 )
 (func $tables/recallVoters.table/RecallVotersTable#unpack (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/as-chain/serializer/Decoder#constructor
    (local.get $1)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $0)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $0)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:rtId
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $tables/recallVoters.table/RecallVotersTable#set:votedToReplace
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u8>
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:registrationStartTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (i32.load offset=4
   (local.get $1)
  )
 )
 (func $~lib/as-chain/dbi64/DBI64<tables/recallVoters.table/RecallVotersTable>#getEx (param $0 i32) (param $1 i32) (result i32)
  (if
   (i32.eqz
    (local.tee $0
     (call $~lib/as-chain/env/db_get_i64
      (local.get $1)
      (i32.const 0)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (drop
   (call $~lib/as-chain/env/db_get_i64
    (local.get $1)
    (i32.load offset=4
     (local.tee $1
      (call $~lib/array/Array<u8>#constructor
       (local.get $0)
      )
     )
    )
    (local.get $0)
   )
  )
  (global.set $~argumentsLength
   (i32.const 0)
  )
  (drop
   (call $tables/recallVoters.table/RecallVotersTable#unpack
    (local.tee $0
     (call $tables/recallVoters.table/RecallVotersTable#constructor@varargs)
    )
    (local.get $1)
   )
  )
  (local.get $0)
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/recallVoters.table/RecallVotersTable>#getValue (param $0 i32) (result i32)
  (if
   (i32.eqz
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
     (local.get $0)
    )
   )
   (return
    (i32.const 0)
   )
  )
  (call $~lib/as-chain/dbi64/DBI64<tables/recallVoters.table/RecallVotersTable>#getEx
   (i32.load
    (local.get $0)
   )
   (i32.load offset=4
    (local.get $0)
   )
  )
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/recallVoters.table/RecallVotersTable>#first (param $0 i32) (result i32)
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/recallVoters.table/RecallVotersTable>#getValue
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/recallVoters.table/RecallVotersTable>#constructor
    (local.tee $0
     (i32.load
      (i32.load
       (local.get $0)
      )
     )
    )
    (call $~lib/as-chain/env/db_lowerbound_i64
     (i64.load
      (local.get $0)
     )
     (i64.load offset=8
      (local.get $0)
     )
     (i64.load offset=16
      (local.get $0)
     )
     (i64.const 0)
    )
    (i64.const 0)
    (i32.const 0)
   )
  )
 )
 (func $tables/recallVoters.table/RecallVotersTable#getPrimaryValue (param $0 i32) (result i64)
  (i64.add
   (i64.load
    (i32.load
     (local.get $0)
    )
   )
   (call $utils/index/stringToU64
    (i32.load offset=12
     (local.get $0)
    )
   )
  )
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/recallVoters.table/RecallVotersTable>#find (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/recallVoters.table/RecallVotersTable>#find (result i32)
   (if
    (i32.ge_s
     (local.tee $2
      (call $~lib/as-chain/env/db_find_i64
       (i64.load
        (local.tee $0
         (i32.load
          (local.get $0)
         )
        )
       )
       (i64.load offset=8
        (local.get $0)
       )
       (i64.load offset=16
        (local.get $0)
       )
       (local.get $1)
      )
     )
     (i32.const 0)
    )
    (br $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/recallVoters.table/RecallVotersTable>#find
     (call $~lib/as-chain/dbi64/PrimaryIterator<tables/recallVoters.table/RecallVotersTable>#constructor
      (local.get $0)
      (local.get $2)
      (local.get $1)
      (i32.const 1)
     )
    )
   )
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/recallVoters.table/RecallVotersTable>#constructor
    (local.get $0)
    (local.get $2)
    (i64.const 0)
    (i32.const 0)
   )
  )
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/recallVoters.table/RecallVotersTable>#requireFind (param $0 i32) (param $1 i64) (param $2 i32) (result i32)
  (call $~lib/as-chain/system/check
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
    (local.tee $0
     (call $~lib/as-chain/mi/MultiIndex<tables/recallVoters.table/RecallVotersTable>#find
      (local.get $0)
      (local.get $1)
     )
    )
   )
   (local.get $2)
  )
  (local.get $0)
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/recallVoters.table/RecallVotersTable>#next (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/as-chain/mi/MultiIndex<tables/recallVoters.table/RecallVotersTable>#requireFind
    (i32.load
     (local.get $0)
    )
    (call $tables/recallVoters.table/RecallVotersTable#getPrimaryValue
     (local.get $1)
    )
    (i32.const 1872)
   )
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/recallVoters.table/RecallVotersTable>#getValue
   (block (result i32)
    (local.set $2
     (i32.load
      (i32.load
       (local.get $0)
      )
     )
    )
    (local.set $0
     (call $~lib/rt/stub/__alloc
      (i32.const 8)
     )
    )
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/recallVoters.table/RecallVotersTable>#constructor
     (local.get $2)
     (call $~lib/as-chain/env/db_next_i64
      (i32.load offset=4
       (local.get $1)
      )
      (local.get $0)
     )
     (i64.load
      (local.get $0)
     )
     (i32.const 1)
    )
   )
  )
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/recallVoters.table/RecallVotersTable>#remove (param $0 i32) (param $1 i32)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local.set $2
   (call $tables/recallVoters.table/RecallVotersTable#getPrimaryValue
    (local.get $1)
   )
  )
  (drop
   (call $~lib/as-chain/mi/MultiIndex<tables/recallVoters.table/RecallVotersTable>#requireFind
    (i32.load
     (local.get $0)
    )
    (local.get $2)
    (i32.const 1648)
   )
  )
  (local.set $1
   (i32.const 0)
  )
  (call $~lib/as-chain/system/check
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
    (local.tee $4
     (call $~lib/as-chain/mi/MultiIndex<tables/recallVoters.table/RecallVotersTable>#find
      (local.tee $3
       (i32.load
        (local.get $0)
       )
      )
      (local.get $2)
     )
    )
   )
   (i32.const 13456)
  )
  (call $~lib/as-chain/dbi64/DBI64<tables/elections.table/ElectionsTable>#remove
   (i32.load
    (local.get $3)
   )
   (local.get $4)
  )
  (loop $for-loop|0
   (if
    (i32.lt_s
     (local.get $1)
     (i32.load offset=12
      (i32.load offset=4
       (local.get $3)
      )
     )
    )
    (block
     (if
      (call $~lib/as-chain/idxdb/SecondaryIterator#isOk
       (i32.load
        (local.tee $4
         (call $~lib/as-chain/idxdb/IDXDB#findPrimaryEx@virtual
          (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
           (i32.load offset=4
            (local.get $3)
           )
           (local.get $1)
          )
          (local.get $2)
         )
        )
       )
      )
      (call $~lib/as-chain/idxdb/IDXDB#remove@virtual
       (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
        (i32.load offset=4
         (local.get $3)
        )
        (local.get $1)
       )
       (i32.load
        (local.get $4)
       )
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (if
   (i64.eq
    (local.get $2)
    (i64.sub
     (i64.load offset=8
      (local.get $0)
     )
     (i64.const 1)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $0)
    (i64.const -1)
   )
  )
 )
 (func $snipvote.contract/snipvoting#clearAllTables (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  (call $~lib/as-chain/action/requireAuth
   (i32.load
    (local.get $0)
   )
  )
  (local.set $1
   (call $~lib/proton-tsc/modules/store/store/TableStore<tables/elections.table/ElectionsTable>#first
    (i32.load offset=12
     (local.get $0)
    )
   )
  )
  (loop $while-continue|0
   (if
    (local.get $1)
    (block
     (local.set $2
      (call $~lib/proton-tsc/modules/store/store/TableStore<tables/elections.table/ElectionsTable>#next
       (i32.load offset=12
        (local.get $0)
       )
       (local.get $1)
      )
     )
     (local.set $3
      (i32.load offset=12
       (local.get $0)
      )
     )
     (local.set $5
      (call $tables/elections.table/ElectionsTable#getPrimaryValue
       (local.get $1)
      )
     )
     (drop
      (call $~lib/as-chain/mi/MultiIndex<tables/elections.table/ElectionsTable>#requireFind
       (i32.load
        (local.get $3)
       )
       (local.get $5)
       (i32.const 1648)
      )
     )
     (local.set $1
      (i32.const 0)
     )
     (call $~lib/as-chain/system/check
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
       (local.tee $6
        (call $~lib/as-chain/mi/MultiIndex<tables/elections.table/ElectionsTable>#find
         (local.tee $4
          (i32.load
           (local.get $3)
          )
         )
         (local.get $5)
        )
       )
      )
      (i32.const 13456)
     )
     (call $~lib/as-chain/dbi64/DBI64<tables/elections.table/ElectionsTable>#remove
      (i32.load
       (local.get $4)
      )
      (local.get $6)
     )
     (loop $for-loop|0
      (if
       (i32.lt_s
        (local.get $1)
        (i32.load offset=12
         (i32.load offset=4
          (local.get $4)
         )
        )
       )
       (block
        (if
         (call $~lib/as-chain/idxdb/SecondaryIterator#isOk
          (i32.load
           (local.tee $6
            (call $~lib/as-chain/idxdb/IDXDB#findPrimaryEx@virtual
             (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
              (i32.load offset=4
               (local.get $4)
              )
              (local.get $1)
             )
             (local.get $5)
            )
           )
          )
         )
         (call $~lib/as-chain/idxdb/IDXDB#remove@virtual
          (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
           (i32.load offset=4
            (local.get $4)
           )
           (local.get $1)
          )
          (i32.load
           (local.get $6)
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (br $for-loop|0)
       )
      )
     )
     (if
      (i64.eq
       (local.get $5)
       (i64.sub
        (i64.load offset=8
         (local.get $3)
        )
        (i64.const 1)
       )
      )
      (call $tables/elections.table/ElectionsTable#set:startTime
       (local.get $3)
       (i64.const -1)
      )
     )
     (local.set $1
      (local.get $2)
     )
     (br $while-continue|0)
    )
   )
  )
  (local.set $1
   (call $~lib/proton-tsc/modules/store/store/TableStore<tables/candidates.table/CandidatesTable>#first
    (i32.load offset=16
     (local.get $0)
    )
   )
  )
  (loop $while-continue|1
   (if
    (local.get $1)
    (block
     (local.set $2
      (call $~lib/proton-tsc/modules/store/store/TableStore<tables/candidates.table/CandidatesTable>#next
       (i32.load offset=16
        (local.get $0)
       )
       (local.get $1)
      )
     )
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/candidates.table/CandidatesTable>#remove
      (i32.load offset=16
       (local.get $0)
      )
      (local.get $1)
     )
     (local.set $1
      (local.get $2)
     )
     (br $while-continue|1)
    )
   )
  )
  (local.set $1
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/voters.table/VotersTable>#getValue
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/voters.table/VotersTable>#constructor
     (local.tee $1
      (i32.load
       (i32.load
        (i32.load offset=20
         (local.get $0)
        )
       )
      )
     )
     (call $~lib/as-chain/env/db_lowerbound_i64
      (i64.load
       (local.get $1)
      )
      (i64.load offset=8
       (local.get $1)
      )
      (i64.load offset=16
       (local.get $1)
      )
      (i64.const 0)
     )
     (i64.const 0)
     (i32.const 0)
    )
   )
  )
  (loop $while-continue|2
   (if
    (local.get $1)
    (block
     (local.set $3
      (call $~lib/as-chain/mi/MultiIndex<tables/voters.table/VotersTable>#requireFind
       (i32.load
        (local.tee $2
         (i32.load offset=20
          (local.get $0)
         )
        )
       )
       (call $tables/candidates.table/CandidatesTable#getPrimaryValue
        (local.get $1)
       )
       (i32.const 1872)
      )
     )
     (local.set $4
      (i32.load
       (i32.load
        (local.get $2)
       )
      )
     )
     (local.set $2
      (call $~lib/rt/stub/__alloc
       (i32.const 8)
      )
     )
     (local.set $2
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/voters.table/VotersTable>#getValue
       (call $~lib/as-chain/dbi64/PrimaryIterator<tables/voters.table/VotersTable>#constructor
        (local.get $4)
        (call $~lib/as-chain/env/db_next_i64
         (i32.load offset=4
          (local.get $3)
         )
         (local.get $2)
        )
        (i64.load
         (local.get $2)
        )
        (i32.const 1)
       )
      )
     )
     (local.set $3
      (i32.load offset=20
       (local.get $0)
      )
     )
     (local.set $5
      (call $tables/candidates.table/CandidatesTable#getPrimaryValue
       (local.get $1)
      )
     )
     (drop
      (call $~lib/as-chain/mi/MultiIndex<tables/voters.table/VotersTable>#requireFind
       (i32.load
        (local.get $3)
       )
       (local.get $5)
       (i32.const 1648)
      )
     )
     (local.set $1
      (i32.const 0)
     )
     (call $~lib/as-chain/system/check
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
       (local.tee $6
        (call $~lib/as-chain/mi/MultiIndex<tables/voters.table/VotersTable>#find
         (local.tee $4
          (i32.load
           (local.get $3)
          )
         )
         (local.get $5)
        )
       )
      )
      (i32.const 13456)
     )
     (call $~lib/as-chain/dbi64/DBI64<tables/elections.table/ElectionsTable>#remove
      (i32.load
       (local.get $4)
      )
      (local.get $6)
     )
     (loop $for-loop|00
      (if
       (i32.lt_s
        (local.get $1)
        (i32.load offset=12
         (i32.load offset=4
          (local.get $4)
         )
        )
       )
       (block
        (if
         (call $~lib/as-chain/idxdb/SecondaryIterator#isOk
          (i32.load
           (local.tee $6
            (call $~lib/as-chain/idxdb/IDXDB#findPrimaryEx@virtual
             (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
              (i32.load offset=4
               (local.get $4)
              )
              (local.get $1)
             )
             (local.get $5)
            )
           )
          )
         )
         (call $~lib/as-chain/idxdb/IDXDB#remove@virtual
          (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
           (i32.load offset=4
            (local.get $4)
           )
           (local.get $1)
          )
          (i32.load
           (local.get $6)
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (br $for-loop|00)
       )
      )
     )
     (if
      (i64.eq
       (local.get $5)
       (i64.sub
        (i64.load offset=8
         (local.get $3)
        )
        (i64.const 1)
       )
      )
      (call $tables/elections.table/ElectionsTable#set:startTime
       (local.get $3)
       (i64.const -1)
      )
     )
     (local.set $1
      (local.get $2)
     )
     (br $while-continue|2)
    )
   )
  )
  (local.set $1
   (call $~lib/proton-tsc/modules/store/store/TableStore<tables/winners.table/WinnersTable>#first
    (i32.load offset=24
     (local.get $0)
    )
   )
  )
  (loop $while-continue|3
   (if
    (local.get $1)
    (block
     (local.set $2
      (call $~lib/proton-tsc/modules/store/store/TableStore<tables/winners.table/WinnersTable>#next
       (i32.load offset=24
        (local.get $0)
       )
       (local.get $1)
      )
     )
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/winners.table/WinnersTable>#remove
      (i32.load offset=24
       (local.get $0)
      )
      (local.get $1)
     )
     (local.set $1
      (local.get $2)
     )
     (br $while-continue|3)
    )
   )
  )
  (local.set $1
   (call $~lib/proton-tsc/modules/store/store/TableStore<tables/recallVote.table/RecallVotesTable>#first
    (i32.load offset=28
     (local.get $0)
    )
   )
  )
  (loop $while-continue|4
   (if
    (local.get $1)
    (block
     (local.set $2
      (call $~lib/proton-tsc/modules/store/store/TableStore<tables/recallVote.table/RecallVotesTable>#next
       (i32.load offset=28
        (local.get $0)
       )
       (local.get $1)
      )
     )
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/recallVote.table/RecallVotesTable>#remove
      (i32.load offset=28
       (local.get $0)
      )
      (local.get $1)
     )
     (local.set $1
      (local.get $2)
     )
     (br $while-continue|4)
    )
   )
  )
  (local.set $1
   (call $~lib/proton-tsc/modules/store/store/TableStore<tables/recallVoters.table/RecallVotersTable>#first
    (i32.load offset=32
     (local.get $0)
    )
   )
  )
  (loop $while-continue|5
   (if
    (local.get $1)
    (block
     (local.set $2
      (call $~lib/proton-tsc/modules/store/store/TableStore<tables/recallVoters.table/RecallVotersTable>#next
       (i32.load offset=32
        (local.get $0)
       )
       (local.get $1)
      )
     )
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/recallVoters.table/RecallVotersTable>#remove
      (i32.load offset=32
       (local.get $0)
      )
      (local.get $1)
     )
     (local.set $1
      (local.get $2)
     )
     (br $while-continue|5)
    )
   )
  )
 )
 (func $snipvote.contract/snipvoting#clearRecall (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/proton-tsc/modules/store/store/TableStore<tables/recallVote.table/RecallVotesTable>#first
    (i32.load offset=28
     (local.get $0)
    )
   )
  )
  (loop $while-continue|0
   (if
    (local.get $1)
    (block
     (local.set $2
      (call $~lib/proton-tsc/modules/store/store/TableStore<tables/recallVote.table/RecallVotesTable>#next
       (i32.load offset=28
        (local.get $0)
       )
       (local.get $1)
      )
     )
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/recallVote.table/RecallVotesTable>#remove
      (i32.load offset=28
       (local.get $0)
      )
      (local.get $1)
     )
     (local.set $1
      (local.get $2)
     )
     (br $while-continue|0)
    )
   )
  )
 )
 (func $snipvote.contract/snipvoting#clearReVote (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/proton-tsc/modules/store/store/TableStore<tables/recallVoters.table/RecallVotersTable>#first
    (i32.load offset=32
     (local.get $0)
    )
   )
  )
  (loop $while-continue|0
   (if
    (local.get $1)
    (block
     (local.set $2
      (call $~lib/proton-tsc/modules/store/store/TableStore<tables/recallVoters.table/RecallVotersTable>#next
       (i32.load offset=32
        (local.get $0)
       )
       (local.get $1)
      )
     )
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/recallVoters.table/RecallVotersTable>#remove
      (i32.load offset=32
       (local.get $0)
      )
      (local.get $1)
     )
     (local.set $1
      (local.get $2)
     )
     (br $while-continue|0)
    )
   )
  )
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/moderatorCand.table/ModeratorCandTable>#constructor (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32) (result i32)
  (local $4 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $4
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 94)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (i32.const 0)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (i64.const 0)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $4)
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (local.get $1)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (local.get $2)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (local.get $3)
  )
  (local.get $4)
 )
 (func $tables/moderatorCand.table/ModeratorCandTable#unpack (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/as-chain/serializer/Decoder#constructor
    (local.get $1)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $0)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (call $tables/candidates.table/CandidatesTable#set:status
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:registrationEndTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (i32.load offset=4
   (local.get $1)
  )
 )
 (func $~lib/as-chain/dbi64/DBI64<tables/moderatorCand.table/ModeratorCandTable>#getEx (param $0 i32) (param $1 i32) (result i32)
  (if
   (i32.eqz
    (local.tee $0
     (call $~lib/as-chain/env/db_get_i64
      (local.get $1)
      (i32.const 0)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (drop
   (call $~lib/as-chain/env/db_get_i64
    (local.get $1)
    (i32.load offset=4
     (local.tee $1
      (call $~lib/array/Array<u8>#constructor
       (local.get $0)
      )
     )
    )
    (local.get $0)
   )
  )
  (global.set $~argumentsLength
   (i32.const 0)
  )
  (drop
   (call $tables/moderatorCand.table/ModeratorCandTable#unpack
    (local.tee $0
     (call $tables/moderatorCand.table/ModeratorCandTable#constructor@varargs)
    )
    (local.get $1)
   )
  )
  (local.get $0)
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/moderatorCand.table/ModeratorCandTable>#getValue (param $0 i32) (result i32)
  (if
   (i32.eqz
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
     (local.get $0)
    )
   )
   (return
    (i32.const 0)
   )
  )
  (call $~lib/as-chain/dbi64/DBI64<tables/moderatorCand.table/ModeratorCandTable>#getEx
   (i32.load
    (local.get $0)
   )
   (i32.load offset=4
    (local.get $0)
   )
  )
 )
 (func $tables/moderatorCand.table/ModeratorCandTable#getPrimaryValue (param $0 i32) (result i64)
  (i64.load
   (i32.load
    (local.get $0)
   )
  )
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/moderatorCand.table/ModeratorCandTable>#find (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/moderatorCand.table/ModeratorCandTable>#find (result i32)
   (if
    (i32.ge_s
     (local.tee $2
      (call $~lib/as-chain/env/db_find_i64
       (i64.load
        (local.tee $0
         (i32.load
          (local.get $0)
         )
        )
       )
       (i64.load offset=8
        (local.get $0)
       )
       (i64.load offset=16
        (local.get $0)
       )
       (local.get $1)
      )
     )
     (i32.const 0)
    )
    (br $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/moderatorCand.table/ModeratorCandTable>#find
     (call $~lib/as-chain/dbi64/PrimaryIterator<tables/moderatorCand.table/ModeratorCandTable>#constructor
      (local.get $0)
      (local.get $2)
      (local.get $1)
      (i32.const 1)
     )
    )
   )
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/moderatorCand.table/ModeratorCandTable>#constructor
    (local.get $0)
    (local.get $2)
    (i64.const 0)
    (i32.const 0)
   )
  )
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/moderatorCand.table/ModeratorCandTable>#requireFind (param $0 i32) (param $1 i64) (param $2 i32) (result i32)
  (call $~lib/as-chain/system/check
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
    (local.tee $0
     (call $~lib/as-chain/mi/MultiIndex<tables/moderatorCand.table/ModeratorCandTable>#find
      (local.get $0)
      (local.get $1)
     )
    )
   )
   (local.get $2)
  )
  (local.get $0)
 )
 (func $snipvote.contract/snipvoting#clrModCand (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  (local.set $1
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/moderatorCand.table/ModeratorCandTable>#getValue
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/moderatorCand.table/ModeratorCandTable>#constructor
     (local.tee $1
      (i32.load
       (i32.load
        (i32.load offset=36
         (local.get $0)
        )
       )
      )
     )
     (call $~lib/as-chain/env/db_lowerbound_i64
      (i64.load
       (local.get $1)
      )
      (i64.load offset=8
       (local.get $1)
      )
      (i64.load offset=16
       (local.get $1)
      )
      (i64.const 0)
     )
     (i64.const 0)
     (i32.const 0)
    )
   )
  )
  (loop $while-continue|0
   (if
    (local.get $1)
    (block
     (local.set $3
      (call $~lib/as-chain/mi/MultiIndex<tables/moderatorCand.table/ModeratorCandTable>#requireFind
       (i32.load
        (local.tee $2
         (i32.load offset=36
          (local.get $0)
         )
        )
       )
       (call $tables/moderatorCand.table/ModeratorCandTable#getPrimaryValue
        (local.get $1)
       )
       (i32.const 1872)
      )
     )
     (local.set $4
      (i32.load
       (i32.load
        (local.get $2)
       )
      )
     )
     (local.set $2
      (call $~lib/rt/stub/__alloc
       (i32.const 8)
      )
     )
     (local.set $2
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/moderatorCand.table/ModeratorCandTable>#getValue
       (call $~lib/as-chain/dbi64/PrimaryIterator<tables/moderatorCand.table/ModeratorCandTable>#constructor
        (local.get $4)
        (call $~lib/as-chain/env/db_next_i64
         (i32.load offset=4
          (local.get $3)
         )
         (local.get $2)
        )
        (i64.load
         (local.get $2)
        )
        (i32.const 1)
       )
      )
     )
     (local.set $3
      (i32.load offset=36
       (local.get $0)
      )
     )
     (local.set $5
      (call $tables/moderatorCand.table/ModeratorCandTable#getPrimaryValue
       (local.get $1)
      )
     )
     (drop
      (call $~lib/as-chain/mi/MultiIndex<tables/moderatorCand.table/ModeratorCandTable>#requireFind
       (i32.load
        (local.get $3)
       )
       (local.get $5)
       (i32.const 1648)
      )
     )
     (local.set $1
      (i32.const 0)
     )
     (call $~lib/as-chain/system/check
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
       (local.tee $6
        (call $~lib/as-chain/mi/MultiIndex<tables/moderatorCand.table/ModeratorCandTable>#find
         (local.tee $4
          (i32.load
           (local.get $3)
          )
         )
         (local.get $5)
        )
       )
      )
      (i32.const 13456)
     )
     (call $~lib/as-chain/dbi64/DBI64<tables/elections.table/ElectionsTable>#remove
      (i32.load
       (local.get $4)
      )
      (local.get $6)
     )
     (loop $for-loop|0
      (if
       (i32.lt_s
        (local.get $1)
        (i32.load offset=12
         (i32.load offset=4
          (local.get $4)
         )
        )
       )
       (block
        (if
         (call $~lib/as-chain/idxdb/SecondaryIterator#isOk
          (i32.load
           (local.tee $6
            (call $~lib/as-chain/idxdb/IDXDB#findPrimaryEx@virtual
             (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
              (i32.load offset=4
               (local.get $4)
              )
              (local.get $1)
             )
             (local.get $5)
            )
           )
          )
         )
         (call $~lib/as-chain/idxdb/IDXDB#remove@virtual
          (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
           (i32.load offset=4
            (local.get $4)
           )
           (local.get $1)
          )
          (i32.load
           (local.get $6)
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (br $for-loop|0)
       )
      )
     )
     (if
      (i64.eq
       (local.get $5)
       (i64.sub
        (i64.load offset=8
         (local.get $3)
        )
        (i64.const 1)
       )
      )
      (call $tables/elections.table/ElectionsTable#set:startTime
       (local.get $3)
       (i64.const -1)
      )
     )
     (local.set $1
      (local.get $2)
     )
     (br $while-continue|0)
    )
   )
  )
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/moderatorVoter.table/ModeratorVotersTable>#constructor (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32) (result i32)
  (local $4 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $4
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 95)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (i32.const 0)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (i64.const 0)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $4)
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (local.get $1)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (local.get $2)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (local.get $3)
  )
  (local.get $4)
 )
 (func $tables/moderatorVoter.table/ModeratorVotersTable#unpack (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/as-chain/serializer/Decoder#constructor
    (local.get $1)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $0)
   (local.get $2)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $0)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (i32.load offset=4
   (local.get $1)
  )
 )
 (func $~lib/as-chain/dbi64/DBI64<tables/moderatorVoter.table/ModeratorVotersTable>#getEx (param $0 i32) (param $1 i32) (result i32)
  (if
   (i32.eqz
    (local.tee $0
     (call $~lib/as-chain/env/db_get_i64
      (local.get $1)
      (i32.const 0)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (drop
   (call $~lib/as-chain/env/db_get_i64
    (local.get $1)
    (i32.load offset=4
     (local.tee $1
      (call $~lib/array/Array<u8>#constructor
       (local.get $0)
      )
     )
    )
    (local.get $0)
   )
  )
  (global.set $~argumentsLength
   (i32.const 0)
  )
  (drop
   (call $tables/moderatorVoter.table/ModeratorVotersTable#unpack
    (local.tee $0
     (call $tables/moderatorVoter.table/ModeratorVotersTable#constructor@varargs)
    )
    (local.get $1)
   )
  )
  (local.get $0)
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/moderatorVoter.table/ModeratorVotersTable>#getValue (param $0 i32) (result i32)
  (if
   (i32.eqz
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
     (local.get $0)
    )
   )
   (return
    (i32.const 0)
   )
  )
  (call $~lib/as-chain/dbi64/DBI64<tables/moderatorVoter.table/ModeratorVotersTable>#getEx
   (i32.load
    (local.get $0)
   )
   (i32.load offset=4
    (local.get $0)
   )
  )
 )
 (func $tables/moderatorVoter.table/ModeratorVotersTable#getPrimaryValue (param $0 i32) (result i64)
  (i64.add
   (i64.load
    (i32.load
     (local.get $0)
    )
   )
   (i64.load
    (i32.load offset=4
     (local.get $0)
    )
   )
  )
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/moderatorVoter.table/ModeratorVotersTable>#find (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/moderatorVoter.table/ModeratorVotersTable>#find (result i32)
   (if
    (i32.ge_s
     (local.tee $2
      (call $~lib/as-chain/env/db_find_i64
       (i64.load
        (local.tee $0
         (i32.load
          (local.get $0)
         )
        )
       )
       (i64.load offset=8
        (local.get $0)
       )
       (i64.load offset=16
        (local.get $0)
       )
       (local.get $1)
      )
     )
     (i32.const 0)
    )
    (br $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/moderatorVoter.table/ModeratorVotersTable>#find
     (call $~lib/as-chain/dbi64/PrimaryIterator<tables/moderatorVoter.table/ModeratorVotersTable>#constructor
      (local.get $0)
      (local.get $2)
      (local.get $1)
      (i32.const 1)
     )
    )
   )
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/moderatorVoter.table/ModeratorVotersTable>#constructor
    (local.get $0)
    (local.get $2)
    (i64.const 0)
    (i32.const 0)
   )
  )
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/moderatorVoter.table/ModeratorVotersTable>#requireFind (param $0 i32) (param $1 i64) (param $2 i32) (result i32)
  (call $~lib/as-chain/system/check
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
    (local.tee $0
     (call $~lib/as-chain/mi/MultiIndex<tables/moderatorVoter.table/ModeratorVotersTable>#find
      (local.get $0)
      (local.get $1)
     )
    )
   )
   (local.get $2)
  )
  (local.get $0)
 )
 (func $snipvote.contract/snipvoting#clrModVoter (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  (local.set $1
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/moderatorVoter.table/ModeratorVotersTable>#getValue
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/moderatorVoter.table/ModeratorVotersTable>#constructor
     (local.tee $1
      (i32.load
       (i32.load
        (i32.load offset=44
         (local.get $0)
        )
       )
      )
     )
     (call $~lib/as-chain/env/db_lowerbound_i64
      (i64.load
       (local.get $1)
      )
      (i64.load offset=8
       (local.get $1)
      )
      (i64.load offset=16
       (local.get $1)
      )
      (i64.const 0)
     )
     (i64.const 0)
     (i32.const 0)
    )
   )
  )
  (loop $while-continue|0
   (if
    (local.get $1)
    (block
     (local.set $3
      (call $~lib/as-chain/mi/MultiIndex<tables/moderatorVoter.table/ModeratorVotersTable>#requireFind
       (i32.load
        (local.tee $2
         (i32.load offset=44
          (local.get $0)
         )
        )
       )
       (call $tables/moderatorVoter.table/ModeratorVotersTable#getPrimaryValue
        (local.get $1)
       )
       (i32.const 1872)
      )
     )
     (local.set $4
      (i32.load
       (i32.load
        (local.get $2)
       )
      )
     )
     (local.set $2
      (call $~lib/rt/stub/__alloc
       (i32.const 8)
      )
     )
     (local.set $2
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/moderatorVoter.table/ModeratorVotersTable>#getValue
       (call $~lib/as-chain/dbi64/PrimaryIterator<tables/moderatorVoter.table/ModeratorVotersTable>#constructor
        (local.get $4)
        (call $~lib/as-chain/env/db_next_i64
         (i32.load offset=4
          (local.get $3)
         )
         (local.get $2)
        )
        (i64.load
         (local.get $2)
        )
        (i32.const 1)
       )
      )
     )
     (local.set $3
      (i32.load offset=44
       (local.get $0)
      )
     )
     (local.set $5
      (call $tables/moderatorVoter.table/ModeratorVotersTable#getPrimaryValue
       (local.get $1)
      )
     )
     (drop
      (call $~lib/as-chain/mi/MultiIndex<tables/moderatorVoter.table/ModeratorVotersTable>#requireFind
       (i32.load
        (local.get $3)
       )
       (local.get $5)
       (i32.const 1648)
      )
     )
     (local.set $1
      (i32.const 0)
     )
     (call $~lib/as-chain/system/check
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
       (local.tee $6
        (call $~lib/as-chain/mi/MultiIndex<tables/moderatorVoter.table/ModeratorVotersTable>#find
         (local.tee $4
          (i32.load
           (local.get $3)
          )
         )
         (local.get $5)
        )
       )
      )
      (i32.const 13456)
     )
     (call $~lib/as-chain/dbi64/DBI64<tables/elections.table/ElectionsTable>#remove
      (i32.load
       (local.get $4)
      )
      (local.get $6)
     )
     (loop $for-loop|0
      (if
       (i32.lt_s
        (local.get $1)
        (i32.load offset=12
         (i32.load offset=4
          (local.get $4)
         )
        )
       )
       (block
        (if
         (call $~lib/as-chain/idxdb/SecondaryIterator#isOk
          (i32.load
           (local.tee $6
            (call $~lib/as-chain/idxdb/IDXDB#findPrimaryEx@virtual
             (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
              (i32.load offset=4
               (local.get $4)
              )
              (local.get $1)
             )
             (local.get $5)
            )
           )
          )
         )
         (call $~lib/as-chain/idxdb/IDXDB#remove@virtual
          (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
           (i32.load offset=4
            (local.get $4)
           )
           (local.get $1)
          )
          (i32.load
           (local.get $6)
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (br $for-loop|0)
       )
      )
     )
     (if
      (i64.eq
       (local.get $5)
       (i64.sub
        (i64.load offset=8
         (local.get $3)
        )
        (i64.const 1)
       )
      )
      (call $tables/elections.table/ElectionsTable#set:startTime
       (local.get $3)
       (i64.const -1)
      )
     )
     (local.set $1
      (local.get $2)
     )
     (br $while-continue|0)
    )
   )
  )
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/modRecall.table/ModRecallTable>#constructor (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32) (result i32)
  (local $4 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $4
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 96)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (i32.const 0)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (i64.const 0)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $4)
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (local.get $1)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (local.get $2)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (local.get $3)
  )
  (local.get $4)
 )
 (func $tables/modRecall.table/ModRecallTable#unpack (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (call $~lib/as-chain/name/Name#set:N
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.tee $1
     (call $~lib/as-chain/serializer/Decoder#constructor
      (local.get $1)
     )
    )
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $0)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:rtId
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $~lib/rt/common/OBJECT#set:rtSize
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:registrationStartTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:registrationEndTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (call $snipvote.contract/snipvoting#set:moderatorsTable
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (i32.load offset=4
   (local.get $1)
  )
 )
 (func $~lib/as-chain/dbi64/DBI64<tables/modRecall.table/ModRecallTable>#getEx (param $0 i32) (param $1 i32) (result i32)
  (if
   (i32.eqz
    (local.tee $0
     (call $~lib/as-chain/env/db_get_i64
      (local.get $1)
      (i32.const 0)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (drop
   (call $~lib/as-chain/env/db_get_i64
    (local.get $1)
    (i32.load offset=4
     (local.tee $1
      (call $~lib/array/Array<u8>#constructor
       (local.get $0)
      )
     )
    )
    (local.get $0)
   )
  )
  (global.set $~argumentsLength
   (i32.const 0)
  )
  (drop
   (call $tables/modRecall.table/ModRecallTable#unpack
    (local.tee $0
     (call $tables/modRecall.table/ModRecallTable#constructor@varargs)
    )
    (local.get $1)
   )
  )
  (local.get $0)
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/modRecall.table/ModRecallTable>#getValue (param $0 i32) (result i32)
  (if
   (i32.eqz
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
     (local.get $0)
    )
   )
   (return
    (i32.const 0)
   )
  )
  (call $~lib/as-chain/dbi64/DBI64<tables/modRecall.table/ModRecallTable>#getEx
   (i32.load
    (local.get $0)
   )
   (i32.load offset=4
    (local.get $0)
   )
  )
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/modRecall.table/ModRecallTable>#first (param $0 i32) (result i32)
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/modRecall.table/ModRecallTable>#getValue
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/modRecall.table/ModRecallTable>#constructor
    (local.tee $0
     (i32.load
      (i32.load
       (local.get $0)
      )
     )
    )
    (call $~lib/as-chain/env/db_lowerbound_i64
     (i64.load
      (local.get $0)
     )
     (i64.load offset=8
      (local.get $0)
     )
     (i64.load offset=16
      (local.get $0)
     )
     (i64.const 0)
    )
    (i64.const 0)
    (i32.const 0)
   )
  )
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/modRecall.table/ModRecallTable>#find (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/modRecall.table/ModRecallTable>#find (result i32)
   (if
    (i32.ge_s
     (local.tee $2
      (call $~lib/as-chain/env/db_find_i64
       (i64.load
        (local.tee $0
         (i32.load
          (local.get $0)
         )
        )
       )
       (i64.load offset=8
        (local.get $0)
       )
       (i64.load offset=16
        (local.get $0)
       )
       (local.get $1)
      )
     )
     (i32.const 0)
    )
    (br $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/modRecall.table/ModRecallTable>#find
     (call $~lib/as-chain/dbi64/PrimaryIterator<tables/modRecall.table/ModRecallTable>#constructor
      (local.get $0)
      (local.get $2)
      (local.get $1)
      (i32.const 1)
     )
    )
   )
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/modRecall.table/ModRecallTable>#constructor
    (local.get $0)
    (local.get $2)
    (i64.const 0)
    (i32.const 0)
   )
  )
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/modRecall.table/ModRecallTable>#requireFind (param $0 i32) (param $1 i64) (param $2 i32) (result i32)
  (call $~lib/as-chain/system/check
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
    (local.tee $0
     (call $~lib/as-chain/mi/MultiIndex<tables/modRecall.table/ModRecallTable>#find
      (local.get $0)
      (local.get $1)
     )
    )
   )
   (local.get $2)
  )
  (local.get $0)
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/modRecall.table/ModRecallTable>#next (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/as-chain/mi/MultiIndex<tables/modRecall.table/ModRecallTable>#requireFind
    (i32.load
     (local.get $0)
    )
    (i64.load
     (local.get $1)
    )
    (i32.const 1872)
   )
  )
  (local.set $2
   (i32.load
    (i32.load
     (local.get $0)
    )
   )
  )
  (local.set $0
   (call $~lib/rt/stub/__alloc
    (i32.const 8)
   )
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/modRecall.table/ModRecallTable>#getValue
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/modRecall.table/ModRecallTable>#constructor
    (local.get $2)
    (call $~lib/as-chain/env/db_next_i64
     (i32.load offset=4
      (local.get $1)
     )
     (local.get $0)
    )
    (i64.load
     (local.get $0)
    )
    (i32.const 1)
   )
  )
 )
 (func $snipvote.contract/snipvoting#clrModRecall (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  (local.set $1
   (call $~lib/proton-tsc/modules/store/store/TableStore<tables/modRecall.table/ModRecallTable>#first
    (i32.load offset=48
     (local.get $0)
    )
   )
  )
  (loop $while-continue|0
   (if
    (local.get $1)
    (block
     (local.set $2
      (call $~lib/proton-tsc/modules/store/store/TableStore<tables/modRecall.table/ModRecallTable>#next
       (i32.load offset=48
        (local.get $0)
       )
       (local.get $1)
      )
     )
     (drop
      (call $~lib/as-chain/mi/MultiIndex<tables/modRecall.table/ModRecallTable>#requireFind
       (i32.load
        (local.tee $4
         (i32.load offset=48
          (local.get $0)
         )
        )
       )
       (local.tee $5
        (i64.load
         (local.get $1)
        )
       )
       (i32.const 1648)
      )
     )
     (local.set $1
      (i32.const 0)
     )
     (call $~lib/as-chain/system/check
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
       (local.tee $6
        (call $~lib/as-chain/mi/MultiIndex<tables/modRecall.table/ModRecallTable>#find
         (local.tee $3
          (i32.load
           (local.get $4)
          )
         )
         (local.get $5)
        )
       )
      )
      (i32.const 13456)
     )
     (call $~lib/as-chain/dbi64/DBI64<tables/elections.table/ElectionsTable>#remove
      (i32.load
       (local.get $3)
      )
      (local.get $6)
     )
     (loop $for-loop|0
      (if
       (i32.lt_s
        (local.get $1)
        (i32.load offset=12
         (i32.load offset=4
          (local.get $3)
         )
        )
       )
       (block
        (if
         (call $~lib/as-chain/idxdb/SecondaryIterator#isOk
          (i32.load
           (local.tee $6
            (call $~lib/as-chain/idxdb/IDXDB#findPrimaryEx@virtual
             (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
              (i32.load offset=4
               (local.get $3)
              )
              (local.get $1)
             )
             (local.get $5)
            )
           )
          )
         )
         (call $~lib/as-chain/idxdb/IDXDB#remove@virtual
          (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
           (i32.load offset=4
            (local.get $3)
           )
           (local.get $1)
          )
          (i32.load
           (local.get $6)
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (br $for-loop|0)
       )
      )
     )
     (if
      (i64.eq
       (local.get $5)
       (i64.sub
        (i64.load offset=8
         (local.get $4)
        )
        (i64.const 1)
       )
      )
      (call $tables/elections.table/ElectionsTable#set:startTime
       (local.get $4)
       (i64.const -1)
      )
     )
     (local.set $1
      (local.get $2)
     )
     (br $while-continue|0)
    )
   )
  )
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/account.table/AccountsTable>#constructor (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32) (result i32)
  (local $4 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $4
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 97)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (i32.const 0)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (i64.const 0)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $4)
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (local.get $1)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (local.get $2)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (local.get $3)
  )
  (local.get $4)
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/account.table/AccountsTable>#find (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/account.table/AccountsTable>#find (result i32)
   (if
    (i32.ge_s
     (local.tee $2
      (call $~lib/as-chain/env/db_find_i64
       (i64.load
        (local.tee $0
         (i32.load
          (local.get $0)
         )
        )
       )
       (i64.load offset=8
        (local.get $0)
       )
       (i64.load offset=16
        (local.get $0)
       )
       (local.get $1)
      )
     )
     (i32.const 0)
    )
    (br $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/account.table/AccountsTable>#find
     (call $~lib/as-chain/dbi64/PrimaryIterator<tables/account.table/AccountsTable>#constructor
      (local.get $0)
      (local.get $2)
      (local.get $1)
      (i32.const 1)
     )
    )
   )
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/account.table/AccountsTable>#constructor
    (local.get $0)
    (local.get $2)
    (i64.const 0)
    (i32.const 0)
   )
  )
 )
 (func $tables/account.table/AccountsTable#unpack (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/as-chain/serializer/Decoder#constructor
    (local.get $1)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $0)
   (local.get $2)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (call $tables/account.table/AccountsTable#set:level
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u8>
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:registrationEndTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (i32.load offset=4
   (local.get $1)
  )
 )
 (func $~lib/as-chain/dbi64/DBI64<tables/account.table/AccountsTable>#getEx (param $0 i32) (param $1 i32) (result i32)
  (if
   (i32.eqz
    (local.tee $0
     (call $~lib/as-chain/env/db_get_i64
      (local.get $1)
      (i32.const 0)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (drop
   (call $~lib/as-chain/env/db_get_i64
    (local.get $1)
    (i32.load offset=4
     (local.tee $1
      (call $~lib/array/Array<u8>#constructor
       (local.get $0)
      )
     )
    )
    (local.get $0)
   )
  )
  (drop
   (call $tables/account.table/AccountsTable#unpack
    (local.tee $0
     (call $tables/account.table/AccountsTable#constructor
      (global.get $~lib/as-chain/name/EMPTY_NAME)
     )
    )
    (local.get $1)
   )
  )
  (local.get $0)
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/account.table/AccountsTable>#get (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (local $3 i32)
  (block $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/account.table/AccountsTable>#getByKey (result i32)
   (drop
    (br_if $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/account.table/AccountsTable>#getByKey
     (i32.const 0)
     (i32.eqz
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
       (local.tee $2
        (call $~lib/as-chain/mi/MultiIndex<tables/account.table/AccountsTable>#find
         (local.tee $0
          (i32.load
           (local.get $0)
          )
         )
         (local.get $1)
        )
       )
      )
     )
    )
   )
   (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/account.table/AccountsTable>#get (result i32)
    (local.set $3
     (i32.load
      (local.get $0)
     )
    )
    (drop
     (br_if $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/account.table/AccountsTable>#get
      (i32.const 0)
      (i32.eqz
       (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
        (local.tee $0
         (local.get $2)
        )
       )
      )
     )
    )
    (call $~lib/as-chain/dbi64/DBI64<tables/account.table/AccountsTable>#getEx
     (local.get $3)
     (i32.load offset=4
      (local.get $0)
     )
    )
   )
  )
 )
 (func $~lib/util/number/utoa64 (param $0 i64) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (i64.eqz
    (local.get $0)
   )
   (return
    (i32.const 13968)
   )
  )
  (if
   (i64.le_u
    (local.get $0)
    (i64.const 4294967295)
   )
   (block
    (local.set $4
     (local.tee $3
      (call $~lib/rt/stub/__new
       (i32.shl
        (local.tee $2
         (select
          (select
           (i32.add
            (i32.ge_u
             (local.tee $1
              (i32.wrap_i64
               (local.get $0)
              )
             )
             (i32.const 10)
            )
            (i32.const 1)
           )
           (i32.add
            (i32.add
             (i32.ge_u
              (local.get $1)
              (i32.const 10000)
             )
             (i32.const 3)
            )
            (i32.ge_u
             (local.get $1)
             (i32.const 1000)
            )
           )
           (i32.lt_u
            (local.get $1)
            (i32.const 100)
           )
          )
          (select
           (i32.add
            (i32.ge_u
             (local.get $1)
             (i32.const 1000000)
            )
            (i32.const 6)
           )
           (i32.add
            (i32.add
             (i32.ge_u
              (local.get $1)
              (i32.const 1000000000)
             )
             (i32.const 8)
            )
            (i32.ge_u
             (local.get $1)
             (i32.const 100000000)
            )
           )
           (i32.lt_u
            (local.get $1)
            (i32.const 10000000)
           )
          )
          (i32.lt_u
           (local.get $1)
           (i32.const 100000)
          )
         )
        )
        (i32.const 1)
       )
       (i32.const 1)
      )
     )
    )
    (loop $do-continue|0
     (i32.store16
      (i32.add
       (local.get $4)
       (i32.shl
        (local.tee $2
         (i32.sub
          (local.get $2)
          (i32.const 1)
         )
        )
        (i32.const 1)
       )
      )
      (i32.add
       (i32.rem_u
        (local.get $1)
        (i32.const 10)
       )
       (i32.const 48)
      )
     )
     (br_if $do-continue|0
      (local.tee $1
       (i32.div_u
        (local.get $1)
        (i32.const 10)
       )
      )
     )
    )
   )
   (block
    (local.set $2
     (local.tee $3
      (call $~lib/rt/stub/__new
       (i32.shl
        (local.tee $1
         (select
          (select
           (i32.add
            (i32.add
             (i64.ge_u
              (local.get $0)
              (i64.const 100000000000)
             )
             (i32.const 10)
            )
            (i64.ge_u
             (local.get $0)
             (i64.const 10000000000)
            )
           )
           (i32.add
            (i32.add
             (i64.ge_u
              (local.get $0)
              (i64.const 100000000000000)
             )
             (i32.const 13)
            )
            (i64.ge_u
             (local.get $0)
             (i64.const 10000000000000)
            )
           )
           (i64.lt_u
            (local.get $0)
            (i64.const 1000000000000)
           )
          )
          (select
           (i32.add
            (i64.ge_u
             (local.get $0)
             (i64.const 10000000000000000)
            )
            (i32.const 16)
           )
           (i32.add
            (i32.add
             (i64.ge_u
              (local.get $0)
              (i64.const -8446744073709551616)
             )
             (i32.const 18)
            )
            (i64.ge_u
             (local.get $0)
             (i64.const 1000000000000000000)
            )
           )
           (i64.lt_u
            (local.get $0)
            (i64.const 100000000000000000)
           )
          )
          (i64.lt_u
           (local.get $0)
           (i64.const 1000000000000000)
          )
         )
        )
        (i32.const 1)
       )
       (i32.const 1)
      )
     )
    )
    (loop $do-continue|00
     (i32.store16
      (i32.add
       (local.get $2)
       (i32.shl
        (local.tee $1
         (i32.sub
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.const 1)
       )
      )
      (i32.add
       (i32.wrap_i64
        (i64.rem_u
         (local.get $0)
         (i64.const 10)
        )
       )
       (i32.const 48)
      )
     )
     (br_if $do-continue|00
      (i64.ne
       (local.tee $0
        (i64.div_u
         (local.get $0)
         (i64.const 10)
        )
       )
       (i64.const 0)
      )
     )
    )
   )
  )
  (local.get $3)
 )
 (func $~lib/string/String.__concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (block $__inlined_func$~lib/string/String#concat
   (if
    (i32.eqz
     (local.tee $2
      (i32.add
       (local.tee $3
        (i32.shl
         (call $~lib/string/String#get:length
          (local.get $0)
         )
         (i32.const 1)
        )
       )
       (local.tee $4
        (i32.shl
         (call $~lib/string/String#get:length
          (local.get $1)
         )
         (i32.const 1)
        )
       )
      )
     )
    )
    (block
     (local.set $2
      (i32.const 2512)
     )
     (br $__inlined_func$~lib/string/String#concat)
    )
   )
   (call $~lib/memory/memory.copy
    (local.tee $2
     (call $~lib/rt/stub/__new
      (local.get $2)
      (i32.const 1)
     )
    )
    (local.get $0)
    (local.get $3)
   )
   (call $~lib/memory/memory.copy
    (i32.add
     (local.get $2)
     (local.get $3)
    )
    (local.get $1)
    (local.get $4)
   )
  )
  (local.get $2)
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#join (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (block $__inlined_func$~lib/util/string/joinReferenceArray<~lib/string/String> (result i32)
   (drop
    (br_if $__inlined_func$~lib/util/string/joinReferenceArray<~lib/string/String>
     (i32.const 2512)
     (i32.lt_s
      (local.tee $3
       (i32.sub
        (i32.shr_u
         (i32.load offset=16
          (i32.sub
           (local.tee $1
            (local.get $0)
           )
           (i32.const 20)
          )
         )
         (i32.const 2)
        )
        (i32.const 1)
       )
      )
      (i32.const 0)
     )
    )
   )
   (if
    (i32.eqz
     (local.get $3)
    )
    (br $__inlined_func$~lib/util/string/joinReferenceArray<~lib/string/String>
     (if (result i32)
      (local.tee $0
       (i32.load
        (local.get $1)
       )
      )
      (local.get $0)
      (i32.const 2512)
     )
    )
   )
   (local.set $0
    (i32.const 2512)
   )
   (local.set $4
    (call $~lib/string/String#get:length
     (i32.const 2512)
    )
   )
   (loop $for-loop|0
    (if
     (i32.lt_s
      (local.get $2)
      (local.get $3)
     )
     (block
      (if
       (local.tee $5
        (i32.load
         (i32.add
          (local.get $1)
          (i32.shl
           (local.get $2)
           (i32.const 2)
          )
         )
        )
       )
       (local.set $0
        (call $~lib/string/String.__concat
         (local.get $0)
         (local.get $5)
        )
       )
      )
      (if
       (local.get $4)
       (local.set $0
        (call $~lib/string/String.__concat
         (local.get $0)
         (i32.const 2512)
        )
       )
      )
      (local.set $2
       (i32.add
        (local.get $2)
        (i32.const 1)
       )
      )
      (br $for-loop|0)
     )
    )
   )
   (if (result i32)
    (local.tee $1
     (i32.load
      (i32.add
       (local.get $1)
       (i32.shl
        (local.get $3)
        (i32.const 2)
       )
      )
     )
    )
    (call $~lib/string/String.__concat
     (local.get $0)
     (local.get $1)
    )
    (local.get $0)
   )
  )
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/candidates.table/CandidatesTable>#get (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (local $3 i32)
  (block $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/candidates.table/CandidatesTable>#getByKey (result i32)
   (drop
    (br_if $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/candidates.table/CandidatesTable>#getByKey
     (i32.const 0)
     (i32.eqz
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
       (local.tee $2
        (call $~lib/as-chain/mi/MultiIndex<tables/candidates.table/CandidatesTable>#find
         (local.tee $0
          (i32.load
           (local.get $0)
          )
         )
         (local.get $1)
        )
       )
      )
     )
    )
   )
   (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/candidates.table/CandidatesTable>#get (result i32)
    (local.set $3
     (i32.load
      (local.get $0)
     )
    )
    (drop
     (br_if $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/candidates.table/CandidatesTable>#get
      (i32.const 0)
      (i32.eqz
       (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
        (local.tee $0
         (local.get $2)
        )
       )
      )
     )
    )
    (call $~lib/as-chain/dbi64/DBI64<tables/candidates.table/CandidatesTable>#getEx
     (local.get $3)
     (i32.load offset=4
      (local.get $0)
     )
    )
   )
  )
 )
 (func $tables/candidates.table/CandidatesTable#pack (param $0 i32) (result i32)
  (local $1 i32)
  (call $~lib/as-chain/serializer/Encoder#pack
   (local.tee $1
    (call $~lib/as-chain/serializer/Encoder#constructor
     (block (result i32)
      (drop
       (i32.load
        (local.get $0)
       )
      )
      (i32.add
       (i32.add
        (i32.add
         (call $~lib/as-chain/utils/Utils.calcPackedStringLength
          (i32.load offset=4
           (local.get $0)
          )
         )
         (call $~lib/as-chain/utils/Utils.calcPackedStringLength
          (i32.load offset=8
           (local.get $0)
          )
         )
        )
        (call $~lib/as-chain/utils/Utils.calcPackedStringLength
         (i32.load offset=24
          (local.get $0)
         )
        )
       )
       (i32.const 24)
      )
     )
    )
   )
   (i32.load
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=4
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=8
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=16
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=24
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=32
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#getBytes
   (local.get $1)
  )
 )
 (func $~lib/array/Array<~lib/as-chain/name/Name>#push (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (call $~lib/array/ensureCapacity
   (local.get $0)
   (local.tee $3
    (i32.add
     (local.tee $2
      (i32.load offset=12
       (local.get $0)
      )
     )
     (i32.const 1)
    )
   )
   (i32.const 2)
  )
  (i32.store
   (i32.add
    (i32.load offset=4
     (local.get $0)
    )
    (i32.shl
     (local.get $2)
     (i32.const 2)
    )
   )
   (local.get $1)
  )
  (call $~lib/rt/common/OBJECT#set:rtId
   (local.get $0)
   (local.get $3)
  )
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/elections.table/ElectionsTable>#update (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i64)
  (call $~lib/as-chain/system/check
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
    (local.get $1)
   )
   (i32.const 14288)
  )
  (call $~lib/as-chain/system/check
   (i64.eq
    (local.tee $4
     (call $tables/elections.table/ElectionsTable#getPrimaryValue
      (local.get $2)
     )
    )
    (block $__inlined_func$~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#get:primary (result i64)
     (call $~lib/as-chain/system/check
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
       (local.get $1)
      )
      (i32.const 14352)
     )
     (if
      (i32.load8_u offset=8
       (local.get $1)
      )
      (br $__inlined_func$~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#get:primary
       (i64.load offset=16
        (local.get $1)
       )
      )
     )
     (if
      (i32.eqz
       (local.tee $6
        (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#getValue
         (local.get $1)
        )
       )
      )
      (unreachable)
     )
     (call $tables/elections.table/ElectionsTable#set:endTime
      (local.get $1)
      (call $tables/elections.table/ElectionsTable#getPrimaryValue
       (local.get $6)
      )
     )
     (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
      (local.get $1)
      (i32.const 1)
     )
     (i64.load offset=16
      (local.get $1)
     )
    )
   )
   (i32.const 14432)
  )
  (drop
   (i32.load
    (local.get $0)
   )
  )
  (local.set $7
   (i64.load
    (local.get $3)
   )
  )
  (local.set $6
   (i32.load offset=12
    (local.tee $2
     (call $tables/elections.table/ElectionsTable#pack
      (local.get $2)
     )
    )
   )
  )
  (call $~lib/as-chain/env/db_update_i64
   (i32.load offset=4
    (local.get $1)
   )
   (local.get $7)
   (i32.load offset=4
    (local.get $2)
   )
   (local.get $6)
  )
  (loop $for-loop|0
   (if
    (i32.lt_s
     (local.get $5)
     (i32.load offset=12
      (i32.load offset=4
       (local.get $0)
      )
     )
    )
    (block
     (local.set $1
      (call $~lib/as-chain/idxdb/IDXDB#findPrimaryEx@virtual
       (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
        (i32.load offset=4
         (local.get $0)
        )
        (local.get $5)
       )
       (local.get $4)
      )
     )
     (local.set $2
      (call $tables/elections.table/ElectionsTable#getSecondaryValue)
     )
     (if
      (i32.eqz
       (if (result i32)
        (i32.eq
         (i32.load
          (i32.load offset=4
           (local.get $1)
          )
         )
         (i32.load
          (local.get $2)
         )
        )
        (i32.eq
         (i32.load offset=4
          (i32.load offset=4
           (local.get $1)
          )
         )
         (i32.load offset=4
          (local.get $2)
         )
        )
        (i32.const 0)
       )
      )
      (call $~lib/as-chain/idxdb/IDXDB#updateEx@virtual
       (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
        (i32.load offset=4
         (local.get $0)
        )
        (local.get $5)
       )
       (i32.load
        (local.get $1)
       )
       (call $tables/elections.table/ElectionsTable#getSecondaryValue)
       (i64.load
        (local.get $3)
       )
      )
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (if
   (i64.ge_u
    (local.get $4)
    (i64.load offset=8
     (local.get $0)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $0)
    (select
     (i64.const -2)
     (i64.add
      (local.get $4)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $4)
      (i64.const -2)
     )
    )
   )
  )
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/elections.table/ElectionsTable>#update (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local.set $3
   (call $tables/elections.table/ElectionsTable#getPrimaryValue
    (local.get $1)
   )
  )
  (local.set $4
   (call $~lib/as-chain/mi/MultiIndex<tables/elections.table/ElectionsTable>#requireFind
    (i32.load
     (local.get $0)
    )
    (local.get $3)
    (i32.const 1424)
   )
  )
  (call $~lib/as-chain/mi/MultiIndex<tables/elections.table/ElectionsTable>#update
   (i32.load
    (local.get $0)
   )
   (local.get $4)
   (local.get $1)
   (local.get $2)
  )
 )
 (func $snipvote.contract/snipvoting#registerCandidate (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i64)
  (local $8 i64)
  (local $9 i32)
  (local $10 i32)
  (local $11 i64)
  (local $12 i32)
  (local $13 i32)
  (call $~lib/as-chain/action/requireAuth
   (local.get $1)
  )
  (call $~lib/as-chain/system/check
   (i32.ne
    (local.tee $4
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/elections.table/ElectionsTable>#get
      (i32.load offset=12
       (local.get $0)
      )
      (call $utils/index/stringToU64
       (local.get $3)
      )
     )
    )
    (i32.const 0)
   )
   (i32.const 13536)
  )
  (local.set $6
   (call $~lib/as-chain/system/currentTimeSec)
  )
  (if
   (local.get $4)
   (block
    (call $~lib/as-chain/system/check
     (i64.le_u
      (i64.load offset=24
       (local.get $4)
      )
      (i64.extend_i32_u
       (local.get $6)
      )
     )
     (i32.const 13600)
    )
    (call $~lib/as-chain/system/check
     (i64.ge_u
      (i64.load offset=32
       (local.get $4)
      )
      (i64.extend_i32_u
       (local.get $6)
      )
     )
     (i32.const 13696)
    )
   )
  )
  (if
   (if (result i32)
    (local.get $4)
    (i64.ne
     (i64.load offset=40
      (local.get $4)
     )
     (i64.const 0)
    )
    (i32.const 0)
   )
   (block
    (local.set $5
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/account.table/AccountsTable>#get
      (i32.load offset=68
       (local.get $0)
      )
      (i64.load
       (local.get $1)
      )
     )
    )
    (call $~lib/rt/common/OBJECT#set:gcInfo
     (i32.const 13936)
     (call $~lib/util/number/utoa64
      (i64.load offset=40
       (local.get $4)
      )
     )
    )
    (call $~lib/as-chain/system/check
     (i32.ne
      (local.get $5)
      (i32.const 0)
     )
     (call $~lib/staticarray/StaticArray<~lib/string/String>#join
      (i32.const 13936)
     )
    )
    (if
     (i32.eqz
      (local.get $5)
     )
     (unreachable)
    )
    (local.set $5
     (i64.ge_u
      (i64.load offset=16
       (local.get $5)
      )
      (i64.load offset=40
       (local.get $4)
      )
     )
    )
    (call $~lib/rt/common/OBJECT#set:gcInfo
     (i32.const 14160)
     (call $~lib/util/number/utoa64
      (i64.load offset=40
       (local.get $4)
      )
     )
    )
    (call $~lib/as-chain/system/check
     (local.get $5)
     (call $~lib/staticarray/StaticArray<~lib/string/String>#join
      (i32.const 14160)
     )
    )
   )
  )
  (call $~lib/as-chain/system/check
   (i32.eqz
    (call $~lib/proton-tsc/modules/store/store/TableStore<tables/candidates.table/CandidatesTable>#get
     (i32.load offset=16
      (local.get $0)
     )
     (i64.add
      (i64.load
       (local.get $1)
      )
      (call $utils/index/stringToU64
       (local.get $3)
      )
     )
    )
   )
   (i32.const 14192)
  )
  (local.set $2
   (call $tables/candidates.table/CandidatesTable#constructor
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (i64.extend_i32_u
     (local.get $6)
    )
   )
  )
  (local.set $3
   (i32.load
    (local.get $0)
   )
  )
  (local.set $6
   (i32.load offset=16
    (local.get $0)
   )
  )
  (local.set $8
   (call $tables/candidates.table/CandidatesTable#getPrimaryValue
    (local.get $2)
   )
  )
  (call $~lib/as-chain/system/check
   (i32.eqz
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
     (call $~lib/as-chain/mi/MultiIndex<tables/candidates.table/CandidatesTable>#find
      (i32.load
       (local.get $6)
      )
      (local.get $8)
     )
    )
   )
   (i32.const 1200)
  )
  (local.set $5
   (i32.const 0)
  )
  (local.set $10
   (i32.load
    (local.tee $9
     (i32.load
      (local.get $6)
     )
    )
   )
  )
  (local.set $7
   (call $tables/candidates.table/CandidatesTable#getPrimaryValue
    (local.get $2)
   )
  )
  (local.set $11
   (i64.load
    (local.get $3)
   )
  )
  (local.set $13
   (i32.load offset=12
    (local.tee $12
     (call $tables/candidates.table/CandidatesTable#pack
      (local.get $2)
     )
    )
   )
  )
  (drop
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/candidates.table/CandidatesTable>#constructor
    (local.get $10)
    (call $~lib/as-chain/env/db_store_i64
     (i64.load offset=8
      (local.get $10)
     )
     (i64.load offset=16
      (local.get $10)
     )
     (local.get $11)
     (local.get $7)
     (i32.load offset=4
      (local.get $12)
     )
     (local.get $13)
    )
    (local.get $7)
    (i32.const 1)
   )
  )
  (loop $for-loop|0
   (if
    (i32.lt_s
     (local.get $5)
     (i32.load offset=12
      (i32.load offset=4
       (local.get $9)
      )
     )
    )
    (block
     (call $~lib/as-chain/idxdb/IDXDB#storeEx@virtual
      (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
       (i32.load offset=4
        (local.get $9)
       )
       (local.get $5)
      )
      (call $tables/candidates.table/CandidatesTable#getPrimaryValue
       (local.get $2)
      )
      (call $tables/elections.table/ElectionsTable#getSecondaryValue)
      (i64.load
       (local.get $3)
      )
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (if
   (i64.ge_u
    (local.tee $7
     (call $tables/candidates.table/CandidatesTable#getPrimaryValue
      (local.get $2)
     )
    )
    (i64.load offset=8
     (local.get $9)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $9)
    (select
     (i64.const -2)
     (i64.add
      (local.get $7)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $7)
      (i64.const -2)
     )
    )
   )
  )
  (if
   (i64.ge_u
    (local.get $8)
    (i64.load offset=8
     (local.get $6)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $6)
    (select
     (i64.const -2)
     (i64.add
      (local.get $8)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $8)
      (i64.const -2)
     )
    )
   )
  )
  (if
   (local.get $4)
   (block
    (call $~lib/array/Array<~lib/as-chain/name/Name>#push
     (i32.load offset=72
      (local.get $4)
     )
     (local.get $1)
    )
    (call $~lib/proton-tsc/modules/store/store/TableStore<tables/elections.table/ElectionsTable>#update
     (i32.load offset=12
      (local.get $0)
     )
     (local.get $4)
     (i32.load
      (local.get $0)
     )
    )
   )
  )
 )
 (func $snipvote.contract/snipvoting#withdrawCandidate (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (call $~lib/as-chain/action/requireAuth
   (local.get $1)
  )
  (call $~lib/as-chain/system/check
   (i32.ne
    (local.tee $3
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/elections.table/ElectionsTable>#get
      (i32.load offset=12
       (local.get $0)
      )
      (call $utils/index/stringToU64
       (local.get $2)
      )
     )
    )
    (i32.const 0)
   )
   (i32.const 13536)
  )
  (call $~lib/as-chain/system/check
   (i32.ne
    (local.tee $2
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/candidates.table/CandidatesTable>#get
      (i32.load offset=16
       (local.get $0)
      )
      (i64.add
       (i64.load
        (local.get $1)
       )
       (call $utils/index/stringToU64
        (local.get $2)
       )
      )
     )
    )
    (i32.const 0)
   )
   (i32.const 14544)
  )
  (local.set $5
   (call $~lib/as-chain/system/currentTimeSec)
  )
  (if
   (local.get $3)
   (call $~lib/as-chain/system/check
    (i64.gt_u
     (i64.load offset=8
      (local.get $3)
     )
     (i64.extend_i32_u
      (local.get $5)
     )
    )
    (i32.const 14624)
   )
  )
  (if
   (local.get $2)
   (call $~lib/proton-tsc/modules/store/store/TableStore<tables/candidates.table/CandidatesTable>#remove
    (i32.load offset=16
     (local.get $0)
    )
    (local.get $2)
   )
  )
  (if
   (local.get $3)
   (block
    (local.set $2
     (call $~lib/rt/__newArray
      (i32.const 0)
      (i32.const 2)
      (i32.const 13)
      (i32.const 14736)
     )
    )
    (loop $for-loop|0
     (if
      (i32.lt_s
       (local.get $4)
       (i32.load offset=12
        (i32.load offset=72
         (local.get $3)
        )
       )
      )
      (block
       (if
        (i64.ne
         (i64.load
          (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
           (i32.load offset=72
            (local.get $3)
           )
           (local.get $4)
          )
         )
         (i64.load
          (local.get $1)
         )
        )
        (call $~lib/array/Array<~lib/as-chain/name/Name>#push
         (local.get $2)
         (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
          (i32.load offset=72
           (local.get $3)
          )
          (local.get $4)
         )
        )
       )
       (local.set $4
        (i32.add
         (local.get $4)
         (i32.const 1)
        )
       )
       (br $for-loop|0)
      )
     )
    )
    (call $tables/elections.table/ElectionsTable#set:candidates
     (local.get $3)
     (local.get $2)
    )
    (call $~lib/proton-tsc/modules/store/store/TableStore<tables/elections.table/ElectionsTable>#update
     (i32.load offset=12
      (local.get $0)
     )
     (local.get $3)
     (i32.load
      (local.get $0)
     )
    )
   )
  )
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/candidates.table/CandidatesTable>#update (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i64)
  (call $~lib/as-chain/system/check
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
    (local.get $1)
   )
   (i32.const 14288)
  )
  (call $~lib/as-chain/system/check
   (i64.eq
    (local.tee $4
     (call $tables/candidates.table/CandidatesTable#getPrimaryValue
      (local.get $2)
     )
    )
    (block $__inlined_func$~lib/as-chain/dbi64/PrimaryIterator<tables/candidates.table/CandidatesTable>#get:primary (result i64)
     (call $~lib/as-chain/system/check
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
       (local.get $1)
      )
      (i32.const 14352)
     )
     (if
      (i32.load8_u offset=8
       (local.get $1)
      )
      (br $__inlined_func$~lib/as-chain/dbi64/PrimaryIterator<tables/candidates.table/CandidatesTable>#get:primary
       (i64.load offset=16
        (local.get $1)
       )
      )
     )
     (if
      (i32.eqz
       (local.tee $6
        (call $~lib/as-chain/dbi64/PrimaryIterator<tables/candidates.table/CandidatesTable>#getValue
         (local.get $1)
        )
       )
      )
      (unreachable)
     )
     (call $tables/elections.table/ElectionsTable#set:endTime
      (local.get $1)
      (call $tables/candidates.table/CandidatesTable#getPrimaryValue
       (local.get $6)
      )
     )
     (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
      (local.get $1)
      (i32.const 1)
     )
     (i64.load offset=16
      (local.get $1)
     )
    )
   )
   (i32.const 14432)
  )
  (drop
   (i32.load
    (local.get $0)
   )
  )
  (local.set $7
   (i64.load
    (local.get $3)
   )
  )
  (local.set $6
   (i32.load offset=12
    (local.tee $2
     (call $tables/candidates.table/CandidatesTable#pack
      (local.get $2)
     )
    )
   )
  )
  (call $~lib/as-chain/env/db_update_i64
   (i32.load offset=4
    (local.get $1)
   )
   (local.get $7)
   (i32.load offset=4
    (local.get $2)
   )
   (local.get $6)
  )
  (loop $for-loop|0
   (if
    (i32.lt_s
     (local.get $5)
     (i32.load offset=12
      (i32.load offset=4
       (local.get $0)
      )
     )
    )
    (block
     (local.set $1
      (call $~lib/as-chain/idxdb/IDXDB#findPrimaryEx@virtual
       (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
        (i32.load offset=4
         (local.get $0)
        )
        (local.get $5)
       )
       (local.get $4)
      )
     )
     (local.set $2
      (call $tables/elections.table/ElectionsTable#getSecondaryValue)
     )
     (if
      (i32.eqz
       (if (result i32)
        (i32.eq
         (i32.load
          (i32.load offset=4
           (local.get $1)
          )
         )
         (i32.load
          (local.get $2)
         )
        )
        (i32.eq
         (i32.load offset=4
          (i32.load offset=4
           (local.get $1)
          )
         )
         (i32.load offset=4
          (local.get $2)
         )
        )
        (i32.const 0)
       )
      )
      (call $~lib/as-chain/idxdb/IDXDB#updateEx@virtual
       (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
        (i32.load offset=4
         (local.get $0)
        )
        (local.get $5)
       )
       (i32.load
        (local.get $1)
       )
       (call $tables/elections.table/ElectionsTable#getSecondaryValue)
       (i64.load
        (local.get $3)
       )
      )
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (if
   (i64.ge_u
    (local.get $4)
    (i64.load offset=8
     (local.get $0)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $0)
    (select
     (i64.const -2)
     (i64.add
      (local.get $4)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $4)
      (i64.const -2)
     )
    )
   )
  )
 )
 (func $tables/voters.table/VotersTable#pack (param $0 i32) (result i32)
  (local $1 i32)
  (call $~lib/as-chain/serializer/Encoder#pack
   (local.tee $1
    (call $~lib/as-chain/serializer/Encoder#constructor
     (block (result i32)
      (drop
       (i32.load
        (local.get $0)
       )
      )
      (i32.add
       (i32.add
        (i32.add
         (call $~lib/as-chain/utils/Utils.calcPackedStringLength
          (i32.load offset=4
           (local.get $0)
          )
         )
         (call $~lib/as-chain/utils/Utils.calcPackedStringLength
          (i32.load offset=8
           (local.get $0)
          )
         )
        )
        (block (result i32)
         (drop
          (i32.load offset=12
           (local.get $0)
          )
         )
         (i32.const 8)
        )
       )
       (i32.const 16)
      )
     )
    )
   )
   (i32.load
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=4
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=8
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#pack
   (local.get $1)
   (i32.load offset=12
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=16
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#getBytes
   (local.get $1)
  )
 )
 (func $snipvote.contract/snipvoting#vote (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  (local $9 i32)
  (local $10 i32)
  (local $11 i64)
  (local $12 i32)
  (local $13 i64)
  (call $~lib/as-chain/action/requireAuth
   (local.get $1)
  )
  (call $~lib/as-chain/system/check
   (i32.ne
    (local.tee $6
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/elections.table/ElectionsTable>#get
      (i32.load offset=12
       (local.get $0)
      )
      (call $utils/index/stringToU64
       (local.get $4)
      )
     )
    )
    (i32.const 0)
   )
   (i32.const 13536)
  )
  (local.set $9
   (call $~lib/as-chain/system/currentTimeSec)
  )
  (if
   (local.get $6)
   (block
    (call $~lib/as-chain/system/check
     (i64.le_u
      (i64.load offset=8
       (local.get $6)
      )
      (i64.extend_i32_u
       (local.get $9)
      )
     )
     (i32.const 14768)
    )
    (call $~lib/as-chain/system/check
     (i64.ge_u
      (i64.load offset=16
       (local.get $6)
      )
      (i64.extend_i32_u
       (local.get $9)
      )
     )
     (i32.const 14864)
    )
   )
  )
  (local.set $7
   (i32.load offset=20
    (local.get $0)
   )
  )
  (local.set $8
   (i64.add
    (i64.load
     (local.get $1)
    )
    (call $utils/index/stringToU64
     (local.get $4)
    )
   )
  )
  (call $~lib/as-chain/system/check
   (i32.eqz
    (block $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/voters.table/VotersTable>#getByKey (result i32)
     (drop
      (br_if $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/voters.table/VotersTable>#getByKey
       (i32.const 0)
       (i32.eqz
        (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
         (local.tee $7
          (call $~lib/as-chain/mi/MultiIndex<tables/voters.table/VotersTable>#find
           (local.tee $10
            (i32.load
             (local.get $7)
            )
           )
           (local.get $8)
          )
         )
        )
       )
      )
     )
     (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/voters.table/VotersTable>#get (result i32)
      (local.set $10
       (i32.load
        (local.get $10)
       )
      )
      (drop
       (br_if $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/voters.table/VotersTable>#get
        (i32.const 0)
        (i32.eqz
         (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
          (local.get $7)
         )
        )
       )
      )
      (call $~lib/as-chain/dbi64/DBI64<tables/voters.table/VotersTable>#getEx
       (local.get $10)
       (i32.load offset=4
        (local.get $7)
       )
      )
     )
    )
   )
   (i32.const 14944)
  )
  (if
   (if (result i32)
    (local.get $6)
    (i64.ne
     (i64.load offset=48
      (local.get $6)
     )
     (i64.const 0)
    )
    (i32.const 0)
   )
   (block
    (local.set $5
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/account.table/AccountsTable>#get
      (i32.load offset=68
       (local.get $0)
      )
      (i64.load
       (local.get $1)
      )
     )
    )
    (call $~lib/rt/common/OBJECT#set:gcInfo
     (i32.const 15168)
     (call $~lib/util/number/utoa64
      (i64.load offset=48
       (local.get $6)
      )
     )
    )
    (call $~lib/as-chain/system/check
     (i32.ne
      (local.get $5)
      (i32.const 0)
     )
     (call $~lib/staticarray/StaticArray<~lib/string/String>#join
      (i32.const 15168)
     )
    )
    (if
     (i32.eqz
      (local.get $5)
     )
     (unreachable)
    )
    (local.set $5
     (i64.ge_u
      (i64.load offset=16
       (local.get $5)
      )
      (i64.load offset=48
       (local.get $6)
      )
     )
    )
    (call $~lib/rt/common/OBJECT#set:gcInfo
     (i32.const 15200)
     (call $~lib/util/number/utoa64
      (i64.load offset=48
       (local.get $6)
      )
     )
    )
    (call $~lib/as-chain/system/check
     (local.get $5)
     (call $~lib/staticarray/StaticArray<~lib/string/String>#join
      (i32.const 15200)
     )
    )
   )
  )
  (call $~lib/as-chain/system/check
   (i32.ne
    (local.tee $5
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/candidates.table/CandidatesTable>#get
      (i32.load offset=16
       (local.get $0)
      )
      (i64.add
       (i64.load
        (local.get $3)
       )
       (call $utils/index/stringToU64
        (local.get $4)
       )
      )
     )
    )
    (i32.const 0)
   )
   (i32.const 15232)
  )
  (if
   (local.get $5)
   (block
    (call $tables/elections.table/ElectionsTable#set:endTime
     (local.get $5)
     (i64.add
      (i64.load offset=16
       (local.get $5)
      )
      (i64.const 1)
     )
    )
    (local.set $10
     (i32.load
      (local.get $0)
     )
    )
    (local.set $7
     (i32.load offset=16
      (local.get $0)
     )
    )
    (local.set $8
     (call $tables/candidates.table/CandidatesTable#getPrimaryValue
      (local.get $5)
     )
    )
    (local.set $12
     (call $~lib/as-chain/mi/MultiIndex<tables/candidates.table/CandidatesTable>#requireFind
      (i32.load
       (local.get $7)
      )
      (local.get $8)
      (i32.const 1424)
     )
    )
    (call $~lib/as-chain/mi/MultiIndex<tables/candidates.table/CandidatesTable>#update
     (i32.load
      (local.get $7)
     )
     (local.get $12)
     (local.get $5)
     (local.get $10)
    )
   )
  )
  (local.set $1
   (call $tables/voters.table/VotersTable#constructor
    (local.get $1)
    (local.get $2)
    (local.get $4)
    (local.get $3)
    (i64.extend_i32_u
     (local.get $9)
    )
   )
  )
  (local.set $2
   (i32.load
    (local.get $0)
   )
  )
  (local.set $3
   (i32.load offset=20
    (local.get $0)
   )
  )
  (local.set $8
   (call $tables/candidates.table/CandidatesTable#getPrimaryValue
    (local.get $1)
   )
  )
  (call $~lib/as-chain/system/check
   (i32.eqz
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
     (call $~lib/as-chain/mi/MultiIndex<tables/voters.table/VotersTable>#find
      (i32.load
       (local.get $3)
      )
      (local.get $8)
     )
    )
   )
   (i32.const 1200)
  )
  (local.set $4
   (i32.const 0)
  )
  (local.set $9
   (i32.load
    (local.tee $5
     (i32.load
      (local.get $3)
     )
    )
   )
  )
  (local.set $11
   (call $tables/candidates.table/CandidatesTable#getPrimaryValue
    (local.get $1)
   )
  )
  (local.set $13
   (i64.load
    (local.get $2)
   )
  )
  (local.set $10
   (i32.load offset=12
    (local.tee $7
     (call $tables/voters.table/VotersTable#pack
      (local.get $1)
     )
    )
   )
  )
  (drop
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/voters.table/VotersTable>#constructor
    (local.get $9)
    (call $~lib/as-chain/env/db_store_i64
     (i64.load offset=8
      (local.get $9)
     )
     (i64.load offset=16
      (local.get $9)
     )
     (local.get $13)
     (local.get $11)
     (i32.load offset=4
      (local.get $7)
     )
     (local.get $10)
    )
    (local.get $11)
    (i32.const 1)
   )
  )
  (loop $for-loop|0
   (if
    (i32.lt_s
     (local.get $4)
     (i32.load offset=12
      (i32.load offset=4
       (local.get $5)
      )
     )
    )
    (block
     (call $~lib/as-chain/idxdb/IDXDB#storeEx@virtual
      (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
       (i32.load offset=4
        (local.get $5)
       )
       (local.get $4)
      )
      (call $tables/candidates.table/CandidatesTable#getPrimaryValue
       (local.get $1)
      )
      (call $tables/elections.table/ElectionsTable#getSecondaryValue)
      (i64.load
       (local.get $2)
      )
     )
     (local.set $4
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (if
   (i64.ge_u
    (local.tee $11
     (call $tables/candidates.table/CandidatesTable#getPrimaryValue
      (local.get $1)
     )
    )
    (i64.load offset=8
     (local.get $5)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $5)
    (select
     (i64.const -2)
     (i64.add
      (local.get $11)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $11)
      (i64.const -2)
     )
    )
   )
  )
  (if
   (i64.ge_u
    (local.get $8)
    (i64.load offset=8
     (local.get $3)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $3)
    (select
     (i64.const -2)
     (i64.add
      (local.get $8)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $8)
      (i64.const -2)
     )
    )
   )
  )
  (if
   (local.get $6)
   (block
    (call $tables/elections.table/ElectionsTable#set:status
     (local.get $6)
     (i32.const 15296)
    )
    (call $tables/elections.table/ElectionsTable#set:totalVote
     (local.get $6)
     (i64.add
      (i64.load offset=64
       (local.get $6)
      )
      (i64.const 1)
     )
    )
    (call $~lib/proton-tsc/modules/store/store/TableStore<tables/elections.table/ElectionsTable>#update
     (i32.load offset=12
      (local.get $0)
     )
     (local.get $6)
     (i32.load
      (local.get $0)
     )
    )
   )
  )
 )
 (func $~lib/as-chain/name/N2S (param $0 i64) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $2
   (call $~lib/array/Array<u8>#constructor
    (i32.const 13)
   )
  )
  (loop $for-loop|0
   (if
    (i32.le_s
     (local.get $1)
     (i32.const 12)
    )
    (block
     (local.set $3
      (i32.sub
       (i32.const 12)
       (local.get $1)
      )
     )
     (local.set $4
      (if (result i32)
       (local.get $1)
       (call $~lib/array/Array<u8>#__get
        (i32.const 1152)
        (i32.wrap_i64
         (i64.and
          (local.get $0)
          (i64.const 31)
         )
        )
       )
       (call $~lib/array/Array<u8>#__get
        (i32.const 1152)
        (i32.wrap_i64
         (i64.and
          (local.get $0)
          (i64.const 15)
         )
        )
       )
      )
     )
     (if
      (i32.ge_u
       (local.get $3)
       (i32.load offset=12
        (local.get $2)
       )
      )
      (block
       (if
        (i32.lt_s
         (local.get $3)
         (i32.const 0)
        )
        (unreachable)
       )
       (call $~lib/array/ensureCapacity
        (local.get $2)
        (local.tee $5
         (i32.add
          (local.get $3)
          (i32.const 1)
         )
        )
        (i32.const 0)
       )
       (call $~lib/rt/common/OBJECT#set:rtId
        (local.get $2)
        (local.get $5)
       )
      )
     )
     (i32.store8
      (i32.add
       (local.get $3)
       (i32.load offset=4
        (local.get $2)
       )
      )
      (local.get $4)
     )
     (local.set $0
      (select
       (i64.shr_u
        (local.get $0)
        (i64.const 5)
       )
       (i64.shr_u
        (local.get $0)
        (i64.const 4)
       )
       (local.get $1)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (local.set $1
   (i32.sub
    (i32.load offset=12
     (local.get $2)
    )
    (i32.const 1)
   )
  )
  (loop $for-loop|1
   (if
    (i32.ge_s
     (local.get $1)
     (i32.const 0)
    )
    (if
     (i32.eq
      (call $~lib/array/Array<u8>#__get
       (local.get $2)
       (local.get $1)
      )
      (i32.const 46)
     )
     (block
      (local.set $1
       (i32.sub
        (local.get $1)
        (i32.const 1)
       )
      )
      (br $for-loop|1)
     )
    )
   )
  )
  (call $~lib/string/String.UTF8.decode
   (i32.load
    (call $~lib/array/Array<u8>#slice
     (local.get $2)
     (i32.const 0)
     (i32.add
      (local.get $1)
      (i32.const 1)
     )
    )
   )
  )
 )
 (func $~lib/as-chain/name/Name#toString (param $0 i32) (result i32)
  (call $~lib/as-chain/name/N2S
   (i64.load
    (local.get $0)
   )
  )
 )
 (func $~lib/string/String.__eq (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (i32.eq
    (local.get $0)
    (local.get $1)
   )
   (return
    (i32.const 1)
   )
  )
  (if
   (select
    (i32.eqz
     (local.get $1)
    )
    (i32.const 1)
    (local.get $0)
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (i32.ne
    (local.tee $2
     (call $~lib/string/String#get:length
      (local.get $0)
     )
    )
    (call $~lib/string/String#get:length
     (local.get $1)
    )
   )
   (return
    (i32.const 0)
   )
  )
  (i32.eqz
   (block $__inlined_func$~lib/util/string/compareImpl (result i32)
    (local.set $3
     (local.get $0)
    )
    (local.set $0
     (local.get $2)
    )
    (loop $while-continue|0
     (local.set $0
      (i32.sub
       (local.tee $2
        (local.get $0)
       )
       (i32.const 1)
      )
     )
     (if
      (local.get $2)
      (block
       (if
        (i32.ne
         (local.tee $2
          (i32.load16_u
           (local.get $3)
          )
         )
         (local.tee $4
          (i32.load16_u
           (local.get $1)
          )
         )
        )
        (br $__inlined_func$~lib/util/string/compareImpl
         (i32.sub
          (local.get $2)
          (local.get $4)
         )
        )
       )
       (local.set $3
        (i32.add
         (local.get $3)
         (i32.const 2)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 2)
        )
       )
       (br $while-continue|0)
      )
     )
    )
    (i32.const 0)
   )
  )
 )
 (func $~lib/array/Array<~lib/string/String>#includes (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $2
   (local.get $0)
  )
  (local.set $0
   (i32.const 0)
  )
  (block $__inlined_func$~lib/array/Array<~lib/string/String>#indexOf
   (if
    (select
     (i32.le_s
      (local.tee $3
       (i32.load offset=12
        (local.get $2)
       )
      )
      (i32.const 0)
     )
     (i32.const 1)
     (local.get $3)
    )
    (block
     (local.set $0
      (i32.const -1)
     )
     (br $__inlined_func$~lib/array/Array<~lib/string/String>#indexOf)
    )
   )
   (local.set $2
    (i32.load offset=4
     (local.get $2)
    )
   )
   (loop $while-continue|0
    (if
     (i32.lt_s
      (local.get $0)
      (local.get $3)
     )
     (block
      (br_if $__inlined_func$~lib/array/Array<~lib/string/String>#indexOf
       (call $~lib/string/String.__eq
        (i32.load
         (i32.add
          (local.get $2)
          (i32.shl
           (local.get $0)
           (i32.const 2)
          )
         )
        )
        (local.get $1)
       )
      )
      (local.set $0
       (i32.add
        (local.get $0)
        (i32.const 1)
       )
      )
      (br $while-continue|0)
     )
    )
   )
   (local.set $0
    (i32.const -1)
   )
  )
  (i32.ge_s
   (local.get $0)
   (i32.const 0)
  )
 )
 (func $tables/winners.table/WinnersTable#pack (param $0 i32) (result i32)
  (local $1 i32)
  (call $~lib/as-chain/serializer/Encoder#pack
   (local.tee $1
    (call $~lib/as-chain/serializer/Encoder#constructor
     (block (result i32)
      (drop
       (i32.load
        (local.get $0)
       )
      )
      (i32.add
       (i32.add
        (i32.add
         (call $~lib/as-chain/utils/Utils.calcPackedStringLength
          (i32.load offset=4
           (local.get $0)
          )
         )
         (call $~lib/as-chain/utils/Utils.calcPackedStringLength
          (i32.load offset=16
           (local.get $0)
          )
         )
        )
        (i32.const 18)
       )
       (call $~lib/as-chain/utils/Utils.calcPackedStringLength
        (i32.load offset=24
         (local.get $0)
        )
       )
      )
     )
    )
   )
   (i32.load
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=4
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=8
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=16
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u8>
   (local.get $1)
   (i32.load8_u offset=20
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u8>
   (local.get $1)
   (i32.load8_u offset=21
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=24
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#getBytes
   (local.get $1)
  )
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/winners.table/WinnersTable>#update (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i64)
  (call $~lib/as-chain/system/check
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
    (local.get $1)
   )
   (i32.const 14288)
  )
  (call $~lib/as-chain/system/check
   (i64.eq
    (local.tee $4
     (call $tables/winners.table/WinnersTable#getPrimaryValue
      (local.get $2)
     )
    )
    (block $__inlined_func$~lib/as-chain/dbi64/PrimaryIterator<tables/winners.table/WinnersTable>#get:primary (result i64)
     (call $~lib/as-chain/system/check
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
       (local.get $1)
      )
      (i32.const 14352)
     )
     (if
      (i32.load8_u offset=8
       (local.get $1)
      )
      (br $__inlined_func$~lib/as-chain/dbi64/PrimaryIterator<tables/winners.table/WinnersTable>#get:primary
       (i64.load offset=16
        (local.get $1)
       )
      )
     )
     (if
      (i32.eqz
       (local.tee $6
        (call $~lib/as-chain/dbi64/PrimaryIterator<tables/winners.table/WinnersTable>#getValue
         (local.get $1)
        )
       )
      )
      (unreachable)
     )
     (call $tables/elections.table/ElectionsTable#set:endTime
      (local.get $1)
      (call $tables/winners.table/WinnersTable#getPrimaryValue
       (local.get $6)
      )
     )
     (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
      (local.get $1)
      (i32.const 1)
     )
     (i64.load offset=16
      (local.get $1)
     )
    )
   )
   (i32.const 14432)
  )
  (drop
   (i32.load
    (local.get $0)
   )
  )
  (local.set $7
   (i64.load
    (local.get $3)
   )
  )
  (local.set $6
   (i32.load offset=12
    (local.tee $2
     (call $tables/winners.table/WinnersTable#pack
      (local.get $2)
     )
    )
   )
  )
  (call $~lib/as-chain/env/db_update_i64
   (i32.load offset=4
    (local.get $1)
   )
   (local.get $7)
   (i32.load offset=4
    (local.get $2)
   )
   (local.get $6)
  )
  (loop $for-loop|0
   (if
    (i32.lt_s
     (local.get $5)
     (i32.load offset=12
      (i32.load offset=4
       (local.get $0)
      )
     )
    )
    (block
     (local.set $1
      (call $~lib/as-chain/idxdb/IDXDB#findPrimaryEx@virtual
       (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
        (i32.load offset=4
         (local.get $0)
        )
        (local.get $5)
       )
       (local.get $4)
      )
     )
     (local.set $2
      (call $tables/elections.table/ElectionsTable#getSecondaryValue)
     )
     (if
      (i32.eqz
       (if (result i32)
        (i32.eq
         (i32.load
          (i32.load offset=4
           (local.get $1)
          )
         )
         (i32.load
          (local.get $2)
         )
        )
        (i32.eq
         (i32.load offset=4
          (i32.load offset=4
           (local.get $1)
          )
         )
         (i32.load offset=4
          (local.get $2)
         )
        )
        (i32.const 0)
       )
      )
      (call $~lib/as-chain/idxdb/IDXDB#updateEx@virtual
       (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
        (i32.load offset=4
         (local.get $0)
        )
        (local.get $5)
       )
       (i32.load
        (local.get $1)
       )
       (call $tables/elections.table/ElectionsTable#getSecondaryValue)
       (i64.load
        (local.get $3)
       )
      )
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (if
   (i64.ge_u
    (local.get $4)
    (i64.load offset=8
     (local.get $0)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $0)
    (select
     (i64.const -2)
     (i64.add
      (local.get $4)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $4)
      (i64.const -2)
     )
    )
   )
  )
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/winners.table/WinnersTable>#update (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local.set $3
   (call $tables/winners.table/WinnersTable#getPrimaryValue
    (local.get $1)
   )
  )
  (local.set $4
   (call $~lib/as-chain/mi/MultiIndex<tables/winners.table/WinnersTable>#requireFind
    (i32.load
     (local.get $0)
    )
    (local.get $3)
    (i32.const 1424)
   )
  )
  (call $~lib/as-chain/mi/MultiIndex<tables/winners.table/WinnersTable>#update
   (i32.load
    (local.get $0)
   )
   (local.get $4)
   (local.get $1)
   (local.get $2)
  )
 )
 (func $snipvote.contract/snipvoting#declareWinners~anonymous|0 (param $0 i32) (param $1 i32) (result i32)
  (i32.wrap_i64
   (i64.sub
    (i64.extend_i32_s
     (i32.wrap_i64
      (i64.load offset=16
       (local.get $1)
      )
     )
    )
    (i64.load offset=16
     (local.get $0)
    )
   )
  )
 )
 (func $~lib/array/Array<tables/candidates.table/CandidatesTable>#sort (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (if
   (i32.le_s
    (local.tee $5
     (i32.load offset=12
      (local.get $0)
     )
    )
    (i32.const 1)
   )
   (return
    (local.get $0)
   )
  )
  (local.set $7
   (i32.load offset=4
    (local.get $0)
   )
  )
  (if
   (i32.eq
    (local.get $5)
    (i32.const 2)
   )
   (block
    (local.set $2
     (i32.load offset=4
      (local.get $7)
     )
    )
    (local.set $1
     (i32.load
      (local.get $7)
     )
    )
    (global.set $~argumentsLength
     (i32.const 2)
    )
    (if
     (i32.lt_s
      (call_indirect (type $i32_i32_=>_i32)
       (local.get $2)
       (local.get $1)
       (i32.load
        (i32.const 15712)
       )
      )
      (i32.const 0)
     )
     (block
      (i32.store offset=4
       (local.get $7)
       (local.get $1)
      )
      (i32.store
       (local.get $7)
       (local.get $2)
      )
     )
    )
    (return
     (local.get $0)
    )
   )
  )
  (loop $for-loop|0
   (if
    (i32.gt_s
     (local.get $5)
     (local.get $6)
    )
    (block
     (local.set $4
      (i32.load
       (i32.add
        (local.get $7)
        (i32.shl
         (local.get $6)
         (i32.const 2)
        )
       )
      )
     )
     (local.set $2
      (i32.sub
       (local.get $6)
       (i32.const 1)
      )
     )
     (loop $while-continue|1
      (if
       (i32.ge_s
        (local.get $2)
        (i32.const 0)
       )
       (block $while-break|1
        (local.set $3
         (i32.load
          (i32.add
           (local.get $7)
           (i32.shl
            (local.get $2)
            (i32.const 2)
           )
          )
         )
        )
        (global.set $~argumentsLength
         (i32.const 2)
        )
        (br_if $while-break|1
         (i32.ge_s
          (call_indirect (type $i32_i32_=>_i32)
           (local.get $4)
           (local.get $3)
           (i32.load
            (i32.const 15712)
           )
          )
          (i32.const 0)
         )
        )
        (local.set $2
         (i32.sub
          (local.tee $1
           (local.get $2)
          )
          (i32.const 1)
         )
        )
        (i32.store
         (i32.add
          (local.get $7)
          (i32.shl
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
           (i32.const 2)
          )
         )
         (local.get $3)
        )
        (br $while-continue|1)
       )
      )
     )
     (i32.store
      (i32.add
       (local.get $7)
       (i32.shl
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
        (i32.const 2)
       )
      )
      (local.get $4)
     )
     (local.set $6
      (i32.add
       (local.get $6)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (local.get $0)
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/winners.table/WinnersTable>#store (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i64)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  (local $9 i32)
  (local $10 i32)
  (local.set $4
   (call $tables/winners.table/WinnersTable#getPrimaryValue
    (local.get $1)
   )
  )
  (call $~lib/as-chain/system/check
   (i32.eqz
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
     (call $~lib/as-chain/mi/MultiIndex<tables/winners.table/WinnersTable>#find
      (i32.load
       (local.get $0)
      )
      (local.get $4)
     )
    )
   )
   (i32.const 1200)
  )
  (local.set $7
   (i32.load
    (local.tee $6
     (i32.load
      (local.get $0)
     )
    )
   )
  )
  (local.set $3
   (call $tables/winners.table/WinnersTable#getPrimaryValue
    (local.get $1)
   )
  )
  (local.set $8
   (i64.load
    (local.get $2)
   )
  )
  (local.set $10
   (i32.load offset=12
    (local.tee $9
     (call $tables/winners.table/WinnersTable#pack
      (local.get $1)
     )
    )
   )
  )
  (drop
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/winners.table/WinnersTable>#constructor
    (local.get $7)
    (call $~lib/as-chain/env/db_store_i64
     (i64.load offset=8
      (local.get $7)
     )
     (i64.load offset=16
      (local.get $7)
     )
     (local.get $8)
     (local.get $3)
     (i32.load offset=4
      (local.get $9)
     )
     (local.get $10)
    )
    (local.get $3)
    (i32.const 1)
   )
  )
  (loop $for-loop|0
   (if
    (i32.lt_s
     (local.get $5)
     (i32.load offset=12
      (i32.load offset=4
       (local.get $6)
      )
     )
    )
    (block
     (call $~lib/as-chain/idxdb/IDXDB#storeEx@virtual
      (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
       (i32.load offset=4
        (local.get $6)
       )
       (local.get $5)
      )
      (call $tables/winners.table/WinnersTable#getPrimaryValue
       (local.get $1)
      )
      (call $tables/elections.table/ElectionsTable#getSecondaryValue)
      (i64.load
       (local.get $2)
      )
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (if
   (i64.ge_u
    (local.tee $3
     (call $tables/winners.table/WinnersTable#getPrimaryValue
      (local.get $1)
     )
    )
    (i64.load offset=8
     (local.get $6)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $6)
    (select
     (i64.const -2)
     (i64.add
      (local.get $3)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $3)
      (i64.const -2)
     )
    )
   )
  )
  (if
   (i64.ge_u
    (local.get $4)
    (i64.load offset=8
     (local.get $0)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $0)
    (select
     (i64.const -2)
     (i64.add
      (local.get $4)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $4)
      (i64.const -2)
     )
    )
   )
  )
 )
 (func $~lib/arraybuffer/ArrayBuffer#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (if
   (i32.gt_u
    (local.get $0)
    (i32.const 1073741820)
   )
   (unreachable)
  )
  (call $~lib/memory/memory.fill
   (local.tee $1
    (call $~lib/rt/stub/__new
     (local.get $0)
     (i32.const 0)
    )
   )
   (local.get $0)
  )
  (local.get $1)
 )
 (func $~lib/util/hash/HASH<~lib/string/String> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (if (result i32)
   (local.get $0)
   (block (result i32)
    (local.set $2
     (if (result i32)
      (i32.ge_u
       (local.tee $3
        (i32.shl
         (call $~lib/string/String#get:length
          (local.tee $1
           (local.get $0)
          )
         )
         (i32.const 1)
        )
       )
       (i32.const 16)
      )
      (block (result i32)
       (local.set $2
        (i32.const 606290984)
       )
       (local.set $4
        (i32.const -2048144777)
       )
       (local.set $5
        (i32.const 1640531535)
       )
       (local.set $7
        (i32.sub
         (i32.add
          (local.get $1)
          (local.get $3)
         )
         (i32.const 16)
        )
       )
       (loop $while-continue|0
        (if
         (i32.le_u
          (local.get $1)
          (local.get $7)
         )
         (block
          (local.set $2
           (i32.mul
            (i32.rotl
             (i32.add
              (local.get $2)
              (i32.mul
               (i32.load
                (local.get $1)
               )
               (i32.const -2048144777)
              )
             )
             (i32.const 13)
            )
            (i32.const -1640531535)
           )
          )
          (local.set $4
           (i32.mul
            (i32.rotl
             (i32.add
              (local.get $4)
              (i32.mul
               (i32.load offset=4
                (local.get $1)
               )
               (i32.const -2048144777)
              )
             )
             (i32.const 13)
            )
            (i32.const -1640531535)
           )
          )
          (local.set $6
           (i32.mul
            (i32.rotl
             (i32.add
              (local.get $6)
              (i32.mul
               (i32.load offset=8
                (local.get $1)
               )
               (i32.const -2048144777)
              )
             )
             (i32.const 13)
            )
            (i32.const -1640531535)
           )
          )
          (local.set $5
           (i32.mul
            (i32.rotl
             (i32.add
              (local.get $5)
              (i32.mul
               (i32.load offset=12
                (local.get $1)
               )
               (i32.const -2048144777)
              )
             )
             (i32.const 13)
            )
            (i32.const -1640531535)
           )
          )
          (local.set $1
           (i32.add
            (local.get $1)
            (i32.const 16)
           )
          )
          (br $while-continue|0)
         )
        )
       )
       (i32.add
        (local.get $3)
        (i32.add
         (i32.add
          (i32.add
           (i32.rotl
            (local.get $2)
            (i32.const 1)
           )
           (i32.rotl
            (local.get $4)
            (i32.const 7)
           )
          )
          (i32.rotl
           (local.get $6)
           (i32.const 12)
          )
         )
         (i32.rotl
          (local.get $5)
          (i32.const 18)
         )
        )
       )
      )
      (i32.add
       (local.get $3)
       (i32.const 374761393)
      )
     )
    )
    (local.set $4
     (i32.sub
      (i32.add
       (local.get $0)
       (local.get $3)
      )
      (i32.const 4)
     )
    )
    (loop $while-continue|1
     (if
      (i32.le_u
       (local.get $1)
       (local.get $4)
      )
      (block
       (local.set $2
        (i32.mul
         (i32.rotl
          (i32.add
           (local.get $2)
           (i32.mul
            (i32.load
             (local.get $1)
            )
            (i32.const -1028477379)
           )
          )
          (i32.const 17)
         )
         (i32.const 668265263)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 4)
        )
       )
       (br $while-continue|1)
      )
     )
    )
    (local.set $0
     (i32.add
      (local.get $0)
      (local.get $3)
     )
    )
    (loop $while-continue|2
     (if
      (i32.gt_u
       (local.get $0)
       (local.get $1)
      )
      (block
       (local.set $2
        (i32.mul
         (i32.rotl
          (i32.add
           (local.get $2)
           (i32.mul
            (i32.load8_u
             (local.get $1)
            )
            (i32.const 374761393)
           )
          )
          (i32.const 11)
         )
         (i32.const -1640531535)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (br $while-continue|2)
      )
     )
    )
    (i32.xor
     (local.tee $0
      (i32.mul
       (i32.xor
        (local.tee $0
         (i32.mul
          (i32.xor
           (local.get $2)
           (i32.shr_u
            (local.get $2)
            (i32.const 15)
           )
          )
          (i32.const -2048144777)
         )
        )
        (i32.shr_u
         (local.get $0)
         (i32.const 13)
        )
       )
       (i32.const -1028477379)
      )
     )
     (i32.shr_u
      (local.get $0)
      (i32.const 16)
     )
    )
   )
   (i32.const 0)
  )
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>#find (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local.set $0
   (i32.load
    (i32.add
     (i32.load
      (local.get $0)
     )
     (i32.shl
      (i32.and
       (local.get $2)
       (i32.load offset=4
        (local.get $0)
       )
      )
      (i32.const 2)
     )
    )
   )
  )
  (loop $while-continue|0
   (if
    (local.get $0)
    (block
     (if
      (if (result i32)
       (i32.and
        (local.tee $2
         (i32.load offset=8
          (local.get $0)
         )
        )
        (i32.const 1)
       )
       (i32.const 0)
       (call $~lib/string/String.__eq
        (i32.load
         (local.get $0)
        )
        (local.get $1)
       )
      )
      (return
       (local.get $0)
      )
     )
     (local.set $0
      (i32.and
       (local.get $2)
       (i32.const -2)
      )
     )
     (br $while-continue|0)
    )
   )
  )
  (i32.const 0)
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>#rehash (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $6
   (call $~lib/arraybuffer/ArrayBuffer#constructor
    (i32.shl
     (local.tee $3
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (i32.const 2)
    )
   )
  )
  (local.set $3
   (call $~lib/arraybuffer/ArrayBuffer#constructor
    (i32.mul
     (local.tee $5
      (i32.div_s
       (i32.shl
        (local.get $3)
        (i32.const 3)
       )
       (i32.const 3)
      )
     )
     (i32.const 12)
    )
   )
  )
  (local.set $4
   (i32.add
    (local.tee $8
     (i32.load offset=8
      (local.get $0)
     )
    )
    (i32.mul
     (i32.load offset=16
      (local.get $0)
     )
     (i32.const 12)
    )
   )
  )
  (local.set $2
   (local.get $3)
  )
  (loop $while-continue|0
   (if
    (i32.ne
     (local.get $4)
     (local.get $8)
    )
    (block
     (if
      (i32.eqz
       (i32.and
        (i32.load offset=8
         (local.get $8)
        )
        (i32.const 1)
       )
      )
      (local.set $2
       (block (result i32)
        (call $~lib/rt/common/BLOCK#set:mmInfo
         (local.get $2)
         (local.tee $7
          (i32.load
           (local.get $8)
          )
         )
        )
        (call $~lib/rt/common/OBJECT#set:gcInfo
         (local.get $2)
         (i32.load offset=4
          (local.get $8)
         )
        )
        (call $~lib/rt/common/OBJECT#set:gcInfo2
         (local.get $2)
         (i32.load
          (local.tee $7
           (i32.add
            (local.get $6)
            (i32.shl
             (i32.and
              (call $~lib/util/hash/HASH<~lib/string/String>
               (local.get $7)
              )
              (local.get $1)
             )
             (i32.const 2)
            )
           )
          )
         )
        )
        (i32.store
         (local.get $7)
         (local.get $2)
        )
        (i32.add
         (local.get $2)
         (i32.const 12)
        )
       )
      )
     )
     (local.set $8
      (i32.add
       (local.get $8)
       (i32.const 12)
      )
     )
     (br $while-continue|0)
    )
   )
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $0)
   (local.get $6)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $0)
   (local.get $1)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $0)
   (local.get $3)
  )
  (call $~lib/rt/common/OBJECT#set:rtId
   (local.get $0)
   (local.get $5)
  )
  (call $~lib/rt/common/OBJECT#set:rtSize
   (local.get $0)
   (i32.load offset=20
    (local.get $0)
   )
  )
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>#set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (if
   (local.tee $3
    (call $~lib/map/Map<~lib/string/String,~lib/string/String>#find
     (local.get $0)
     (local.get $1)
     (local.tee $4
      (call $~lib/util/hash/HASH<~lib/string/String>
       (local.get $1)
      )
     )
    )
   )
   (call $~lib/rt/common/OBJECT#set:gcInfo
    (local.get $3)
    (local.get $2)
   )
   (block
    (if
     (i32.eq
      (i32.load offset=16
       (local.get $0)
      )
      (i32.load offset=12
       (local.get $0)
      )
     )
     (call $~lib/map/Map<~lib/string/String,~lib/string/String>#rehash
      (local.get $0)
      (if (result i32)
       (i32.lt_s
        (i32.load offset=20
         (local.get $0)
        )
        (i32.div_s
         (i32.mul
          (i32.load offset=12
           (local.get $0)
          )
          (i32.const 3)
         )
         (i32.const 4)
        )
       )
       (i32.load offset=4
        (local.get $0)
       )
       (i32.or
        (i32.shl
         (i32.load offset=4
          (local.get $0)
         )
         (i32.const 1)
        )
        (i32.const 1)
       )
      )
     )
    )
    (local.set $3
     (i32.load offset=8
      (local.get $0)
     )
    )
    (call $~lib/rt/common/OBJECT#set:rtSize
     (local.get $0)
     (i32.add
      (local.tee $5
       (i32.load offset=16
        (local.get $0)
       )
      )
      (i32.const 1)
     )
    )
    (call $~lib/rt/common/BLOCK#set:mmInfo
     (local.tee $3
      (i32.add
       (local.get $3)
       (i32.mul
        (local.get $5)
        (i32.const 12)
       )
      )
     )
     (local.get $1)
    )
    (call $~lib/rt/common/OBJECT#set:gcInfo
     (local.get $3)
     (local.get $2)
    )
    (call $snipvote.contract/snipvoting#set:votersTable
     (local.get $0)
     (i32.add
      (i32.load offset=20
       (local.get $0)
      )
      (i32.const 1)
     )
    )
    (call $~lib/rt/common/OBJECT#set:gcInfo2
     (local.get $3)
     (i32.load
      (local.tee $0
       (i32.add
        (i32.load
         (local.get $0)
        )
        (i32.shl
         (i32.and
          (local.get $4)
          (i32.load offset=4
           (local.get $0)
          )
         )
         (i32.const 2)
        )
       )
      )
     )
    )
    (i32.store
     (local.get $0)
     (local.get $3)
    )
   )
  )
 )
 (func $snipvote.contract/snipvoting#declareWinners (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i64)
  (drop
   (i32.load offset=4
    (local.tee $3
     (call $~lib/rt/__newArray
      (i32.const 3)
      (i32.const 2)
      (i32.const 7)
      (i32.const 0)
     )
    )
   )
  )
  (call $~lib/array/Array<~lib/as-chain/idxdb/IDXDB>#__uset
   (local.get $3)
   (i32.const 0)
   (call $~lib/as-chain/name/Name#toString
    (i32.load
     (local.get $0)
    )
   )
  )
  (call $~lib/array/Array<~lib/as-chain/idxdb/IDXDB>#__uset
   (local.get $3)
   (i32.const 1)
   (i32.const 2336)
  )
  (call $~lib/array/Array<~lib/as-chain/idxdb/IDXDB>#__uset
   (local.get $3)
   (i32.const 2)
   (i32.const 2384)
  )
  (call $~lib/as-chain/system/check
   (call $~lib/array/Array<~lib/string/String>#includes
    (local.get $3)
    (local.get $2)
   )
   (i32.const 15344)
  )
  (call $~lib/as-chain/system/check
   (i32.ne
    (local.tee $2
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/elections.table/ElectionsTable>#get
      (i32.load offset=12
       (local.get $0)
      )
      (call $utils/index/stringToU64
       (local.get $1)
      )
     )
    )
    (i32.const 0)
   )
   (i32.const 13536)
  )
  (local.set $9
   (i64.extend_i32_u
    (local.tee $4
     (call $~lib/as-chain/system/currentTimeSec)
    )
   )
  )
  (if
   (i32.eqz
    (local.get $2)
   )
   (unreachable)
  )
  (call $~lib/as-chain/system/check
   (i64.gt_u
    (local.get $9)
    (i64.load offset=16
     (local.get $2)
    )
   )
   (i32.const 15456)
  )
  (local.set $3
   (call $~lib/proton-tsc/modules/store/store/TableStore<tables/elections.table/ElectionsTable>#first
    (i32.load offset=12
     (local.get $0)
    )
   )
  )
  (loop $while-continue|0
   (if
    (local.get $3)
    (block
     (if
      (if (result i32)
       (if (result i32)
        (i64.ne
         (call $utils/index/stringToU64
          (i32.load
           (local.get $3)
          )
         )
         (call $utils/index/stringToU64
          (local.get $1)
         )
        )
        (i64.ne
         (call $utils/index/stringToU64
          (i32.load offset=56
           (local.get $3)
          )
         )
         (call $utils/index/stringToU64
          (i32.const 15536)
         )
        )
        (i32.const 0)
       )
       (i64.lt_u
        (i64.load offset=16
         (local.get $3)
        )
        (i64.extend_i32_u
         (local.get $4)
        )
       )
       (i32.const 0)
      )
      (block
       (call $tables/elections.table/ElectionsTable#set:status
        (local.get $3)
        (i32.const 15536)
       )
       (call $~lib/proton-tsc/modules/store/store/TableStore<tables/elections.table/ElectionsTable>#update
        (i32.load offset=12
         (local.get $0)
        )
        (local.get $3)
        (i32.load
         (local.get $0)
        )
       )
      )
     )
     (local.set $3
      (call $~lib/proton-tsc/modules/store/store/TableStore<tables/elections.table/ElectionsTable>#next
       (i32.load offset=12
        (local.get $0)
       )
       (local.get $3)
      )
     )
     (br $while-continue|0)
    )
   )
  )
  (local.set $3
   (call $~lib/proton-tsc/modules/store/store/TableStore<tables/winners.table/WinnersTable>#first
    (i32.load offset=24
     (local.get $0)
    )
   )
  )
  (loop $while-continue|1
   (if
    (local.get $3)
    (block
     (if
      (i64.eq
       (call $utils/index/stringToU64
        (i32.load offset=24
         (local.get $3)
        )
       )
       (call $utils/index/stringToU64
        (i32.const 2656)
       )
      )
      (block
       (call $tables/candidates.table/CandidatesTable#set:status
        (local.get $3)
        (i32.const 15536)
       )
       (call $~lib/proton-tsc/modules/store/store/TableStore<tables/winners.table/WinnersTable>#update
        (i32.load offset=24
         (local.get $0)
        )
        (local.get $3)
        (i32.load
         (local.get $0)
        )
       )
      )
     )
     (local.set $3
      (call $~lib/proton-tsc/modules/store/store/TableStore<tables/winners.table/WinnersTable>#next
       (i32.load offset=24
        (local.get $0)
       )
       (local.get $3)
      )
     )
     (br $while-continue|1)
    )
   )
  )
  (local.set $5
   (call $~lib/rt/__newArray
    (i32.const 0)
    (i32.const 2)
    (i32.const 99)
    (i32.const 15584)
   )
  )
  (local.set $3
   (call $~lib/proton-tsc/modules/store/store/TableStore<tables/candidates.table/CandidatesTable>#first
    (i32.load offset=16
     (local.get $0)
    )
   )
  )
  (loop $while-continue|2
   (if
    (local.get $3)
    (block
     (call $~lib/array/Array<~lib/as-chain/name/Name>#push
      (local.get $5)
      (local.get $3)
     )
     (local.set $3
      (call $~lib/proton-tsc/modules/store/store/TableStore<tables/candidates.table/CandidatesTable>#next
       (i32.load offset=16
        (local.get $0)
       )
       (local.get $3)
      )
     )
     (br $while-continue|2)
    )
   )
  )
  (local.set $4
   (call $~lib/rt/__newArray
    (i32.const 0)
    (i32.const 2)
    (i32.const 99)
    (i32.const 15616)
   )
  )
  (local.set $3
   (i32.const 0)
  )
  (loop $for-loop|3
   (if
    (i32.lt_s
     (local.get $3)
     (i32.load offset=12
      (local.get $5)
     )
    )
    (block
     (if
      (i64.eq
       (call $utils/index/stringToU64
        (i32.load offset=8
         (local.tee $6
          (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
           (local.get $5)
           (local.get $3)
          )
         )
        )
       )
       (call $utils/index/stringToU64
        (local.get $1)
       )
      )
      (call $~lib/array/Array<~lib/as-chain/name/Name>#push
       (local.get $4)
       (local.get $6)
      )
     )
     (local.set $3
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (br $for-loop|3)
    )
   )
  )
  (call $~lib/as-chain/system/check
   (i32.gt_s
    (i32.load offset=12
     (local.get $4)
    )
    (i32.const 0)
   )
   (i32.const 15648)
  )
  (local.set $5
   (select
    (i32.const 0)
    (local.tee $3
     (i32.load offset=12
      (local.tee $4
       (call $~lib/array/Array<tables/candidates.table/CandidatesTable>#sort
        (local.get $4)
       )
      )
     )
    )
    (i32.gt_s
     (local.get $3)
     (i32.const 0)
    )
   )
  )
  (local.set $8
   (i32.load offset=4
    (local.tee $3
     (call $~lib/rt/__newArray
      (local.tee $6
       (select
        (local.tee $3
         (i32.sub
          (select
           (i32.const 5)
           (local.get $3)
           (i32.gt_s
            (local.get $3)
            (i32.const 5)
           )
          )
          (local.get $5)
         )
        )
        (i32.const 0)
        (i32.gt_s
         (local.get $3)
         (i32.const 0)
        )
       )
      )
      (i32.const 2)
      (i32.const 99)
      (i32.const 0)
     )
    )
   )
  )
  (local.set $4
   (i32.add
    (i32.load offset=4
     (local.get $4)
    )
    (i32.shl
     (local.get $5)
     (i32.const 2)
    )
   )
  )
  (local.set $5
   (i32.const 0)
  )
  (local.set $6
   (i32.shl
    (local.get $6)
    (i32.const 2)
   )
  )
  (loop $while-continue|02
   (if
    (i32.lt_u
     (local.get $5)
     (local.get $6)
    )
    (block
     (i32.store
      (i32.add
       (local.get $5)
       (local.get $8)
      )
      (i32.load
       (i32.add
        (local.get $4)
        (local.get $5)
       )
      )
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 4)
      )
     )
     (br $while-continue|02)
    )
   )
  )
  (call $~lib/as-chain/system/check
   (i32.gt_s
    (i32.load offset=12
     (local.get $3)
    )
    (i32.const 0)
   )
   (i32.const 15744)
  )
  (local.set $5
   (i32.const 1)
  )
  (loop $for-loop|5
   (if
    (i32.lt_s
     (local.get $7)
     (i32.load offset=12
      (local.get $3)
     )
    )
    (block
     (local.set $4
      (call $tables/winners.table/WinnersTable#constructor
       (i32.load
        (local.tee $4
         (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
          (local.get $3)
          (local.get $7)
         )
        )
       )
       (i32.load offset=4
        (local.get $4)
       )
       (i64.load offset=16
        (local.get $4)
       )
       (local.get $1)
       (local.get $5)
       (i32.const 0)
      )
     )
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/winners.table/WinnersTable>#store
      (i32.load offset=24
       (local.get $0)
      )
      (local.get $4)
      (i32.load
       (local.get $0)
      )
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (local.set $7
      (i32.add
       (local.get $7)
       (i32.const 1)
      )
     )
     (br $for-loop|5)
    )
   )
  )
  (drop
   (i32.load offset=4
    (local.tee $4
     (call $~lib/rt/__newArray
      (i32.const 2)
      (i32.const 2)
      (i32.const 13)
      (i32.const 0)
     )
    )
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $3
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $3)
   (i64.const 6716332327816921088)
  )
  (call $~lib/array/Array<~lib/as-chain/idxdb/IDXDB>#__uset
   (local.get $4)
   (i32.const 0)
   (local.get $3)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $3
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $3)
   (i64.const 6716332327833698304)
  )
  (call $~lib/array/Array<~lib/as-chain/idxdb/IDXDB>#__uset
   (local.get $4)
   (i32.const 1)
   (local.get $3)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $3
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 101)
    )
   )
   (call $~lib/arraybuffer/ArrayBuffer#constructor
    (i32.const 16)
   )
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $3)
   (i32.const 3)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $3)
   (call $~lib/arraybuffer/ArrayBuffer#constructor
    (i32.const 48)
   )
  )
  (call $~lib/rt/common/OBJECT#set:rtId
   (local.get $3)
   (i32.const 4)
  )
  (call $~lib/rt/common/OBJECT#set:rtSize
   (local.get $3)
   (i32.const 0)
  )
  (call $snipvote.contract/snipvoting#set:votersTable
   (local.get $3)
   (i32.const 0)
  )
  (call $~lib/map/Map<~lib/string/String,~lib/string/String>#set
   (local.get $3)
   (i32.const 15808)
   (i32.const 15856)
  )
  (call $~lib/map/Map<~lib/string/String,~lib/string/String>#set
   (local.get $3)
   (i32.const 15904)
   (i32.const 15952)
  )
  (local.set $7
   (i32.const 0)
  )
  (loop $for-loop|6
   (if
    (i32.lt_s
     (local.get $7)
     (i32.load offset=12
      (local.get $4)
     )
    )
    (block
     (if
      (i32.eqz
       (local.tee $6
        (call $~lib/map/Map<~lib/string/String,~lib/string/String>#find
         (local.get $3)
         (local.tee $6
          (call $~lib/as-chain/name/Name#toString
           (local.tee $8
            (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
             (local.get $4)
             (local.get $7)
            )
           )
          )
         )
         (call $~lib/util/hash/HASH<~lib/string/String>
          (local.get $6)
         )
        )
       )
      )
      (unreachable)
     )
     (local.set $6
      (call $tables/winners.table/WinnersTable#constructor
       (local.get $8)
       (if (result i32)
        (local.tee $6
         (i32.load offset=4
          (local.get $6)
         )
        )
        (local.get $6)
        (i32.const 2512)
       )
       (i64.const 0)
       (local.get $1)
       (local.get $5)
       (i32.const 1)
      )
     )
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/winners.table/WinnersTable>#store
      (i32.load offset=24
       (local.get $0)
      )
      (local.get $6)
      (i32.load
       (local.get $0)
      )
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (local.set $7
      (i32.add
       (local.get $7)
       (i32.const 1)
      )
     )
     (br $for-loop|6)
    )
   )
  )
  (if
   (i32.eqz
    (local.get $2)
   )
   (unreachable)
  )
  (call $tables/elections.table/ElectionsTable#set:status
   (local.get $2)
   (i32.const 16000)
  )
  (local.set $1
   (i32.load offset=12
    (local.get $0)
   )
  )
  (if
   (i32.eqz
    (local.get $2)
   )
   (unreachable)
  )
  (call $~lib/proton-tsc/modules/store/store/TableStore<tables/elections.table/ElectionsTable>#update
   (local.get $1)
   (local.get $2)
   (i32.load
    (local.get $0)
   )
  )
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/winners.table/WinnersTable>#get (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (local $3 i32)
  (block $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/winners.table/WinnersTable>#getByKey (result i32)
   (drop
    (br_if $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/winners.table/WinnersTable>#getByKey
     (i32.const 0)
     (i32.eqz
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
       (local.tee $2
        (call $~lib/as-chain/mi/MultiIndex<tables/winners.table/WinnersTable>#find
         (local.tee $0
          (i32.load
           (local.get $0)
          )
         )
         (local.get $1)
        )
       )
      )
     )
    )
   )
   (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/winners.table/WinnersTable>#get (result i32)
    (local.set $3
     (i32.load
      (local.get $0)
     )
    )
    (drop
     (br_if $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/winners.table/WinnersTable>#get
      (i32.const 0)
      (i32.eqz
       (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
        (local.tee $0
         (local.get $2)
        )
       )
      )
     )
    )
    (call $~lib/as-chain/dbi64/DBI64<tables/winners.table/WinnersTable>#getEx
     (local.get $3)
     (i32.load offset=4
      (local.get $0)
     )
    )
   )
  )
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/recallVote.table/RecallVotesTable>#get (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (local $3 i32)
  (block $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/recallVote.table/RecallVotesTable>#getByKey (result i32)
   (drop
    (br_if $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/recallVote.table/RecallVotesTable>#getByKey
     (i32.const 0)
     (i32.eqz
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
       (local.tee $2
        (call $~lib/as-chain/mi/MultiIndex<tables/recallVote.table/RecallVotesTable>#find
         (local.tee $0
          (i32.load
           (local.get $0)
          )
         )
         (local.get $1)
        )
       )
      )
     )
    )
   )
   (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/recallVote.table/RecallVotesTable>#get (result i32)
    (local.set $3
     (i32.load
      (local.get $0)
     )
    )
    (drop
     (br_if $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/recallVote.table/RecallVotesTable>#get
      (i32.const 0)
      (i32.eqz
       (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
        (local.tee $0
         (local.get $2)
        )
       )
      )
     )
    )
    (call $~lib/as-chain/dbi64/DBI64<tables/recallVote.table/RecallVotesTable>#getEx
     (local.get $3)
     (i32.load offset=4
      (local.get $0)
     )
    )
   )
  )
 )
 (func $tables/recallVote.table/RecallVotesTable#pack (param $0 i32) (result i32)
  (local $1 i32)
  (call $~lib/as-chain/serializer/Encoder#pack
   (local.tee $1
    (call $~lib/as-chain/serializer/Encoder#constructor
     (block (result i32)
      (drop
       (i32.load
        (local.get $0)
       )
      )
      (i32.add
       (i32.add
        (i32.add
         (call $~lib/as-chain/utils/Utils.calcPackedStringLength
          (i32.load offset=4
           (local.get $0)
          )
         )
         (call $~lib/as-chain/utils/Utils.calcPackedStringLength
          (i32.load offset=8
           (local.get $0)
          )
         )
        )
        (i32.const 40)
       )
       (call $~lib/as-chain/utils/Utils.calcPackedStringLength
        (i32.load offset=48
         (local.get $0)
        )
       )
      )
     )
    )
   )
   (i32.load
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=4
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=8
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=16
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=24
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=32
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=40
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=48
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#getBytes
   (local.get $1)
  )
 )
 (func $snipvote.contract/snipvoting#createRecallVoting (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i64) (param $5 i64) (param $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i64)
  (local $10 i32)
  (call $~lib/as-chain/system/check
   (call $~lib/array/Array<~lib/string/String>#includes
    (i32.const 2464)
    (local.get $6)
   )
   (i32.const 15344)
  )
  (call $~lib/as-chain/system/check
   (i32.ne
    (call $~lib/proton-tsc/modules/store/store/TableStore<tables/elections.table/ElectionsTable>#get
     (i32.load offset=12
      (local.get $0)
     )
     (call $utils/index/stringToU64
      (local.get $2)
     )
    )
    (i32.const 0)
   )
   (i32.const 13536)
  )
  (call $~lib/as-chain/system/check
   (i32.ne
    (local.tee $6
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/winners.table/WinnersTable>#get
      (i32.load offset=24
       (local.get $0)
      )
      (i64.add
       (i64.load
        (local.get $1)
       )
       (call $utils/index/stringToU64
        (local.get $2)
       )
      )
     )
    )
    (i32.const 0)
   )
   (i32.const 16032)
  )
  (if
   (i32.eqz
    (local.get $6)
   )
   (unreachable)
  )
  (call $~lib/as-chain/system/check
   (i32.eqz
    (i32.load8_u offset=21
     (local.get $6)
    )
   )
   (i32.const 16112)
  )
  (call $~lib/as-chain/system/check
   (i32.eqz
    (call $~lib/proton-tsc/modules/store/store/TableStore<tables/recallVote.table/RecallVotesTable>#get
     (i32.load offset=28
      (local.get $0)
     )
     (i64.add
      (i64.load
       (local.get $1)
      )
      (call $utils/index/stringToU64
       (local.get $2)
      )
     )
    )
   )
   (i32.const 16208)
  )
  (call $~lib/as-chain/system/check
   (i64.gt_u
    (local.get $4)
    (i64.extend_i32_u
     (local.tee $6
      (call $~lib/as-chain/system/currentTimeSec)
     )
    )
   )
   (i32.const 16288)
  )
  (call $~lib/as-chain/system/check
   (i64.gt_u
    (local.get $5)
    (i64.extend_i32_u
     (local.get $6)
    )
   )
   (i32.const 16384)
  )
  (call $~lib/as-chain/system/check
   (i64.lt_u
    (local.get $4)
    (local.get $5)
   )
   (i32.const 16480)
  )
  (local.set $1
   (call $tables/recallVote.table/RecallVotesTable#constructor
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (local.get $5)
   )
  )
  (local.set $2
   (i32.load
    (local.get $0)
   )
  )
  (local.set $3
   (i32.load offset=28
    (local.get $0)
   )
  )
  (local.set $4
   (call $tables/recallVote.table/RecallVotesTable#getPrimaryValue
    (local.get $1)
   )
  )
  (call $~lib/as-chain/system/check
   (i32.eqz
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
     (call $~lib/as-chain/mi/MultiIndex<tables/recallVote.table/RecallVotesTable>#find
      (i32.load
       (local.get $3)
      )
      (local.get $4)
     )
    )
   )
   (i32.const 1200)
  )
  (local.set $6
   (i32.const 0)
  )
  (local.set $8
   (i32.load
    (local.tee $7
     (i32.load
      (local.get $3)
     )
    )
   )
  )
  (local.set $5
   (call $tables/recallVote.table/RecallVotesTable#getPrimaryValue
    (local.tee $0
     (local.get $1)
    )
   )
  )
  (local.set $9
   (i64.load
    (local.get $2)
   )
  )
  (local.set $10
   (i32.load offset=12
    (local.tee $1
     (call $tables/recallVote.table/RecallVotesTable#pack
      (local.get $0)
     )
    )
   )
  )
  (drop
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/recallVote.table/RecallVotesTable>#constructor
    (local.get $8)
    (call $~lib/as-chain/env/db_store_i64
     (i64.load offset=8
      (local.get $8)
     )
     (i64.load offset=16
      (local.get $8)
     )
     (local.get $9)
     (local.get $5)
     (i32.load offset=4
      (local.get $1)
     )
     (local.get $10)
    )
    (local.get $5)
    (i32.const 1)
   )
  )
  (loop $for-loop|0
   (if
    (i32.lt_s
     (local.get $6)
     (i32.load offset=12
      (i32.load offset=4
       (local.get $7)
      )
     )
    )
    (block
     (call $~lib/as-chain/idxdb/IDXDB#storeEx@virtual
      (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
       (i32.load offset=4
        (local.get $7)
       )
       (local.get $6)
      )
      (call $tables/recallVote.table/RecallVotesTable#getPrimaryValue
       (local.get $0)
      )
      (call $tables/elections.table/ElectionsTable#getSecondaryValue)
      (i64.load
       (local.get $2)
      )
     )
     (local.set $6
      (i32.add
       (local.get $6)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (if
   (i64.ge_u
    (local.tee $5
     (call $tables/recallVote.table/RecallVotesTable#getPrimaryValue
      (local.get $0)
     )
    )
    (i64.load offset=8
     (local.get $7)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $7)
    (select
     (i64.const -2)
     (i64.add
      (local.get $5)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $5)
      (i64.const -2)
     )
    )
   )
  )
  (if
   (i64.ge_u
    (local.get $4)
    (i64.load offset=8
     (local.get $3)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $3)
    (select
     (i64.const -2)
     (i64.add
      (local.get $4)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $4)
      (i64.const -2)
     )
    )
   )
  )
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/recallVote.table/RecallVotesTable>#update (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i64)
  (call $~lib/as-chain/system/check
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
    (local.get $1)
   )
   (i32.const 14288)
  )
  (call $~lib/as-chain/system/check
   (i64.eq
    (local.tee $4
     (call $tables/recallVote.table/RecallVotesTable#getPrimaryValue
      (local.get $2)
     )
    )
    (block $__inlined_func$~lib/as-chain/dbi64/PrimaryIterator<tables/recallVote.table/RecallVotesTable>#get:primary (result i64)
     (call $~lib/as-chain/system/check
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
       (local.get $1)
      )
      (i32.const 14352)
     )
     (if
      (i32.load8_u offset=8
       (local.get $1)
      )
      (br $__inlined_func$~lib/as-chain/dbi64/PrimaryIterator<tables/recallVote.table/RecallVotesTable>#get:primary
       (i64.load offset=16
        (local.get $1)
       )
      )
     )
     (if
      (i32.eqz
       (local.tee $6
        (call $~lib/as-chain/dbi64/PrimaryIterator<tables/recallVote.table/RecallVotesTable>#getValue
         (local.get $1)
        )
       )
      )
      (unreachable)
     )
     (call $tables/elections.table/ElectionsTable#set:endTime
      (local.get $1)
      (call $tables/recallVote.table/RecallVotesTable#getPrimaryValue
       (local.get $6)
      )
     )
     (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
      (local.get $1)
      (i32.const 1)
     )
     (i64.load offset=16
      (local.get $1)
     )
    )
   )
   (i32.const 14432)
  )
  (drop
   (i32.load
    (local.get $0)
   )
  )
  (local.set $7
   (i64.load
    (local.get $3)
   )
  )
  (local.set $6
   (i32.load offset=12
    (local.tee $2
     (call $tables/recallVote.table/RecallVotesTable#pack
      (local.get $2)
     )
    )
   )
  )
  (call $~lib/as-chain/env/db_update_i64
   (i32.load offset=4
    (local.get $1)
   )
   (local.get $7)
   (i32.load offset=4
    (local.get $2)
   )
   (local.get $6)
  )
  (loop $for-loop|0
   (if
    (i32.lt_s
     (local.get $5)
     (i32.load offset=12
      (i32.load offset=4
       (local.get $0)
      )
     )
    )
    (block
     (local.set $1
      (call $~lib/as-chain/idxdb/IDXDB#findPrimaryEx@virtual
       (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
        (i32.load offset=4
         (local.get $0)
        )
        (local.get $5)
       )
       (local.get $4)
      )
     )
     (local.set $2
      (call $tables/elections.table/ElectionsTable#getSecondaryValue)
     )
     (if
      (i32.eqz
       (if (result i32)
        (i32.eq
         (i32.load
          (i32.load offset=4
           (local.get $1)
          )
         )
         (i32.load
          (local.get $2)
         )
        )
        (i32.eq
         (i32.load offset=4
          (i32.load offset=4
           (local.get $1)
          )
         )
         (i32.load offset=4
          (local.get $2)
         )
        )
        (i32.const 0)
       )
      )
      (call $~lib/as-chain/idxdb/IDXDB#updateEx@virtual
       (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
        (i32.load offset=4
         (local.get $0)
        )
        (local.get $5)
       )
       (i32.load
        (local.get $1)
       )
       (call $tables/elections.table/ElectionsTable#getSecondaryValue)
       (i64.load
        (local.get $3)
       )
      )
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (if
   (i64.ge_u
    (local.get $4)
    (i64.load offset=8
     (local.get $0)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $0)
    (select
     (i64.const -2)
     (i64.add
      (local.get $4)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $4)
      (i64.const -2)
     )
    )
   )
  )
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/recallVote.table/RecallVotesTable>#update (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local.set $3
   (call $tables/recallVote.table/RecallVotesTable#getPrimaryValue
    (local.get $1)
   )
  )
  (local.set $4
   (call $~lib/as-chain/mi/MultiIndex<tables/recallVote.table/RecallVotesTable>#requireFind
    (i32.load
     (local.get $0)
    )
    (local.get $3)
    (i32.const 1424)
   )
  )
  (call $~lib/as-chain/mi/MultiIndex<tables/recallVote.table/RecallVotesTable>#update
   (i32.load
    (local.get $0)
   )
   (local.get $4)
   (local.get $1)
   (local.get $2)
  )
 )
 (func $tables/recallVoters.table/RecallVotersTable#pack (param $0 i32) (result i32)
  (local $1 i32)
  (call $~lib/as-chain/serializer/Encoder#pack
   (local.tee $1
    (call $~lib/as-chain/serializer/Encoder#constructor
     (block (result i32)
      (drop
       (i32.load
        (local.get $0)
       )
      )
      (i32.add
       (i32.add
        (i32.add
         (call $~lib/as-chain/utils/Utils.calcPackedStringLength
          (i32.load offset=4
           (local.get $0)
          )
         )
         (block (result i32)
          (drop
           (i32.load offset=8
            (local.get $0)
           )
          )
          (i32.const 8)
         )
        )
        (call $~lib/as-chain/utils/Utils.calcPackedStringLength
         (i32.load offset=12
          (local.get $0)
         )
        )
       )
       (i32.const 17)
      )
     )
    )
   )
   (i32.load
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=4
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#pack
   (local.get $1)
   (i32.load offset=8
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=12
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u8>
   (local.get $1)
   (i32.load8_u offset=16
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=24
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#getBytes
   (local.get $1)
  )
 )
 (func $snipvote.contract/snipvoting#recallVote (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  (local $9 i64)
  (local $10 i32)
  (local $11 i64)
  (call $~lib/as-chain/action/requireAuth
   (local.get $1)
  )
  (call $~lib/as-chain/system/check
   (i32.ne
    (local.tee $7
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/elections.table/ElectionsTable>#get
      (i32.load offset=12
       (local.get $0)
      )
      (call $utils/index/stringToU64
       (local.get $4)
      )
     )
    )
    (i32.const 0)
   )
   (i32.const 16576)
  )
  (call $~lib/as-chain/system/check
   (i32.ne
    (call $~lib/proton-tsc/modules/store/store/TableStore<tables/winners.table/WinnersTable>#get
     (i32.load offset=24
      (local.get $0)
     )
     (i64.add
      (i64.load
       (local.get $3)
      )
      (call $utils/index/stringToU64
       (local.get $4)
      )
     )
    )
    (i32.const 0)
   )
   (i32.const 16032)
  )
  (if
   (if (result i32)
    (local.get $7)
    (i64.ne
     (i64.load offset=48
      (local.get $7)
     )
     (i64.const 0)
    )
    (i32.const 0)
   )
   (block
    (local.set $6
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/account.table/AccountsTable>#get
      (i32.load offset=68
       (local.get $0)
      )
      (i64.load
       (local.get $1)
      )
     )
    )
    (call $~lib/rt/common/OBJECT#set:gcInfo
     (i32.const 16656)
     (call $~lib/util/number/utoa64
      (i64.load offset=48
       (local.get $7)
      )
     )
    )
    (call $~lib/as-chain/system/check
     (i32.ne
      (local.get $6)
      (i32.const 0)
     )
     (call $~lib/staticarray/StaticArray<~lib/string/String>#join
      (i32.const 16656)
     )
    )
    (if
     (i32.eqz
      (local.get $6)
     )
     (unreachable)
    )
    (local.set $6
     (i64.ge_u
      (i64.load offset=16
       (local.get $6)
      )
      (i64.load offset=48
       (local.get $7)
      )
     )
    )
    (call $~lib/rt/common/OBJECT#set:gcInfo
     (i32.const 16688)
     (call $~lib/util/number/utoa64
      (i64.load offset=48
       (local.get $7)
      )
     )
    )
    (call $~lib/as-chain/system/check
     (local.get $6)
     (call $~lib/staticarray/StaticArray<~lib/string/String>#join
      (i32.const 16688)
     )
    )
   )
  )
  (call $~lib/as-chain/system/check
   (i32.ne
    (local.tee $6
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/recallVote.table/RecallVotesTable>#get
      (i32.load offset=28
       (local.get $0)
      )
      (i64.add
       (i64.load
        (local.get $3)
       )
       (call $utils/index/stringToU64
        (local.get $4)
       )
      )
     )
    )
    (i32.const 0)
   )
   (i32.const 16720)
  )
  (local.set $7
   (call $~lib/as-chain/system/currentTimeSec)
  )
  (if
   (local.get $6)
   (block
    (call $~lib/as-chain/system/check
     (i64.le_u
      (i64.load offset=32
       (local.get $6)
      )
      (i64.extend_i32_u
       (local.get $7)
      )
     )
     (i32.const 14768)
    )
    (call $~lib/as-chain/system/check
     (i64.ge_u
      (i64.load offset=40
       (local.get $6)
      )
      (i64.extend_i32_u
       (local.get $7)
      )
     )
     (i32.const 16832)
    )
   )
  )
  (local.set $7
   (i32.load offset=32
    (local.get $0)
   )
  )
  (local.set $8
   (i64.add
    (i64.load
     (local.get $1)
    )
    (call $utils/index/stringToU64
     (local.get $4)
    )
   )
  )
  (call $~lib/as-chain/system/check
   (i32.eqz
    (block $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/recallVoters.table/RecallVotersTable>#getByKey (result i32)
     (drop
      (br_if $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/recallVoters.table/RecallVotersTable>#getByKey
       (i32.const 0)
       (i32.eqz
        (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
         (local.tee $7
          (call $~lib/as-chain/mi/MultiIndex<tables/recallVoters.table/RecallVotersTable>#find
           (local.tee $10
            (i32.load
             (local.get $7)
            )
           )
           (local.get $8)
          )
         )
        )
       )
      )
     )
     (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/recallVoters.table/RecallVotersTable>#get (result i32)
      (local.set $10
       (i32.load
        (local.get $10)
       )
      )
      (drop
       (br_if $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/recallVoters.table/RecallVotersTable>#get
        (i32.const 0)
        (i32.eqz
         (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
          (local.get $7)
         )
        )
       )
      )
      (call $~lib/as-chain/dbi64/DBI64<tables/recallVoters.table/RecallVotersTable>#getEx
       (local.get $10)
       (i32.load offset=4
        (local.get $7)
       )
      )
     )
    )
   )
   (i32.const 16912)
  )
  (if
   (local.get $6)
   (block
    (if
     (local.get $5)
     (call $tables/elections.table/ElectionsTable#set:registrationStartTime
      (local.get $6)
      (i64.add
       (i64.load offset=24
        (local.get $6)
       )
       (i64.const 1)
      )
     )
     (call $tables/elections.table/ElectionsTable#set:endTime
      (local.get $6)
      (i64.add
       (i64.load offset=16
        (local.get $6)
       )
       (i64.const 1)
      )
     )
    )
    (call $tables/recallVote.table/RecallVotesTable#set:status
     (local.get $6)
     (i32.const 15296)
    )
    (call $~lib/proton-tsc/modules/store/store/TableStore<tables/recallVote.table/RecallVotesTable>#update
     (i32.load offset=28
      (local.get $0)
     )
     (local.get $6)
     (i32.load
      (local.get $0)
     )
    )
   )
  )
  (local.set $1
   (call $tables/recallVoters.table/RecallVotersTable#constructor
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (local.get $5)
   )
  )
  (local.set $2
   (i32.load
    (local.get $0)
   )
  )
  (local.set $3
   (i32.load offset=32
    (local.get $0)
   )
  )
  (local.set $8
   (call $tables/recallVoters.table/RecallVotersTable#getPrimaryValue
    (local.get $1)
   )
  )
  (call $~lib/as-chain/system/check
   (i32.eqz
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
     (call $~lib/as-chain/mi/MultiIndex<tables/recallVoters.table/RecallVotersTable>#find
      (i32.load
       (local.get $3)
      )
      (local.get $8)
     )
    )
   )
   (i32.const 1200)
  )
  (local.set $4
   (i32.const 0)
  )
  (local.set $7
   (i32.load
    (local.tee $5
     (i32.load
      (local.get $3)
     )
    )
   )
  )
  (local.set $9
   (call $tables/recallVoters.table/RecallVotersTable#getPrimaryValue
    (local.tee $0
     (local.get $1)
    )
   )
  )
  (local.set $11
   (i64.load
    (local.get $2)
   )
  )
  (local.set $6
   (i32.load offset=12
    (local.tee $1
     (call $tables/recallVoters.table/RecallVotersTable#pack
      (local.get $0)
     )
    )
   )
  )
  (drop
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/recallVoters.table/RecallVotersTable>#constructor
    (local.get $7)
    (call $~lib/as-chain/env/db_store_i64
     (i64.load offset=8
      (local.get $7)
     )
     (i64.load offset=16
      (local.get $7)
     )
     (local.get $11)
     (local.get $9)
     (i32.load offset=4
      (local.get $1)
     )
     (local.get $6)
    )
    (local.get $9)
    (i32.const 1)
   )
  )
  (loop $for-loop|0
   (if
    (i32.lt_s
     (local.get $4)
     (i32.load offset=12
      (i32.load offset=4
       (local.get $5)
      )
     )
    )
    (block
     (call $~lib/as-chain/idxdb/IDXDB#storeEx@virtual
      (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
       (i32.load offset=4
        (local.get $5)
       )
       (local.get $4)
      )
      (call $tables/recallVoters.table/RecallVotersTable#getPrimaryValue
       (local.get $0)
      )
      (call $tables/elections.table/ElectionsTable#getSecondaryValue)
      (i64.load
       (local.get $2)
      )
     )
     (local.set $4
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (if
   (i64.ge_u
    (local.tee $9
     (call $tables/recallVoters.table/RecallVotersTable#getPrimaryValue
      (local.get $0)
     )
    )
    (i64.load offset=8
     (local.get $5)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $5)
    (select
     (i64.const -2)
     (i64.add
      (local.get $9)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $9)
      (i64.const -2)
     )
    )
   )
  )
  (if
   (i64.ge_u
    (local.get $8)
    (i64.load offset=8
     (local.get $3)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $3)
    (select
     (i64.const -2)
     (i64.add
      (local.get $8)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $8)
      (i64.const -2)
     )
    )
   )
  )
 )
 (func $snipvote.contract/snipvoting#recallResult (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (call $~lib/as-chain/system/check
   (call $~lib/array/Array<~lib/string/String>#includes
    (i32.const 2464)
    (local.get $2)
   )
   (i32.const 15344)
  )
  (call $~lib/as-chain/system/check
   (i32.ne
    (call $~lib/proton-tsc/modules/store/store/TableStore<tables/elections.table/ElectionsTable>#get
     (i32.load offset=12
      (local.get $0)
     )
     (call $utils/index/stringToU64
      (local.get $1)
     )
    )
    (i32.const 0)
   )
   (i32.const 13536)
  )
  (local.set $10
   (call $~lib/as-chain/system/currentTimeSec)
  )
  (local.set $5
   (call $~lib/rt/__newArray
    (i32.const 0)
    (i32.const 2)
    (i32.const 102)
    (i32.const 17024)
   )
  )
  (local.set $2
   (call $~lib/proton-tsc/modules/store/store/TableStore<tables/recallVote.table/RecallVotesTable>#first
    (i32.load offset=28
     (local.get $0)
    )
   )
  )
  (loop $while-continue|0
   (if
    (local.get $2)
    (block
     (call $~lib/array/Array<~lib/as-chain/name/Name>#push
      (local.get $5)
      (local.get $2)
     )
     (local.set $2
      (call $~lib/proton-tsc/modules/store/store/TableStore<tables/recallVote.table/RecallVotesTable>#next
       (i32.load offset=28
        (local.get $0)
       )
       (local.get $2)
      )
     )
     (br $while-continue|0)
    )
   )
  )
  (call $~lib/as-chain/system/check
   (i32.gt_s
    (i32.load offset=12
     (local.get $5)
    )
    (i32.const 0)
   )
   (i32.const 17056)
  )
  (loop $for-loop|1
   (if
    (i32.lt_s
     (local.get $8)
     (i32.load offset=12
      (local.get $5)
     )
    )
    (block
     (local.set $4
      (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
       (local.get $5)
       (local.get $8)
      )
     )
     (if
      (i32.eq
       (call $~lib/string/String#toLowerCase
        (local.get $1)
       )
       (call $~lib/string/String#toLowerCase
        (i32.load offset=4
         (local.get $4)
        )
       )
      )
      (block
       (call $~lib/as-chain/system/check
        (i64.lt_u
         (i64.load offset=40
          (local.get $4)
         )
         (i64.extend_i32_u
          (local.get $10)
         )
        )
        (i32.const 17168)
       )
       (call $~lib/as-chain/system/check
        (i64.le_u
         (i64.load offset=32
          (local.get $4)
         )
         (i64.extend_i32_u
          (local.get $10)
         )
        )
        (i32.const 17264)
       )
       (call $~lib/as-chain/system/check
        (i64.gt_u
         (i64.load offset=24
          (local.get $4)
         )
         (i64.load offset=16
          (local.get $4)
         )
        )
        (i32.const 17376)
       )
       (call $~lib/as-chain/system/check
        (i32.ne
         (local.tee $2
          (call $~lib/proton-tsc/modules/store/store/TableStore<tables/winners.table/WinnersTable>#get
           (i32.load offset=24
            (local.get $0)
           )
           (i64.add
            (i64.load
             (i32.load
              (local.get $4)
             )
            )
            (call $utils/index/stringToU64
             (local.get $1)
            )
           )
          )
         )
         (i32.const 0)
        )
        (i32.const 17488)
       )
       (local.set $11
        (i32.const 0)
       )
       (if
        (local.get $2)
        (block
         (local.set $11
          (i32.load8_u offset=20
           (local.get $2)
          )
         )
         (call $~lib/proton-tsc/modules/store/store/TableStore<tables/winners.table/WinnersTable>#remove
          (i32.load offset=24
           (local.get $0)
          )
          (local.get $2)
         )
        )
       )
       (local.set $6
        (call $~lib/rt/__newArray
         (i32.const 0)
         (i32.const 2)
         (i32.const 99)
         (i32.const 17584)
        )
       )
       (local.set $2
        (call $~lib/proton-tsc/modules/store/store/TableStore<tables/candidates.table/CandidatesTable>#first
         (i32.load offset=16
          (local.get $0)
         )
        )
       )
       (loop $while-continue|2
        (if
         (local.get $2)
         (block
          (if
           (i32.eq
            (local.get $1)
            (i32.load offset=8
             (local.get $2)
            )
           )
           (call $~lib/array/Array<~lib/as-chain/name/Name>#push
            (local.get $6)
            (local.get $2)
           )
          )
          (local.set $2
           (call $~lib/proton-tsc/modules/store/store/TableStore<tables/candidates.table/CandidatesTable>#next
            (i32.load offset=16
             (local.get $0)
            )
            (local.get $2)
           )
          )
          (br $while-continue|2)
         )
        )
       )
       (call $~lib/as-chain/system/check
        (i32.gt_s
         (i32.load offset=12
          (local.get $6)
         )
         (i32.const 0)
        )
        (i32.const 17616)
       )
       (local.set $2
        (i32.const 0)
       )
       (local.set $7
        (i32.const 0)
       )
       (loop $for-loop|3
        (if
         (i32.lt_s
          (local.get $7)
          (i32.load offset=12
           (local.get $6)
          )
         )
         (block
          (block $for-continue|3
           (br_if $for-continue|3
            (i32.eq
             (i32.load
              (local.tee $9
               (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
                (local.get $6)
                (local.get $7)
               )
              )
             )
             (i32.load
              (local.get $4)
             )
            )
           )
           (br_if $for-continue|3
            (call $~lib/proton-tsc/modules/store/store/TableStore<tables/winners.table/WinnersTable>#get
             (i32.load offset=24
              (local.get $0)
             )
             (i64.add
              (i64.load
               (i32.load
                (local.get $9)
               )
              )
              (call $utils/index/stringToU64
               (local.get $1)
              )
             )
            )
           )
           (local.set $2
            (if (result i32)
             (local.tee $3
              (local.get $2)
             )
             (i64.gt_u
              (i64.load offset=16
               (local.get $9)
              )
              (i64.load offset=16
               (local.get $3)
              )
             )
             (i32.const 1)
            )
           )
           (local.set $2
            (select
             (local.get $9)
             (local.get $3)
             (local.get $2)
            )
           )
          )
          (local.set $7
           (i32.add
            (local.get $7)
            (i32.const 1)
           )
          )
          (br $for-loop|3)
         )
        )
       )
       (call $~lib/as-chain/system/check
        (i32.ne
         (local.get $2)
         (i32.const 0)
        )
        (i32.const 17712)
       )
       (if
        (local.get $2)
        (block
         (local.set $2
          (call $tables/winners.table/WinnersTable#constructor
           (i32.load
            (local.get $2)
           )
           (i32.load offset=4
            (local.get $2)
           )
           (i64.load offset=16
            (local.get $2)
           )
           (local.get $1)
           (local.get $11)
           (i32.const 0)
          )
         )
         (call $~lib/proton-tsc/modules/store/store/TableStore<tables/winners.table/WinnersTable>#update
          (i32.load offset=24
           (local.get $0)
          )
          (local.get $2)
          (i32.load
           (local.get $0)
          )
         )
        )
       )
       (call $tables/recallVote.table/RecallVotesTable#set:status
        (local.get $4)
        (i32.const 16000)
       )
       (call $~lib/proton-tsc/modules/store/store/TableStore<tables/recallVote.table/RecallVotesTable>#update
        (i32.load offset=28
         (local.get $0)
        )
        (local.get $4)
        (i32.load
         (local.get $0)
        )
       )
      )
     )
     (local.set $8
      (i32.add
       (local.get $8)
       (i32.const 1)
      )
     )
     (br $for-loop|1)
    )
   )
  )
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/moderatorCand.table/ModeratorCandTable>#get (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (local $3 i32)
  (block $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/moderatorCand.table/ModeratorCandTable>#getByKey (result i32)
   (drop
    (br_if $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/moderatorCand.table/ModeratorCandTable>#getByKey
     (i32.const 0)
     (i32.eqz
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
       (local.tee $2
        (call $~lib/as-chain/mi/MultiIndex<tables/moderatorCand.table/ModeratorCandTable>#find
         (local.tee $0
          (i32.load
           (local.get $0)
          )
         )
         (local.get $1)
        )
       )
      )
     )
    )
   )
   (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/moderatorCand.table/ModeratorCandTable>#get (result i32)
    (local.set $3
     (i32.load
      (local.get $0)
     )
    )
    (drop
     (br_if $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/moderatorCand.table/ModeratorCandTable>#get
      (i32.const 0)
      (i32.eqz
       (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
        (local.tee $0
         (local.get $2)
        )
       )
      )
     )
    )
    (call $~lib/as-chain/dbi64/DBI64<tables/moderatorCand.table/ModeratorCandTable>#getEx
     (local.get $3)
     (i32.load offset=4
      (local.get $0)
     )
    )
   )
  )
 )
 (func $tables/moderatorCand.table/ModeratorCandTable#pack (param $0 i32) (result i32)
  (local $1 i32)
  (call $~lib/as-chain/serializer/Encoder#pack
   (local.tee $1
    (call $~lib/as-chain/serializer/Encoder#constructor
     (block (result i32)
      (drop
       (i32.load
        (local.get $0)
       )
      )
      (i32.add
       (i32.add
        (call $~lib/as-chain/utils/Utils.calcPackedStringLength
         (i32.load offset=4
          (local.get $0)
         )
        )
        (call $~lib/as-chain/utils/Utils.calcPackedStringLength
         (i32.load offset=24
          (local.get $0)
         )
        )
       )
       (i32.const 32)
      )
     )
    )
   )
   (i32.load
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=4
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=8
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=16
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=24
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=32
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#getBytes
   (local.get $1)
  )
 )
 (func $snipvote.contract/snipvoting#moderatorApply (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 i64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i64)
  (local $10 i32)
  (call $~lib/as-chain/action/requireAuth
   (local.get $1)
  )
  (local.set $3
   (call $~lib/as-chain/system/currentTimeSec)
  )
  (call $~lib/as-chain/system/check
   (i32.eqz
    (call $~lib/proton-tsc/modules/store/store/TableStore<tables/moderatorCand.table/ModeratorCandTable>#get
     (i32.load offset=36
      (local.get $0)
     )
     (i64.load
      (local.get $1)
     )
    )
   )
   (i32.const 17856)
  )
  (local.set $1
   (call $tables/moderatorCand.table/ModeratorCandTable#constructor
    (local.get $1)
    (local.get $2)
    (i64.extend_i32_u
     (local.get $3)
    )
   )
  )
  (local.set $2
   (i32.load
    (local.get $0)
   )
  )
  (local.set $3
   (i32.load offset=36
    (local.get $0)
   )
  )
  (local.set $5
   (call $tables/moderatorCand.table/ModeratorCandTable#getPrimaryValue
    (local.get $1)
   )
  )
  (call $~lib/as-chain/system/check
   (i32.eqz
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
     (call $~lib/as-chain/mi/MultiIndex<tables/moderatorCand.table/ModeratorCandTable>#find
      (i32.load
       (local.get $3)
      )
      (local.get $5)
     )
    )
   )
   (i32.const 1200)
  )
  (local.set $8
   (i32.load
    (local.tee $7
     (i32.load
      (local.get $3)
     )
    )
   )
  )
  (local.set $4
   (call $tables/moderatorCand.table/ModeratorCandTable#getPrimaryValue
    (local.tee $0
     (local.get $1)
    )
   )
  )
  (local.set $9
   (i64.load
    (local.get $2)
   )
  )
  (local.set $10
   (i32.load offset=12
    (local.tee $1
     (call $tables/moderatorCand.table/ModeratorCandTable#pack
      (local.get $1)
     )
    )
   )
  )
  (drop
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/moderatorCand.table/ModeratorCandTable>#constructor
    (local.get $8)
    (call $~lib/as-chain/env/db_store_i64
     (i64.load offset=8
      (local.get $8)
     )
     (i64.load offset=16
      (local.get $8)
     )
     (local.get $9)
     (local.get $4)
     (i32.load offset=4
      (local.get $1)
     )
     (local.get $10)
    )
    (local.get $4)
    (i32.const 1)
   )
  )
  (loop $for-loop|0
   (if
    (i32.lt_s
     (local.get $6)
     (i32.load offset=12
      (i32.load offset=4
       (local.get $7)
      )
     )
    )
    (block
     (call $~lib/as-chain/idxdb/IDXDB#storeEx@virtual
      (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
       (i32.load offset=4
        (local.get $7)
       )
       (local.get $6)
      )
      (call $tables/moderatorCand.table/ModeratorCandTable#getPrimaryValue
       (local.get $0)
      )
      (call $tables/elections.table/ElectionsTable#getSecondaryValue)
      (i64.load
       (local.get $2)
      )
     )
     (local.set $6
      (i32.add
       (local.get $6)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (if
   (i64.ge_u
    (local.tee $4
     (call $tables/moderatorCand.table/ModeratorCandTable#getPrimaryValue
      (local.get $0)
     )
    )
    (i64.load offset=8
     (local.get $7)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $7)
    (select
     (i64.const -2)
     (i64.add
      (local.get $4)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $4)
      (i64.const -2)
     )
    )
   )
  )
  (if
   (i64.ge_u
    (local.get $5)
    (i64.load offset=8
     (local.get $3)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $3)
    (select
     (i64.const -2)
     (i64.add
      (local.get $5)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $5)
      (i64.const -2)
     )
    )
   )
  )
 )
 (func $~lib/util/string/isSpace (param $0 i32) (result i32)
  (if
   (i32.lt_u
    (local.get $0)
    (i32.const 5760)
   )
   (return
    (i32.or
     (i32.eq
      (i32.or
       (local.get $0)
       (i32.const 128)
      )
      (i32.const 160)
     )
     (i32.le_u
      (i32.sub
       (local.get $0)
       (i32.const 9)
      )
      (i32.const 4)
     )
    )
   )
  )
  (if
   (i32.le_u
    (i32.add
     (local.get $0)
     (i32.const -8192)
    )
    (i32.const 10)
   )
   (return
    (i32.const 1)
   )
  )
  (if
   (i32.or
    (i32.or
     (i32.or
      (i32.eq
       (local.get $0)
       (i32.const 5760)
      )
      (i32.eq
       (local.get $0)
       (i32.const 8232)
      )
     )
     (i32.or
      (i32.eq
       (local.get $0)
       (i32.const 8233)
      )
      (i32.eq
       (local.get $0)
       (i32.const 8239)
      )
     )
    )
    (i32.or
     (i32.or
      (i32.eq
       (local.get $0)
       (i32.const 8287)
      )
      (i32.eq
       (local.get $0)
       (i32.const 12288)
      )
     )
     (i32.eq
      (local.get $0)
      (i32.const 65279)
     )
    )
   )
   (return
    (i32.const 1)
   )
  )
  (i32.const 0)
 )
 (func $tables/moderatorVoter.table/ModeratorVotersTable#pack (param $0 i32) (result i32)
  (local $1 i32)
  (call $~lib/as-chain/serializer/Encoder#pack
   (local.tee $1
    (call $~lib/as-chain/serializer/Encoder#constructor
     (block (result i32)
      (drop
       (i32.load
        (local.get $0)
       )
      )
      (drop
       (i32.load offset=4
        (local.get $0)
       )
      )
      (i32.add
       (call $~lib/as-chain/utils/Utils.calcPackedStringLength
        (i32.load offset=8
         (local.get $0)
        )
       )
       (i32.const 24)
      )
     )
    )
   )
   (i32.load
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#pack
   (local.get $1)
   (i32.load offset=4
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=8
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=16
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#getBytes
   (local.get $1)
  )
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/moderators.table/ModeratorsTable>#constructor (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32) (result i32)
  (local $4 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $4
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 103)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (i32.const 0)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (i64.const 0)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $4)
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (local.get $1)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (local.get $2)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (local.get $3)
  )
  (local.get $4)
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/moderators.table/ModeratorsTable>#find (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/moderators.table/ModeratorsTable>#find (result i32)
   (if
    (i32.ge_s
     (local.tee $2
      (call $~lib/as-chain/env/db_find_i64
       (i64.load
        (local.tee $0
         (i32.load
          (local.get $0)
         )
        )
       )
       (i64.load offset=8
        (local.get $0)
       )
       (i64.load offset=16
        (local.get $0)
       )
       (local.get $1)
      )
     )
     (i32.const 0)
    )
    (br $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/moderators.table/ModeratorsTable>#find
     (call $~lib/as-chain/dbi64/PrimaryIterator<tables/moderators.table/ModeratorsTable>#constructor
      (local.get $0)
      (local.get $2)
      (local.get $1)
      (i32.const 1)
     )
    )
   )
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/moderators.table/ModeratorsTable>#constructor
    (local.get $0)
    (local.get $2)
    (i64.const 0)
    (i32.const 0)
   )
  )
 )
 (func $tables/moderators.table/ModeratorsTable#pack (param $0 i32) (result i32)
  (local $1 i32)
  (call $~lib/as-chain/serializer/Encoder#pack
   (local.tee $1
    (call $~lib/as-chain/serializer/Encoder#constructor
     (block (result i32)
      (drop
       (i32.load
        (local.get $0)
       )
      )
      (i32.add
       (call $~lib/as-chain/utils/Utils.calcPackedStringLength
        (i32.load offset=4
         (local.get $0)
        )
       )
       (i32.const 16)
      )
     )
    )
   )
   (i32.load
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=4
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=8
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#getBytes
   (local.get $1)
  )
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/moderatorCand.table/ModeratorCandTable>#update (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i64)
  (call $~lib/as-chain/system/check
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
    (local.get $1)
   )
   (i32.const 14288)
  )
  (call $~lib/as-chain/system/check
   (i64.eq
    (local.tee $4
     (call $tables/moderatorCand.table/ModeratorCandTable#getPrimaryValue
      (local.get $2)
     )
    )
    (block $__inlined_func$~lib/as-chain/dbi64/PrimaryIterator<tables/moderatorCand.table/ModeratorCandTable>#get:primary (result i64)
     (call $~lib/as-chain/system/check
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
       (local.get $1)
      )
      (i32.const 14352)
     )
     (if
      (i32.load8_u offset=8
       (local.get $1)
      )
      (br $__inlined_func$~lib/as-chain/dbi64/PrimaryIterator<tables/moderatorCand.table/ModeratorCandTable>#get:primary
       (i64.load offset=16
        (local.get $1)
       )
      )
     )
     (if
      (i32.eqz
       (local.tee $6
        (call $~lib/as-chain/dbi64/PrimaryIterator<tables/moderatorCand.table/ModeratorCandTable>#getValue
         (local.get $1)
        )
       )
      )
      (unreachable)
     )
     (call $tables/elections.table/ElectionsTable#set:endTime
      (local.get $1)
      (call $tables/moderatorCand.table/ModeratorCandTable#getPrimaryValue
       (local.get $6)
      )
     )
     (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
      (local.get $1)
      (i32.const 1)
     )
     (i64.load offset=16
      (local.get $1)
     )
    )
   )
   (i32.const 14432)
  )
  (drop
   (i32.load
    (local.get $0)
   )
  )
  (local.set $7
   (i64.load
    (local.get $3)
   )
  )
  (local.set $6
   (i32.load offset=12
    (local.tee $2
     (call $tables/moderatorCand.table/ModeratorCandTable#pack
      (local.get $2)
     )
    )
   )
  )
  (call $~lib/as-chain/env/db_update_i64
   (i32.load offset=4
    (local.get $1)
   )
   (local.get $7)
   (i32.load offset=4
    (local.get $2)
   )
   (local.get $6)
  )
  (loop $for-loop|0
   (if
    (i32.lt_s
     (local.get $5)
     (i32.load offset=12
      (i32.load offset=4
       (local.get $0)
      )
     )
    )
    (block
     (local.set $1
      (call $~lib/as-chain/idxdb/IDXDB#findPrimaryEx@virtual
       (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
        (i32.load offset=4
         (local.get $0)
        )
        (local.get $5)
       )
       (local.get $4)
      )
     )
     (local.set $2
      (call $tables/elections.table/ElectionsTable#getSecondaryValue)
     )
     (if
      (i32.eqz
       (if (result i32)
        (i32.eq
         (i32.load
          (i32.load offset=4
           (local.get $1)
          )
         )
         (i32.load
          (local.get $2)
         )
        )
        (i32.eq
         (i32.load offset=4
          (i32.load offset=4
           (local.get $1)
          )
         )
         (i32.load offset=4
          (local.get $2)
         )
        )
        (i32.const 0)
       )
      )
      (call $~lib/as-chain/idxdb/IDXDB#updateEx@virtual
       (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
        (i32.load offset=4
         (local.get $0)
        )
        (local.get $5)
       )
       (i32.load
        (local.get $1)
       )
       (call $tables/elections.table/ElectionsTable#getSecondaryValue)
       (i64.load
        (local.get $3)
       )
      )
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (if
   (i64.ge_u
    (local.get $4)
    (i64.load offset=8
     (local.get $0)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $0)
    (select
     (i64.const -2)
     (i64.add
      (local.get $4)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $4)
      (i64.const -2)
     )
    )
   )
  )
 )
 (func $snipvote.contract/snipvoting#moderatorVote (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i64)
  (local $10 i64)
  (local $11 i32)
  (local $12 i32)
  (local $13 i64)
  (local $14 i32)
  (call $~lib/as-chain/action/requireAuth
   (local.get $1)
  )
  (local.set $11
   (call $~lib/as-chain/system/currentTimeSec)
  )
  (local.set $4
   (call $~lib/proton-tsc/modules/store/store/TableStore<tables/winners.table/WinnersTable>#first
    (i32.load offset=24
     (local.get $0)
    )
   )
  )
  (loop $while-continue|0
   (if
    (local.get $4)
    (block $while-break|0
     (if
      (if (result i32)
       (i64.eq
        (i64.load
         (i32.load
          (local.get $4)
         )
        )
        (i64.load
         (local.get $1)
        )
       )
       (i64.eq
        (call $utils/index/stringToU64
         (i32.load offset=24
          (local.get $4)
         )
        )
        (call $utils/index/stringToU64
         (i32.const 2656)
        )
       )
       (i32.const 0)
      )
      (block
       (local.set $6
        (i32.const 1)
       )
       (br $while-break|0)
      )
     )
     (local.set $4
      (call $~lib/proton-tsc/modules/store/store/TableStore<tables/winners.table/WinnersTable>#next
       (i32.load offset=24
        (local.get $0)
       )
       (local.get $4)
      )
     )
     (br $while-continue|0)
    )
   )
  )
  (call $~lib/as-chain/system/check
   (local.get $6)
   (i32.const 17936)
  )
  (call $~lib/as-chain/system/check
   (i32.eqz
    (block $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/moderatorVoter.table/ModeratorVotersTable>#getByKey (result i32)
     (drop
      (br_if $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/moderatorVoter.table/ModeratorVotersTable>#getByKey
       (i32.const 0)
       (i32.eqz
        (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
         (local.tee $5
          (call $~lib/as-chain/mi/MultiIndex<tables/moderatorVoter.table/ModeratorVotersTable>#find
           (local.tee $6
            (i32.load
             (i32.load offset=44
              (local.get $0)
             )
            )
           )
           (i64.add
            (i64.load
             (local.get $1)
            )
            (i64.load
             (local.get $2)
            )
           )
          )
         )
        )
       )
      )
     )
     (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/moderatorVoter.table/ModeratorVotersTable>#get (result i32)
      (local.set $6
       (i32.load
        (local.get $6)
       )
      )
      (drop
       (br_if $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/moderatorVoter.table/ModeratorVotersTable>#get
        (i32.const 0)
        (i32.eqz
         (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
          (local.get $5)
         )
        )
       )
      )
      (call $~lib/as-chain/dbi64/DBI64<tables/moderatorVoter.table/ModeratorVotersTable>#getEx
       (local.get $6)
       (i32.load offset=4
        (local.get $5)
       )
      )
     )
    )
   )
   (i32.const 18016)
  )
  (call $~lib/as-chain/system/check
   (i32.ne
    (local.tee $6
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/moderatorCand.table/ModeratorCandTable>#get
      (i32.load offset=36
       (local.get $0)
      )
      (i64.load
       (local.get $2)
      )
     )
    )
    (i32.const 0)
   )
   (i32.const 15232)
  )
  (if
   (i32.eqz
    (local.get $6)
   )
   (unreachable)
  )
  (local.set $7
   (i32.shl
    (local.tee $12
     (call $~lib/string/String#get:length
      (local.tee $4
       (call $~lib/string/String#toLowerCase
        (i32.load offset=24
         (local.get $6)
        )
       )
      )
     )
    )
    (i32.const 1)
   )
  )
  (loop $while-continue|00
   (if
    (if (result i32)
     (local.get $7)
     (call $~lib/util/string/isSpace
      (i32.load16_u
       (i32.sub
        (i32.add
         (local.get $4)
         (local.get $7)
        )
        (i32.const 2)
       )
      )
     )
     (i32.const 0)
    )
    (block
     (local.set $7
      (i32.sub
       (local.get $7)
       (i32.const 2)
      )
     )
     (br $while-continue|00)
    )
   )
  )
  (loop $while-continue|1
   (if
    (if (result i32)
     (i32.gt_u
      (local.get $7)
      (local.get $8)
     )
     (call $~lib/util/string/isSpace
      (i32.load16_u
       (i32.add
        (local.get $4)
        (local.get $8)
       )
      )
     )
     (i32.const 0)
    )
    (block
     (local.set $8
      (i32.add
       (local.get $8)
       (i32.const 2)
      )
     )
     (local.set $7
      (i32.sub
       (local.get $7)
       (i32.const 2)
      )
     )
     (br $while-continue|1)
    )
   )
  )
  (block $__inlined_func$~lib/string/String#trim
   (if
    (i32.eqz
     (local.get $7)
    )
    (block
     (local.set $4
      (i32.const 2512)
     )
     (br $__inlined_func$~lib/string/String#trim)
    )
   )
   (br_if $__inlined_func$~lib/string/String#trim
    (select
     (i32.const 0)
     (i32.eq
      (local.get $7)
      (i32.shl
       (local.get $12)
       (i32.const 1)
      )
     )
     (local.get $8)
    )
   )
   (call $~lib/memory/memory.copy
    (local.tee $5
     (call $~lib/rt/stub/__new
      (local.get $7)
      (i32.const 1)
     )
    )
    (i32.add
     (local.get $4)
     (local.get $8)
    )
    (local.get $7)
   )
   (local.set $4
    (local.get $5)
   )
  )
  (call $~lib/as-chain/system/check
   (i64.eq
    (call $utils/index/stringToU64
     (local.get $4)
    )
    (call $utils/index/stringToU64
     (i32.const 2848)
    )
   )
   (i32.const 18128)
  )
  (call $~lib/as-chain/system/check
   (if (result i32)
    (i64.eq
     (call $utils/index/stringToU64
      (local.get $3)
     )
     (call $utils/index/stringToU64
      (i32.const 18224)
     )
    )
    (i32.const 1)
    (i64.eq
     (call $utils/index/stringToU64
      (local.get $3)
     )
     (call $utils/index/stringToU64
      (i32.const 18272)
     )
    )
   )
   (i32.const 18304)
  )
  (if
   (local.get $6)
   (if
    (i64.eq
     (call $utils/index/stringToU64
      (local.get $3)
     )
     (call $utils/index/stringToU64
      (i32.const 18224)
     )
    )
    (call $tables/elections.table/ElectionsTable#set:startTime
     (local.get $6)
     (i64.add
      (i64.load offset=8
       (local.get $6)
      )
      (i64.const 1)
     )
    )
    (call $tables/elections.table/ElectionsTable#set:endTime
     (local.get $6)
     (i64.add
      (i64.load offset=16
       (local.get $6)
      )
      (i64.const 1)
     )
    )
   )
  )
  (local.set $1
   (call $tables/moderatorVoter.table/ModeratorVotersTable#constructor
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (i64.extend_i32_u
     (local.get $11)
    )
   )
  )
  (local.set $3
   (i32.load
    (local.get $0)
   )
  )
  (local.set $4
   (i32.load offset=44
    (local.get $0)
   )
  )
  (local.set $9
   (call $tables/moderatorVoter.table/ModeratorVotersTable#getPrimaryValue
    (local.get $1)
   )
  )
  (call $~lib/as-chain/system/check
   (i32.eqz
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
     (call $~lib/as-chain/mi/MultiIndex<tables/moderatorVoter.table/ModeratorVotersTable>#find
      (i32.load
       (local.get $4)
      )
      (local.get $9)
     )
    )
   )
   (i32.const 1200)
  )
  (local.set $5
   (i32.const 0)
  )
  (local.set $8
   (i32.load
    (local.tee $7
     (i32.load
      (local.get $4)
     )
    )
   )
  )
  (local.set $10
   (call $tables/moderatorVoter.table/ModeratorVotersTable#getPrimaryValue
    (local.get $1)
   )
  )
  (local.set $13
   (i64.load
    (local.get $3)
   )
  )
  (local.set $14
   (i32.load offset=12
    (local.tee $12
     (call $tables/moderatorVoter.table/ModeratorVotersTable#pack
      (local.get $1)
     )
    )
   )
  )
  (drop
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/moderatorVoter.table/ModeratorVotersTable>#constructor
    (local.get $8)
    (call $~lib/as-chain/env/db_store_i64
     (i64.load offset=8
      (local.get $8)
     )
     (i64.load offset=16
      (local.get $8)
     )
     (local.get $13)
     (local.get $10)
     (i32.load offset=4
      (local.get $12)
     )
     (local.get $14)
    )
    (local.get $10)
    (i32.const 1)
   )
  )
  (loop $for-loop|0
   (if
    (i32.lt_s
     (local.get $5)
     (i32.load offset=12
      (i32.load offset=4
       (local.get $7)
      )
     )
    )
    (block
     (call $~lib/as-chain/idxdb/IDXDB#storeEx@virtual
      (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
       (i32.load offset=4
        (local.get $7)
       )
       (local.get $5)
      )
      (call $tables/moderatorVoter.table/ModeratorVotersTable#getPrimaryValue
       (local.get $1)
      )
      (call $tables/elections.table/ElectionsTable#getSecondaryValue)
      (i64.load
       (local.get $3)
      )
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (if
   (i64.ge_u
    (local.tee $10
     (call $tables/moderatorVoter.table/ModeratorVotersTable#getPrimaryValue
      (local.get $1)
     )
    )
    (i64.load offset=8
     (local.get $7)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $7)
    (select
     (i64.const -2)
     (i64.add
      (local.get $10)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $10)
      (i64.const -2)
     )
    )
   )
  )
  (if
   (i64.ge_u
    (local.get $9)
    (i64.load offset=8
     (local.get $4)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $4)
    (select
     (i64.const -2)
     (i64.add
      (local.get $9)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $9)
      (i64.const -2)
     )
    )
   )
  )
  (if
   (local.get $6)
   (block
    (if
     (i64.ge_u
      (i64.load offset=8
       (local.get $6)
      )
      (i64.const 5)
     )
     (block
      (call $tables/candidates.table/CandidatesTable#set:status
       (local.get $6)
       (i32.const 18400)
      )
      (local.set $1
       (call $tables/moderators.table/ModeratorsTable#constructor
        (local.get $2)
        (i32.load offset=4
         (local.get $6)
        )
        (i64.extend_i32_u
         (local.get $11)
        )
       )
      )
      (local.set $2
       (i32.load
        (local.get $0)
       )
      )
      (local.set $3
       (i32.load offset=40
        (local.get $0)
       )
      )
      (local.set $9
       (call $tables/moderatorCand.table/ModeratorCandTable#getPrimaryValue
        (local.get $1)
       )
      )
      (call $~lib/as-chain/system/check
       (i32.eqz
        (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
         (call $~lib/as-chain/mi/MultiIndex<tables/moderators.table/ModeratorsTable>#find
          (i32.load
           (local.get $3)
          )
          (local.get $9)
         )
        )
       )
       (i32.const 1200)
      )
      (local.set $4
       (i32.const 0)
      )
      (local.set $7
       (i32.load
        (local.tee $5
         (i32.load
          (local.get $3)
         )
        )
       )
      )
      (local.set $10
       (call $tables/moderatorCand.table/ModeratorCandTable#getPrimaryValue
        (local.get $1)
       )
      )
      (local.set $13
       (i64.load
        (local.get $2)
       )
      )
      (local.set $11
       (i32.load offset=12
        (local.tee $8
         (call $tables/moderators.table/ModeratorsTable#pack
          (local.get $1)
         )
        )
       )
      )
      (drop
       (call $~lib/as-chain/dbi64/PrimaryIterator<tables/moderators.table/ModeratorsTable>#constructor
        (local.get $7)
        (call $~lib/as-chain/env/db_store_i64
         (i64.load offset=8
          (local.get $7)
         )
         (i64.load offset=16
          (local.get $7)
         )
         (local.get $13)
         (local.get $10)
         (i32.load offset=4
          (local.get $8)
         )
         (local.get $11)
        )
        (local.get $10)
        (i32.const 1)
       )
      )
      (loop $for-loop|00
       (if
        (i32.lt_s
         (local.get $4)
         (i32.load offset=12
          (i32.load offset=4
           (local.get $5)
          )
         )
        )
        (block
         (call $~lib/as-chain/idxdb/IDXDB#storeEx@virtual
          (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
           (i32.load offset=4
            (local.get $5)
           )
           (local.get $4)
          )
          (call $tables/moderatorCand.table/ModeratorCandTable#getPrimaryValue
           (local.get $1)
          )
          (call $tables/elections.table/ElectionsTable#getSecondaryValue)
          (i64.load
           (local.get $2)
          )
         )
         (local.set $4
          (i32.add
           (local.get $4)
           (i32.const 1)
          )
         )
         (br $for-loop|00)
        )
       )
      )
      (if
       (i64.ge_u
        (local.tee $10
         (call $tables/moderatorCand.table/ModeratorCandTable#getPrimaryValue
          (local.get $1)
         )
        )
        (i64.load offset=8
         (local.get $5)
        )
       )
       (call $tables/elections.table/ElectionsTable#set:startTime
        (local.get $5)
        (select
         (i64.const -2)
         (i64.add
          (local.get $10)
          (i64.const 1)
         )
         (i64.ge_u
          (local.get $10)
          (i64.const -2)
         )
        )
       )
      )
      (if
       (i64.ge_u
        (local.get $9)
        (i64.load offset=8
         (local.get $3)
        )
       )
       (call $tables/elections.table/ElectionsTable#set:startTime
        (local.get $3)
        (select
         (i64.const -2)
         (i64.add
          (local.get $9)
          (i64.const 1)
         )
         (i64.ge_u
          (local.get $9)
          (i64.const -2)
         )
        )
       )
      )
     )
     (if
      (i64.gt_u
       (i64.load offset=16
        (local.get $6)
       )
       (i64.const 2)
      )
      (call $tables/candidates.table/CandidatesTable#set:status
       (local.get $6)
       (i32.const 18448)
      )
     )
    )
    (local.set $1
     (i32.load
      (local.get $0)
     )
    )
    (local.set $0
     (i32.load offset=36
      (local.get $0)
     )
    )
    (local.set $9
     (call $tables/moderatorCand.table/ModeratorCandTable#getPrimaryValue
      (local.get $6)
     )
    )
    (local.set $2
     (call $~lib/as-chain/mi/MultiIndex<tables/moderatorCand.table/ModeratorCandTable>#requireFind
      (i32.load
       (local.get $0)
      )
      (local.get $9)
      (i32.const 1424)
     )
    )
    (call $~lib/as-chain/mi/MultiIndex<tables/moderatorCand.table/ModeratorCandTable>#update
     (i32.load
      (local.get $0)
     )
     (local.get $2)
     (local.get $6)
     (local.get $1)
    )
   )
  )
 )
 (func $tables/moderators.table/ModeratorsTable#unpack (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/as-chain/serializer/Decoder#constructor
    (local.get $1)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $0)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (i32.load offset=4
   (local.get $1)
  )
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/moderators.table/ModeratorsTable>#get (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (local $3 i32)
  (block $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/moderators.table/ModeratorsTable>#getByKey (result i32)
   (drop
    (br_if $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/moderators.table/ModeratorsTable>#getByKey
     (i32.const 0)
     (i32.eqz
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
       (local.tee $2
        (call $~lib/as-chain/mi/MultiIndex<tables/moderators.table/ModeratorsTable>#find
         (local.tee $0
          (i32.load
           (local.get $0)
          )
         )
         (local.get $1)
        )
       )
      )
     )
    )
   )
   (drop
    (i32.load
     (local.get $0)
    )
   )
   (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/moderators.table/ModeratorsTable>#get
    (if
     (i32.eqz
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
       (local.get $2)
      )
     )
     (block
      (local.set $0
       (i32.const 0)
      )
      (br $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/moderators.table/ModeratorsTable>#get)
     )
    )
    (local.set $0
     (i32.const 0)
    )
    (if
     (local.tee $3
      (call $~lib/as-chain/env/db_get_i64
       (local.tee $2
        (i32.load offset=4
         (local.get $2)
        )
       )
       (i32.const 0)
       (i32.const 0)
      )
     )
     (block
      (drop
       (call $~lib/as-chain/env/db_get_i64
        (local.get $2)
        (i32.load offset=4
         (local.tee $2
          (call $~lib/array/Array<u8>#constructor
           (local.get $3)
          )
         )
        )
        (local.get $3)
       )
      )
      (global.set $~argumentsLength
       (i32.const 0)
      )
      (drop
       (call $tables/moderators.table/ModeratorsTable#unpack
        (local.tee $0
         (call $tables/moderators.table/ModeratorsTable#constructor@varargs)
        )
        (local.get $2)
       )
      )
     )
    )
   )
   (local.get $0)
  )
 )
 (func $tables/modRecall.table/ModRecallTable#pack (param $0 i32) (result i32)
  (local $1 i32)
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.tee $1
    (call $~lib/as-chain/serializer/Encoder#constructor
     (block (result i32)
      (drop
       (i32.load offset=8
        (local.get $0)
       )
      )
      (i32.add
       (i32.add
        (i32.add
         (call $~lib/as-chain/utils/Utils.calcPackedStringLength
          (i32.load offset=12
           (local.get $0)
          )
         )
         (call $~lib/as-chain/utils/Utils.calcPackedStringLength
          (i32.load offset=16
           (local.get $0)
          )
         )
        )
        (i32.const 32)
       )
       (call $~lib/as-chain/utils/Utils.calcPackedStringLength
        (i32.load offset=40
         (local.get $0)
        )
       )
      )
     )
    )
   )
   (i64.load
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#pack
   (local.get $1)
   (i32.load offset=8
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=12
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=16
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=24
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=32
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=40
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#getBytes
   (local.get $1)
  )
 )
 (func $~lib/array/Array<u64>#__set (param $0 i32) (param $1 i64)
  (if
   (i32.eqz
    (i32.load offset=12
     (local.get $0)
    )
   )
   (block
    (call $~lib/array/ensureCapacity
     (local.get $0)
     (i32.const 1)
     (i32.const 3)
    )
    (call $~lib/rt/common/OBJECT#set:rtId
     (local.get $0)
     (i32.const 1)
    )
   )
  )
  (i64.store
   (i32.load offset=4
    (local.get $0)
   )
   (local.get $1)
  )
 )
 (func $tables/modRecall.table/ModRecallTable#getSecondaryValue (param $0 i32) (param $1 i32) (result i32)
  (local $2 i64)
  (if
   (i32.eqz
    (local.get $1)
   )
   (block
    (local.set $2
     (i64.load
      (i32.load offset=8
       (local.get $0)
      )
     )
    )
    (call $~lib/array/Array<u64>#__set
     (local.tee $0
      (call $~lib/array/Array<u64>#constructor
       (i32.const 1)
      )
     )
     (local.get $2)
    )
    (return
     (call $~lib/as-chain/idxdb/SecondaryValue#constructor
      (local.get $0)
     )
    )
   )
  )
  (call $~lib/as-chain/system/assert
   (i32.const 0)
   (i32.const 18912)
  )
  (call $~lib/as-chain/idxdb/SecondaryValue#constructor
   (call $~lib/array/Array<u64>#constructor
    (i32.const 0)
   )
  )
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/modRecall.table/ModRecallTable>#store (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i64)
  (local $7 i32)
  (local $8 i64)
  (local $9 i32)
  (local $10 i32)
  (call $~lib/as-chain/system/check
   (i32.eqz
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
     (call $~lib/as-chain/mi/MultiIndex<tables/modRecall.table/ModRecallTable>#find
      (i32.load
       (local.get $0)
      )
      (local.tee $6
       (i64.load
        (local.get $1)
       )
      )
     )
    )
   )
   (i32.const 1200)
  )
  (local.set $4
   (i64.load
    (local.get $1)
   )
  )
  (local.set $8
   (i64.load
    (local.get $2)
   )
  )
  (local.set $7
   (i32.load
    (local.tee $5
     (i32.load
      (local.get $0)
     )
    )
   )
  )
  (local.set $10
   (i32.load offset=12
    (local.tee $9
     (call $tables/modRecall.table/ModRecallTable#pack
      (local.get $1)
     )
    )
   )
  )
  (drop
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/modRecall.table/ModRecallTable>#constructor
    (local.get $7)
    (call $~lib/as-chain/env/db_store_i64
     (i64.load offset=8
      (local.get $7)
     )
     (i64.load offset=16
      (local.get $7)
     )
     (local.get $8)
     (local.get $4)
     (i32.load offset=4
      (local.get $9)
     )
     (local.get $10)
    )
    (local.get $4)
    (i32.const 1)
   )
  )
  (loop $for-loop|0
   (if
    (i32.lt_s
     (local.get $3)
     (i32.load offset=12
      (i32.load offset=4
       (local.get $5)
      )
     )
    )
    (block
     (call $~lib/as-chain/idxdb/IDXDB#storeEx@virtual
      (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
       (i32.load offset=4
        (local.get $5)
       )
       (local.get $3)
      )
      (i64.load
       (local.get $1)
      )
      (call $tables/modRecall.table/ModRecallTable#getSecondaryValue
       (local.get $1)
       (local.get $3)
      )
      (i64.load
       (local.get $2)
      )
     )
     (local.set $3
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (if
   (i64.ge_u
    (local.tee $4
     (i64.load
      (local.get $1)
     )
    )
    (i64.load offset=8
     (local.get $5)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $5)
    (select
     (i64.const -2)
     (i64.add
      (local.get $4)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $4)
      (i64.const -2)
     )
    )
   )
  )
  (if
   (i64.ge_u
    (local.get $6)
    (i64.load offset=8
     (local.get $0)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $0)
    (select
     (i64.const -2)
     (i64.add
      (local.get $6)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $6)
      (i64.const -2)
     )
    )
   )
  )
 )
 (func $snipvote.contract/snipvoting#initModRecall (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  (call $~lib/as-chain/action/requireAuth
   (local.get $3)
  )
  (local.set $4
   (call $~lib/proton-tsc/modules/store/store/TableStore<tables/winners.table/WinnersTable>#first
    (i32.load offset=24
     (local.get $0)
    )
   )
  )
  (loop $while-continue|0
   (if
    (local.get $4)
    (block $while-break|0
     (if
      (if (result i32)
       (i64.eq
        (i64.load
         (i32.load
          (local.get $4)
         )
        )
        (i64.load
         (local.get $3)
        )
       )
       (i64.eq
        (call $utils/index/stringToU64
         (i32.load offset=24
          (local.get $4)
         )
        )
        (call $utils/index/stringToU64
         (i32.const 2656)
        )
       )
       (i32.const 0)
      )
      (block
       (local.set $5
        (i32.const 1)
       )
       (br $while-break|0)
      )
     )
     (local.set $4
      (call $~lib/proton-tsc/modules/store/store/TableStore<tables/winners.table/WinnersTable>#next
       (i32.load offset=24
        (local.get $0)
       )
       (local.get $4)
      )
     )
     (br $while-continue|0)
    )
   )
  )
  (call $~lib/as-chain/system/check
   (local.get $5)
   (i32.const 18496)
  )
  (call $~lib/as-chain/system/check
   (i32.ne
    (local.tee $3
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/moderators.table/ModeratorsTable>#get
      (i32.load offset=40
       (local.get $0)
      )
      (i64.load
       (local.get $1)
      )
     )
    )
    (i32.const 0)
   )
   (i32.const 18608)
  )
  (local.set $5
   (call $~lib/rt/__newArray
    (i32.const 0)
    (i32.const 2)
    (i32.const 104)
    (i32.const 18672)
   )
  )
  (local.set $4
   (call $~lib/proton-tsc/modules/store/store/TableStore<tables/modRecall.table/ModRecallTable>#first
    (i32.load offset=48
     (local.get $0)
    )
   )
  )
  (loop $while-continue|1
   (if
    (local.get $4)
    (block
     (call $~lib/array/Array<~lib/as-chain/name/Name>#push
      (local.get $5)
      (local.get $4)
     )
     (local.set $4
      (call $~lib/proton-tsc/modules/store/store/TableStore<tables/modRecall.table/ModRecallTable>#next
       (i32.load offset=48
        (local.get $0)
       )
       (local.get $4)
      )
     )
     (br $while-continue|1)
    )
   )
  )
  (local.set $4
   (i32.const 0)
  )
  (loop $for-loop|2
   (if
    (i32.lt_s
     (local.get $4)
     (i32.load offset=12
      (local.get $5)
     )
    )
    (block
     (if
      (if (result i32)
       (i64.eq
        (i64.load
         (i32.load offset=8
          (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
           (local.get $5)
           (local.get $4)
          )
         )
        )
        (i64.load
         (local.get $1)
        )
       )
       (i64.ne
        (call $utils/index/stringToU64
         (i32.load offset=40
          (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
           (local.get $5)
           (local.get $4)
          )
         )
        )
        (call $utils/index/stringToU64
         (i32.const 18704)
        )
       )
       (i32.const 0)
      )
      (call $~lib/as-chain/system/check
       (i32.const 0)
       (i32.const 18736)
      )
     )
     (local.set $4
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
     (br $for-loop|2)
    )
   )
  )
  (local.set $6
   (i64.extend_i32_u
    (call $~lib/as-chain/system/currentTimeSec)
   )
  )
  (if
   (i32.eqz
    (local.get $3)
   )
   (unreachable)
  )
  (local.set $1
   (call $tables/modRecall.table/ModRecallTable#constructor
    (local.get $6)
    (local.get $1)
    (i32.load offset=4
     (local.get $3)
    )
    (local.get $2)
   )
  )
  (call $~lib/proton-tsc/modules/store/store/TableStore<tables/modRecall.table/ModRecallTable>#store
   (i32.load offset=48
    (local.get $0)
   )
   (local.get $1)
   (i32.load
    (local.get $0)
   )
  )
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/modrecallvoter.table/ModRecallVotersTable>#constructor (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32) (result i32)
  (local $4 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $4
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 105)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (i32.const 0)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (i64.const 0)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $4)
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (local.get $1)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (local.get $2)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (local.get $3)
  )
  (local.get $4)
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/modrecallvoter.table/ModRecallVotersTable>#find (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/modrecallvoter.table/ModRecallVotersTable>#find (result i32)
   (if
    (i32.ge_s
     (local.tee $2
      (call $~lib/as-chain/env/db_find_i64
       (i64.load
        (local.tee $0
         (i32.load
          (local.get $0)
         )
        )
       )
       (i64.load offset=8
        (local.get $0)
       )
       (i64.load offset=16
        (local.get $0)
       )
       (local.get $1)
      )
     )
     (i32.const 0)
    )
    (br $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/modrecallvoter.table/ModRecallVotersTable>#find
     (call $~lib/as-chain/dbi64/PrimaryIterator<tables/modrecallvoter.table/ModRecallVotersTable>#constructor
      (local.get $0)
      (local.get $2)
      (local.get $1)
      (i32.const 1)
     )
    )
   )
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/modrecallvoter.table/ModRecallVotersTable>#constructor
    (local.get $0)
    (local.get $2)
    (i64.const 0)
    (i32.const 0)
   )
  )
 )
 (func $tables/modrecallvoter.table/ModRecallVotersTable#unpack (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/as-chain/serializer/Decoder#constructor
    (local.get $1)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $0)
   (local.get $2)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $0)
   (local.get $2)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (call $~lib/rt/common/OBJECT#set:rtSize
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:registrationStartTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (i32.load offset=4
   (local.get $1)
  )
 )
 (func $tables/modrecallvoter.table/ModRecallVotersTable#getPrimaryValue (param $0 i32) (result i64)
  (i64.add
   (i64.load
    (i32.load
     (local.get $0)
    )
   )
   (i64.load offset=8
    (local.get $0)
   )
  )
 )
 (func $tables/modrecallvoter.table/ModRecallVotersTable#pack (param $0 i32) (result i32)
  (local $1 i32)
  (call $~lib/as-chain/serializer/Encoder#pack
   (local.tee $1
    (call $~lib/as-chain/serializer/Encoder#constructor
     (block (result i32)
      (drop
       (i32.load
        (local.get $0)
       )
      )
      (drop
       (i32.load offset=4
        (local.get $0)
       )
      )
      (i32.add
       (call $~lib/as-chain/utils/Utils.calcPackedStringLength
        (i32.load offset=16
         (local.get $0)
        )
       )
       (i32.const 32)
      )
     )
    )
   )
   (i32.load
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#pack
   (local.get $1)
   (i32.load offset=4
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=8
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=16
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=24
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#getBytes
   (local.get $1)
  )
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/modRecall.table/ModRecallTable>#update (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  (local $7 i64)
  (local $8 i32)
  (call $~lib/as-chain/system/check
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
    (local.get $1)
   )
   (i32.const 14288)
  )
  (call $~lib/as-chain/system/check
   (i64.eq
    (local.tee $6
     (i64.load
      (local.get $2)
     )
    )
    (block $__inlined_func$~lib/as-chain/dbi64/PrimaryIterator<tables/modRecall.table/ModRecallTable>#get:primary (result i64)
     (call $~lib/as-chain/system/check
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
       (local.get $1)
      )
      (i32.const 14352)
     )
     (if
      (i32.load8_u offset=8
       (local.get $1)
      )
      (br $__inlined_func$~lib/as-chain/dbi64/PrimaryIterator<tables/modRecall.table/ModRecallTable>#get:primary
       (i64.load offset=16
        (local.get $1)
       )
      )
     )
     (if
      (i32.eqz
       (local.tee $4
        (call $~lib/as-chain/dbi64/PrimaryIterator<tables/modRecall.table/ModRecallTable>#getValue
         (local.get $1)
        )
       )
      )
      (unreachable)
     )
     (call $tables/elections.table/ElectionsTable#set:endTime
      (local.get $1)
      (i64.load
       (local.get $4)
      )
     )
     (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
      (local.get $1)
      (i32.const 1)
     )
     (i64.load offset=16
      (local.get $1)
     )
    )
   )
   (i32.const 14432)
  )
  (drop
   (i32.load
    (local.get $0)
   )
  )
  (local.set $7
   (i64.load
    (local.get $3)
   )
  )
  (local.set $8
   (i32.load offset=12
    (local.tee $4
     (call $tables/modRecall.table/ModRecallTable#pack
      (local.get $2)
     )
    )
   )
  )
  (call $~lib/as-chain/env/db_update_i64
   (i32.load offset=4
    (local.get $1)
   )
   (local.get $7)
   (i32.load offset=4
    (local.get $4)
   )
   (local.get $8)
  )
  (loop $for-loop|0
   (if
    (i32.lt_s
     (local.get $5)
     (i32.load offset=12
      (i32.load offset=4
       (local.get $0)
      )
     )
    )
    (block
     (local.set $1
      (call $~lib/as-chain/idxdb/IDXDB#findPrimaryEx@virtual
       (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
        (i32.load offset=4
         (local.get $0)
        )
        (local.get $5)
       )
       (local.get $6)
      )
     )
     (local.set $4
      (call $tables/modRecall.table/ModRecallTable#getSecondaryValue
       (local.get $2)
       (local.get $5)
      )
     )
     (if
      (i32.eqz
       (if (result i32)
        (i32.eq
         (i32.load
          (i32.load offset=4
           (local.get $1)
          )
         )
         (i32.load
          (local.get $4)
         )
        )
        (i32.eq
         (i32.load offset=4
          (i32.load offset=4
           (local.get $1)
          )
         )
         (i32.load offset=4
          (local.get $4)
         )
        )
        (i32.const 0)
       )
      )
      (call $~lib/as-chain/idxdb/IDXDB#updateEx@virtual
       (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
        (i32.load offset=4
         (local.get $0)
        )
        (local.get $5)
       )
       (i32.load
        (local.get $1)
       )
       (call $tables/modRecall.table/ModRecallTable#getSecondaryValue
        (local.get $2)
        (local.get $5)
       )
       (i64.load
        (local.get $3)
       )
      )
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (if
   (i64.ge_u
    (local.get $6)
    (i64.load offset=8
     (local.get $0)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $0)
    (select
     (i64.const -2)
     (i64.add
      (local.get $6)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $6)
      (i64.const -2)
     )
    )
   )
  )
 )
 (func $snipvote.contract/snipvoting#modRecallVote (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i64)
  (local $11 i64)
  (local $12 i32)
  (call $~lib/as-chain/action/requireAuth
   (local.get $1)
  )
  (local.set $9
   (call $~lib/as-chain/system/currentTimeSec)
  )
  (call $~lib/as-chain/system/check
   (i32.ne
    (local.tee $6
     (block $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/modRecall.table/ModRecallTable>#getByKey (result i32)
      (drop
       (br_if $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/modRecall.table/ModRecallTable>#getByKey
        (i32.const 0)
        (i32.eqz
         (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
          (local.tee $4
           (call $~lib/as-chain/mi/MultiIndex<tables/modRecall.table/ModRecallTable>#find
            (local.tee $5
             (i32.load
              (i32.load offset=48
               (local.get $0)
              )
             )
            )
            (local.get $2)
           )
          )
         )
        )
       )
      )
      (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/modRecall.table/ModRecallTable>#get (result i32)
       (local.set $5
        (i32.load
         (local.get $5)
        )
       )
       (drop
        (br_if $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/modRecall.table/ModRecallTable>#get
         (i32.const 0)
         (i32.eqz
          (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
           (local.get $4)
          )
         )
        )
       )
       (call $~lib/as-chain/dbi64/DBI64<tables/modRecall.table/ModRecallTable>#getEx
        (local.get $5)
        (i32.load offset=4
         (local.get $4)
        )
       )
      )
     )
    )
    (i32.const 0)
   )
   (i32.const 18960)
  )
  (local.set $4
   (local.get $6)
  )
  (if
   (i32.eqz
    (local.get $6)
   )
   (unreachable)
  )
  (call $~lib/as-chain/system/check
   (i64.eq
    (call $utils/index/stringToU64
     (i32.load offset=40
      (local.get $4)
     )
    )
    (call $utils/index/stringToU64
     (i32.const 2848)
    )
   )
   (i32.const 19072)
  )
  (local.set $5
   (call $~lib/proton-tsc/modules/store/store/TableStore<tables/winners.table/WinnersTable>#first
    (i32.load offset=24
     (local.get $0)
    )
   )
  )
  (loop $while-continue|0
   (if
    (local.get $5)
    (block $while-break|0
     (if
      (if (result i32)
       (i64.eq
        (i64.load
         (i32.load
          (local.get $5)
         )
        )
        (i64.load
         (local.get $1)
        )
       )
       (i64.eq
        (call $utils/index/stringToU64
         (i32.load offset=24
          (local.get $5)
         )
        )
        (call $utils/index/stringToU64
         (i32.const 2656)
        )
       )
       (i32.const 0)
      )
      (block
       (local.set $8
        (i32.const 1)
       )
       (br $while-break|0)
      )
     )
     (local.set $5
      (call $~lib/proton-tsc/modules/store/store/TableStore<tables/winners.table/WinnersTable>#next
       (i32.load offset=24
        (local.get $0)
       )
       (local.get $5)
      )
     )
     (br $while-continue|0)
    )
   )
  )
  (call $~lib/as-chain/system/check
   (local.get $8)
   (i32.const 17936)
  )
  (local.set $5
   (i32.const 0)
  )
  (if
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
    (local.tee $7
     (call $~lib/as-chain/mi/MultiIndex<tables/modrecallvoter.table/ModRecallVotersTable>#find
      (local.tee $8
       (i32.load
        (i32.load offset=52
         (local.get $0)
        )
       )
      )
      (i64.add
       (local.get $2)
       (i64.load
        (local.get $1)
       )
      )
     )
    )
   )
   (block
    (drop
     (i32.load
      (local.get $8)
     )
    )
    (if
     (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
      (local.get $7)
     )
     (if
      (local.tee $7
       (call $~lib/as-chain/env/db_get_i64
        (local.tee $8
         (i32.load offset=4
          (local.get $7)
         )
        )
        (i32.const 0)
        (i32.const 0)
       )
      )
      (block
       (drop
        (call $~lib/as-chain/env/db_get_i64
         (local.get $8)
         (i32.load offset=4
          (local.tee $8
           (call $~lib/array/Array<u8>#constructor
            (local.get $7)
           )
          )
         )
         (local.get $7)
        )
       )
       (global.set $~argumentsLength
        (i32.const 0)
       )
       (drop
        (call $tables/modrecallvoter.table/ModRecallVotersTable#unpack
         (local.tee $5
          (call $tables/modrecallvoter.table/ModRecallVotersTable#constructor@varargs)
         )
         (local.get $8)
        )
       )
      )
     )
    )
   )
  )
  (call $~lib/as-chain/system/check
   (i32.eqz
    (local.get $5)
   )
   (i32.const 19168)
  )
  (call $~lib/as-chain/system/check
   (if (result i32)
    (i64.eq
     (call $utils/index/stringToU64
      (local.get $3)
     )
     (call $utils/index/stringToU64
      (i32.const 19264)
     )
    )
    (i32.const 1)
    (i64.eq
     (call $utils/index/stringToU64
      (local.get $3)
     )
     (call $utils/index/stringToU64
      (i32.const 19296)
     )
    )
   )
   (i32.const 19328)
  )
  (if
   (i64.eq
    (call $utils/index/stringToU64
     (local.get $3)
    )
    (call $utils/index/stringToU64
     (i32.const 19264)
    )
   )
   (block
    (if
     (i32.eqz
      (local.tee $5
       (local.get $4)
      )
     )
     (unreachable)
    )
    (if
     (i32.eqz
      (local.get $6)
     )
     (unreachable)
    )
    (call $tables/elections.table/ElectionsTable#set:registrationStartTime
     (local.get $5)
     (i64.add
      (i64.load offset=24
       (local.get $5)
      )
      (i64.const 1)
     )
    )
   )
   (block
    (if
     (i32.eqz
      (local.tee $5
       (local.get $4)
      )
     )
     (unreachable)
    )
    (if
     (i32.eqz
      (local.get $6)
     )
     (unreachable)
    )
    (call $tables/elections.table/ElectionsTable#set:registrationEndTime
     (local.get $5)
     (i64.add
      (i64.load offset=32
       (local.get $5)
      )
      (i64.const 1)
     )
    )
   )
  )
  (if
   (i32.eqz
    (local.get $6)
   )
   (unreachable)
  )
  (local.set $1
   (call $tables/modrecallvoter.table/ModRecallVotersTable#constructor
    (local.get $1)
    (i32.load offset=8
     (local.get $5)
    )
    (local.get $2)
    (local.get $3)
    (i64.extend_i32_u
     (local.get $9)
    )
   )
  )
  (local.set $3
   (i32.load
    (local.get $0)
   )
  )
  (local.set $4
   (i32.load offset=52
    (local.get $0)
   )
  )
  (local.set $2
   (call $tables/modrecallvoter.table/ModRecallVotersTable#getPrimaryValue
    (local.get $1)
   )
  )
  (call $~lib/as-chain/system/check
   (i32.eqz
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
     (call $~lib/as-chain/mi/MultiIndex<tables/modrecallvoter.table/ModRecallVotersTable>#find
      (i32.load
       (local.get $4)
      )
      (local.get $2)
     )
    )
   )
   (i32.const 1200)
  )
  (local.set $5
   (i32.const 0)
  )
  (local.set $9
   (i32.load
    (local.tee $7
     (i32.load
      (local.get $4)
     )
    )
   )
  )
  (local.set $10
   (call $tables/modrecallvoter.table/ModRecallVotersTable#getPrimaryValue
    (local.get $1)
   )
  )
  (local.set $11
   (i64.load
    (local.get $3)
   )
  )
  (local.set $12
   (i32.load offset=12
    (local.tee $8
     (call $tables/modrecallvoter.table/ModRecallVotersTable#pack
      (local.get $1)
     )
    )
   )
  )
  (drop
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/modrecallvoter.table/ModRecallVotersTable>#constructor
    (local.get $9)
    (call $~lib/as-chain/env/db_store_i64
     (i64.load offset=8
      (local.get $9)
     )
     (i64.load offset=16
      (local.get $9)
     )
     (local.get $11)
     (local.get $10)
     (i32.load offset=4
      (local.get $8)
     )
     (local.get $12)
    )
    (local.get $10)
    (i32.const 1)
   )
  )
  (loop $for-loop|0
   (if
    (i32.lt_s
     (local.get $5)
     (i32.load offset=12
      (i32.load offset=4
       (local.get $7)
      )
     )
    )
    (block
     (call $~lib/as-chain/idxdb/IDXDB#storeEx@virtual
      (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
       (i32.load offset=4
        (local.get $7)
       )
       (local.get $5)
      )
      (call $tables/modrecallvoter.table/ModRecallVotersTable#getPrimaryValue
       (local.get $1)
      )
      (call $tables/elections.table/ElectionsTable#getSecondaryValue)
      (i64.load
       (local.get $3)
      )
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (if
   (i64.ge_u
    (local.tee $10
     (call $tables/modrecallvoter.table/ModRecallVotersTable#getPrimaryValue
      (local.get $1)
     )
    )
    (i64.load offset=8
     (local.get $7)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $7)
    (select
     (i64.const -2)
     (i64.add
      (local.get $10)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $10)
      (i64.const -2)
     )
    )
   )
  )
  (if
   (i64.ge_u
    (local.get $2)
    (i64.load offset=8
     (local.get $4)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $4)
    (select
     (i64.const -2)
     (i64.add
      (local.get $2)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $2)
      (i64.const -2)
     )
    )
   )
  )
  (if
   (i32.eqz
    (local.get $6)
   )
   (unreachable)
  )
  (if
   (i64.ge_u
    (i64.load offset=24
     (local.get $6)
    )
    (i64.const 4)
   )
   (block
    (if
     (i32.eqz
      (local.get $6)
     )
     (unreachable)
    )
    (call $snipvote.contract/snipvoting#set:moderatorsTable
     (local.get $6)
     (i32.const 19408)
    )
    (local.set $1
     (i32.load offset=40
      (local.get $0)
     )
    )
    (if
     (i32.eqz
      (local.get $6)
     )
     (unreachable)
    )
    (if
     (local.tee $1
      (call $~lib/proton-tsc/modules/store/store/TableStore<tables/moderators.table/ModeratorsTable>#get
       (local.get $1)
       (i64.load
        (i32.load offset=8
         (local.get $6)
        )
       )
      )
     )
     (block
      (local.set $3
       (i32.load offset=40
        (local.get $0)
       )
      )
      (local.set $2
       (call $tables/moderatorCand.table/ModeratorCandTable#getPrimaryValue
        (local.get $1)
       )
      )
      (call $~lib/as-chain/system/check
       (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
        (call $~lib/as-chain/mi/MultiIndex<tables/moderators.table/ModeratorsTable>#find
         (i32.load
          (local.get $3)
         )
         (local.get $2)
        )
       )
       (i32.const 1648)
      )
      (local.set $1
       (i32.const 0)
      )
      (call $~lib/as-chain/system/check
       (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
        (local.tee $5
         (call $~lib/as-chain/mi/MultiIndex<tables/moderators.table/ModeratorsTable>#find
          (local.tee $4
           (i32.load
            (local.get $3)
           )
          )
          (local.get $2)
         )
        )
       )
       (i32.const 13456)
      )
      (call $~lib/as-chain/dbi64/DBI64<tables/elections.table/ElectionsTable>#remove
       (i32.load
        (local.get $4)
       )
       (local.get $5)
      )
      (loop $for-loop|00
       (if
        (i32.lt_s
         (local.get $1)
         (i32.load offset=12
          (i32.load offset=4
           (local.get $4)
          )
         )
        )
        (block
         (if
          (call $~lib/as-chain/idxdb/SecondaryIterator#isOk
           (i32.load
            (local.tee $5
             (call $~lib/as-chain/idxdb/IDXDB#findPrimaryEx@virtual
              (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
               (i32.load offset=4
                (local.get $4)
               )
               (local.get $1)
              )
              (local.get $2)
             )
            )
           )
          )
          (call $~lib/as-chain/idxdb/IDXDB#remove@virtual
           (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
            (i32.load offset=4
             (local.get $4)
            )
            (local.get $1)
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (local.set $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (br $for-loop|00)
        )
       )
      )
      (if
       (i64.eq
        (local.get $2)
        (i64.sub
         (i64.load offset=8
          (local.get $3)
         )
         (i64.const 1)
        )
       )
       (call $tables/elections.table/ElectionsTable#set:startTime
        (local.get $3)
        (i64.const -1)
       )
      )
     )
    )
   )
   (block
    (if
     (i32.eqz
      (local.get $6)
     )
     (unreachable)
    )
    (if
     (i64.ge_u
      (i64.load offset=32
       (local.get $6)
      )
      (i64.const 4)
     )
     (block
      (if
       (i32.eqz
        (local.get $6)
       )
       (unreachable)
      )
      (call $snipvote.contract/snipvoting#set:moderatorsTable
       (local.get $6)
       (i32.const 18704)
      )
     )
    )
   )
  )
  (local.set $1
   (i32.load offset=48
    (local.get $0)
   )
  )
  (if
   (i32.eqz
    (local.get $6)
   )
   (unreachable)
  )
  (local.set $0
   (i32.load
    (local.get $0)
   )
  )
  (local.set $3
   (call $~lib/as-chain/mi/MultiIndex<tables/modRecall.table/ModRecallTable>#requireFind
    (i32.load
     (local.get $1)
    )
    (i64.load
     (local.get $6)
    )
    (i32.const 1424)
   )
  )
  (call $~lib/as-chain/mi/MultiIndex<tables/modRecall.table/ModRecallTable>#update
   (i32.load
    (local.get $1)
   )
   (local.get $3)
   (local.get $6)
   (local.get $0)
  )
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/propConfig.table/PropConfigTable>#constructor (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32) (result i32)
  (local $4 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $4
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 106)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (i32.const 0)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (i64.const 0)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $4)
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (local.get $1)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (local.get $2)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (local.get $3)
  )
  (local.get $4)
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/propConfig.table/PropConfigTable>#find (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/propConfig.table/PropConfigTable>#find (result i32)
   (if
    (i32.ge_s
     (local.tee $2
      (call $~lib/as-chain/env/db_find_i64
       (i64.load
        (local.tee $0
         (i32.load
          (local.get $0)
         )
        )
       )
       (i64.load offset=8
        (local.get $0)
       )
       (i64.load offset=16
        (local.get $0)
       )
       (local.get $1)
      )
     )
     (i32.const 0)
    )
    (br $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/propConfig.table/PropConfigTable>#find
     (call $~lib/as-chain/dbi64/PrimaryIterator<tables/propConfig.table/PropConfigTable>#constructor
      (local.get $0)
      (local.get $2)
      (local.get $1)
      (i32.const 1)
     )
    )
   )
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/propConfig.table/PropConfigTable>#constructor
    (local.get $0)
    (local.get $2)
    (i64.const 0)
    (i32.const 0)
   )
  )
 )
 (func $tables/propConfig.table/PropConfigTable#unpack (param $0 i32) (param $1 i32) (result i32)
  (call $tables/propConfig.table/PropConfigTable#set:id
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u8>
    (local.tee $1
     (call $~lib/as-chain/serializer/Decoder#constructor
      (local.get $1)
     )
    )
   )
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (i32.load offset=4
   (local.get $1)
  )
 )
 (func $~lib/as-chain/dbi64/DBI64<tables/propConfig.table/PropConfigTable>#getEx (param $0 i32) (param $1 i32) (result i32)
  (if
   (i32.eqz
    (local.tee $0
     (call $~lib/as-chain/env/db_get_i64
      (local.get $1)
      (i32.const 0)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (drop
   (call $~lib/as-chain/env/db_get_i64
    (local.get $1)
    (i32.load offset=4
     (local.tee $1
      (call $~lib/array/Array<u8>#constructor
       (local.get $0)
      )
     )
    )
    (local.get $0)
   )
  )
  (drop
   (call $tables/propConfig.table/PropConfigTable#unpack
    (local.tee $0
     (call $tables/propConfig.table/PropConfigTable#constructor
      (i64.const 10000000)
      (i64.const 10000000)
     )
    )
    (local.get $1)
   )
  )
  (local.get $0)
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/propConfig.table/PropConfigTable>#get (param $0 i32) (result i32)
  (local $1 i32)
  (block $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/propConfig.table/PropConfigTable>#getByKey (result i32)
   (drop
    (br_if $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/propConfig.table/PropConfigTable>#getByKey
     (i32.const 0)
     (i32.eqz
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
       (local.tee $0
        (call $~lib/as-chain/mi/MultiIndex<tables/propConfig.table/PropConfigTable>#find
         (local.tee $1
          (i32.load
           (local.get $0)
          )
         )
         (i64.const 0)
        )
       )
      )
     )
    )
   )
   (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/propConfig.table/PropConfigTable>#get (result i32)
    (local.set $1
     (i32.load
      (local.get $1)
     )
    )
    (drop
     (br_if $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/propConfig.table/PropConfigTable>#get
      (i32.const 0)
      (i32.eqz
       (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
        (local.get $0)
       )
      )
     )
    )
    (call $~lib/as-chain/dbi64/DBI64<tables/propConfig.table/PropConfigTable>#getEx
     (local.get $1)
     (i32.load offset=4
      (local.get $0)
     )
    )
   )
  )
 )
 (func $tables/propConfig.table/PropConfigTable#getPrimaryValue (param $0 i32) (result i64)
  (i64.extend_i32_u
   (i32.load8_u
    (local.get $0)
   )
  )
 )
 (func $tables/propConfig.table/PropConfigTable#pack (param $0 i32) (result i32)
  (local $1 i32)
  (call $~lib/as-chain/serializer/Encoder#packNumber<u8>
   (local.tee $1
    (call $~lib/as-chain/serializer/Encoder#constructor
     (i32.const 17)
    )
   )
   (i32.load8_u
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=8
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=16
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#getBytes
   (local.get $1)
  )
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/propConfig.table/PropConfigTable>#update (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  (call $~lib/as-chain/system/check
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
    (local.get $1)
   )
   (i32.const 14288)
  )
  (call $~lib/as-chain/system/check
   (i64.eq
    (local.tee $5
     (call $tables/propConfig.table/PropConfigTable#getPrimaryValue
      (local.get $2)
     )
    )
    (block $__inlined_func$~lib/as-chain/dbi64/PrimaryIterator<tables/propConfig.table/PropConfigTable>#get:primary (result i64)
     (call $~lib/as-chain/system/check
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
       (local.tee $4
        (local.get $1)
       )
      )
      (i32.const 14352)
     )
     (if
      (i32.load8_u offset=8
       (local.get $4)
      )
      (br $__inlined_func$~lib/as-chain/dbi64/PrimaryIterator<tables/propConfig.table/PropConfigTable>#get:primary
       (i64.load offset=16
        (local.get $4)
       )
      )
     )
     (if
      (i32.eqz
       (local.tee $7
        (block $__inlined_func$~lib/as-chain/dbi64/PrimaryIterator<tables/propConfig.table/PropConfigTable>#getValue (result i32)
         (drop
          (br_if $__inlined_func$~lib/as-chain/dbi64/PrimaryIterator<tables/propConfig.table/PropConfigTable>#getValue
           (i32.const 0)
           (i32.eqz
            (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
             (local.get $4)
            )
           )
          )
         )
         (call $~lib/as-chain/dbi64/DBI64<tables/propConfig.table/PropConfigTable>#getEx
          (i32.load
           (local.get $4)
          )
          (i32.load offset=4
           (local.get $4)
          )
         )
        )
       )
      )
      (unreachable)
     )
     (call $tables/elections.table/ElectionsTable#set:endTime
      (local.get $4)
      (call $tables/propConfig.table/PropConfigTable#getPrimaryValue
       (local.get $7)
      )
     )
     (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
      (local.get $4)
      (i32.const 1)
     )
     (i64.load offset=16
      (local.get $4)
     )
    )
   )
   (i32.const 14432)
  )
  (drop
   (i32.load
    (local.get $0)
   )
  )
  (local.set $8
   (i64.load
    (local.get $3)
   )
  )
  (local.set $4
   (i32.load offset=12
    (local.tee $2
     (call $tables/propConfig.table/PropConfigTable#pack
      (local.get $2)
     )
    )
   )
  )
  (call $~lib/as-chain/env/db_update_i64
   (i32.load offset=4
    (local.get $1)
   )
   (local.get $8)
   (i32.load offset=4
    (local.get $2)
   )
   (local.get $4)
  )
  (loop $for-loop|0
   (if
    (i32.lt_s
     (local.get $6)
     (i32.load offset=12
      (i32.load offset=4
       (local.get $0)
      )
     )
    )
    (block
     (local.set $1
      (call $~lib/as-chain/idxdb/IDXDB#findPrimaryEx@virtual
       (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
        (i32.load offset=4
         (local.get $0)
        )
        (local.get $6)
       )
       (local.get $5)
      )
     )
     (local.set $2
      (call $tables/elections.table/ElectionsTable#getSecondaryValue)
     )
     (if
      (i32.eqz
       (if (result i32)
        (i32.eq
         (i32.load
          (i32.load offset=4
           (local.get $1)
          )
         )
         (i32.load
          (local.get $2)
         )
        )
        (i32.eq
         (i32.load offset=4
          (i32.load offset=4
           (local.get $1)
          )
         )
         (i32.load offset=4
          (local.get $2)
         )
        )
        (i32.const 0)
       )
      )
      (call $~lib/as-chain/idxdb/IDXDB#updateEx@virtual
       (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
        (i32.load offset=4
         (local.get $0)
        )
        (local.get $6)
       )
       (i32.load
        (local.get $1)
       )
       (call $tables/elections.table/ElectionsTable#getSecondaryValue)
       (i64.load
        (local.get $3)
       )
      )
     )
     (local.set $6
      (i32.add
       (local.get $6)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (if
   (i64.ge_u
    (local.get $5)
    (i64.load offset=8
     (local.get $0)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $0)
    (select
     (i64.const -2)
     (i64.add
      (local.get $5)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $5)
      (i64.const -2)
     )
    )
   )
  )
 )
 (func $snipvote.contract/snipvoting#updateConfig (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i64)
  (local $10 i32)
  (call $~lib/as-chain/system/check
   (call $~lib/array/Array<~lib/string/String>#includes
    (i32.const 2464)
    (local.get $1)
   )
   (i32.const 15344)
  )
  (if
   (local.tee $1
    (call $~lib/proton-tsc/modules/store/store/TableStore<tables/propConfig.table/PropConfigTable>#get
     (i32.load offset=64
      (local.get $0)
     )
    )
   )
   (block
    (call $tables/elections.table/ElectionsTable#set:startTime
     (local.get $1)
     (local.get $2)
    )
    (call $tables/elections.table/ElectionsTable#set:endTime
     (local.get $1)
     (local.get $3)
    )
    (local.set $5
     (i32.load
      (local.get $0)
     )
    )
    (local.set $0
     (i32.load offset=64
      (local.get $0)
     )
    )
    (local.set $2
     (call $tables/propConfig.table/PropConfigTable#getPrimaryValue
      (local.get $1)
     )
    )
    (call $~lib/as-chain/system/check
     (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
      (local.tee $4
       (call $~lib/as-chain/mi/MultiIndex<tables/propConfig.table/PropConfigTable>#find
        (i32.load
         (local.get $0)
        )
        (local.get $2)
       )
      )
     )
     (i32.const 1424)
    )
    (call $~lib/as-chain/mi/MultiIndex<tables/propConfig.table/PropConfigTable>#update
     (i32.load
      (local.get $0)
     )
     (local.get $4)
     (local.get $1)
     (local.get $5)
    )
   )
   (block
    (local.set $1
     (call $tables/propConfig.table/PropConfigTable#constructor
      (local.get $2)
      (local.get $3)
     )
    )
    (local.set $5
     (i32.load
      (local.get $0)
     )
    )
    (local.set $4
     (i32.load offset=64
      (local.get $0)
     )
    )
    (local.set $2
     (call $tables/propConfig.table/PropConfigTable#getPrimaryValue
      (local.get $1)
     )
    )
    (call $~lib/as-chain/system/check
     (i32.eqz
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
       (call $~lib/as-chain/mi/MultiIndex<tables/propConfig.table/PropConfigTable>#find
        (i32.load
         (local.get $4)
        )
        (local.get $2)
       )
      )
     )
     (i32.const 1200)
    )
    (local.set $8
     (i32.load
      (local.tee $7
       (i32.load
        (local.get $4)
       )
      )
     )
    )
    (local.set $3
     (call $tables/propConfig.table/PropConfigTable#getPrimaryValue
      (local.tee $0
       (local.get $1)
      )
     )
    )
    (local.set $9
     (i64.load
      (local.get $5)
     )
    )
    (local.set $10
     (i32.load offset=12
      (local.tee $1
       (call $tables/propConfig.table/PropConfigTable#pack
        (local.get $0)
       )
      )
     )
    )
    (drop
     (call $~lib/as-chain/dbi64/PrimaryIterator<tables/propConfig.table/PropConfigTable>#constructor
      (local.get $8)
      (call $~lib/as-chain/env/db_store_i64
       (i64.load offset=8
        (local.get $8)
       )
       (i64.load offset=16
        (local.get $8)
       )
       (local.get $9)
       (local.get $3)
       (i32.load offset=4
        (local.get $1)
       )
       (local.get $10)
      )
      (local.get $3)
      (i32.const 1)
     )
    )
    (loop $for-loop|0
     (if
      (i32.lt_s
       (local.get $6)
       (i32.load offset=12
        (i32.load offset=4
         (local.get $7)
        )
       )
      )
      (block
       (call $~lib/as-chain/idxdb/IDXDB#storeEx@virtual
        (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
         (i32.load offset=4
          (local.get $7)
         )
         (local.get $6)
        )
        (call $tables/propConfig.table/PropConfigTable#getPrimaryValue
         (local.get $0)
        )
        (call $tables/elections.table/ElectionsTable#getSecondaryValue)
        (i64.load
         (local.get $5)
        )
       )
       (local.set $6
        (i32.add
         (local.get $6)
         (i32.const 1)
        )
       )
       (br $for-loop|0)
      )
     )
    )
    (if
     (i64.ge_u
      (local.tee $3
       (call $tables/propConfig.table/PropConfigTable#getPrimaryValue
        (local.get $0)
       )
      )
      (i64.load offset=8
       (local.get $7)
      )
     )
     (call $tables/elections.table/ElectionsTable#set:startTime
      (local.get $7)
      (select
       (i64.const -2)
       (i64.add
        (local.get $3)
        (i64.const 1)
       )
       (i64.ge_u
        (local.get $3)
        (i64.const -2)
       )
      )
     )
    )
    (if
     (i64.ge_u
      (local.get $2)
      (i64.load offset=8
       (local.get $4)
      )
     )
     (call $tables/elections.table/ElectionsTable#set:startTime
      (local.get $4)
      (select
       (i64.const -2)
       (i64.add
        (local.get $2)
        (i64.const 1)
       )
       (i64.ge_u
        (local.get $2)
        (i64.const -2)
       )
      )
     )
    )
   )
  )
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/proposals.table/ProposalsTable>#constructor (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32) (result i32)
  (local $4 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $4
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 107)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (i32.const 0)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (i64.const 0)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $4)
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (local.get $1)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (local.get $2)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (local.get $3)
  )
  (local.get $4)
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/proposals.table/ProposalsTable>#find (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/proposals.table/ProposalsTable>#find (result i32)
   (if
    (i32.ge_s
     (local.tee $2
      (call $~lib/as-chain/env/db_find_i64
       (i64.load
        (local.tee $0
         (i32.load
          (local.get $0)
         )
        )
       )
       (i64.load offset=8
        (local.get $0)
       )
       (i64.load offset=16
        (local.get $0)
       )
       (local.get $1)
      )
     )
     (i32.const 0)
    )
    (br $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/proposals.table/ProposalsTable>#find
     (call $~lib/as-chain/dbi64/PrimaryIterator<tables/proposals.table/ProposalsTable>#constructor
      (local.get $0)
      (local.get $2)
      (local.get $1)
      (i32.const 1)
     )
    )
   )
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/proposals.table/ProposalsTable>#constructor
    (local.get $0)
    (local.get $2)
    (i64.const 0)
    (i32.const 0)
   )
  )
 )
 (func $tables/proposals.table/ProposalsTable#pack (param $0 i32) (result i32)
  (local $1 i32)
  (drop
   (i32.load offset=8
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.tee $1
    (call $~lib/as-chain/serializer/Encoder#constructor
     (i32.add
      (i32.add
       (i32.add
        (i32.add
         (i32.add
          (call $~lib/as-chain/utils/Utils.calcPackedStringLength
           (i32.load offset=12
            (local.get $0)
           )
          )
          (call $~lib/as-chain/utils/Utils.calcPackedStringLength
           (i32.load offset=16
            (local.get $0)
           )
          )
         )
         (call $~lib/as-chain/utils/Utils.calcPackedStringLength
          (i32.load offset=20
           (local.get $0)
          )
         )
        )
        (call $~lib/as-chain/utils/Utils.calcPackedStringLength
         (i32.load offset=24
          (local.get $0)
         )
        )
       )
       (i32.const 40)
      )
      (call $~lib/as-chain/utils/Utils.calcPackedStringLength
       (i32.load offset=56
        (local.get $0)
       )
      )
     )
    )
   )
   (i64.load
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#pack
   (local.get $1)
   (i32.load offset=8
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=12
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=16
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=20
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=24
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=32
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=40
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=48
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=56
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#getBytes
   (local.get $1)
  )
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/proposals.table/ProposalsTable>#store (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  (local $7 i32)
  (local $8 i64)
  (local $9 i32)
  (local $10 i32)
  (call $~lib/as-chain/system/check
   (i32.eqz
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
     (call $~lib/as-chain/mi/MultiIndex<tables/proposals.table/ProposalsTable>#find
      (i32.load
       (local.get $0)
      )
      (local.tee $6
       (i64.load
        (local.get $1)
       )
      )
     )
    )
   )
   (i32.const 1200)
  )
  (local.set $3
   (i64.load
    (local.get $1)
   )
  )
  (local.set $8
   (i64.load
    (local.get $2)
   )
  )
  (local.set $7
   (i32.load
    (local.tee $5
     (i32.load
      (local.get $0)
     )
    )
   )
  )
  (local.set $10
   (i32.load offset=12
    (local.tee $9
     (call $tables/proposals.table/ProposalsTable#pack
      (local.get $1)
     )
    )
   )
  )
  (drop
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/proposals.table/ProposalsTable>#constructor
    (local.get $7)
    (call $~lib/as-chain/env/db_store_i64
     (i64.load offset=8
      (local.get $7)
     )
     (i64.load offset=16
      (local.get $7)
     )
     (local.get $8)
     (local.get $3)
     (i32.load offset=4
      (local.get $9)
     )
     (local.get $10)
    )
    (local.get $3)
    (i32.const 1)
   )
  )
  (loop $for-loop|0
   (if
    (i32.lt_s
     (local.get $4)
     (i32.load offset=12
      (i32.load offset=4
       (local.get $5)
      )
     )
    )
    (block
     (call $~lib/as-chain/idxdb/IDXDB#storeEx@virtual
      (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
       (i32.load offset=4
        (local.get $5)
       )
       (local.get $4)
      )
      (i64.load
       (local.get $1)
      )
      (call $tables/elections.table/ElectionsTable#getSecondaryValue)
      (i64.load
       (local.get $2)
      )
     )
     (local.set $4
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (if
   (i64.ge_u
    (local.tee $3
     (i64.load
      (local.get $1)
     )
    )
    (i64.load offset=8
     (local.get $5)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $5)
    (select
     (i64.const -2)
     (i64.add
      (local.get $3)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $3)
      (i64.const -2)
     )
    )
   )
  )
  (if
   (i64.ge_u
    (local.get $6)
    (i64.load offset=8
     (local.get $0)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $0)
    (select
     (i64.const -2)
     (i64.add
      (local.get $6)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $6)
      (i64.const -2)
     )
    )
   )
  )
 )
 (func $snipvote.contract/snipvoting#submitProposal (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i64)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i64)
  (call $~lib/as-chain/action/requireAuth
   (local.get $1)
  )
  (local.set $7
   (call $~lib/proton-tsc/modules/store/store/TableStore<tables/propConfig.table/PropConfigTable>#get
    (i32.load offset=64
     (local.get $0)
    )
   )
  )
  (local.set $9
   (i32.ne
    (local.tee $8
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/account.table/AccountsTable>#get
      (i32.load offset=68
       (local.get $0)
      )
      (i64.load
       (local.get $1)
      )
     )
    )
    (i32.const 0)
   )
  )
  (if
   (i32.eqz
    (local.get $7)
   )
   (unreachable)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (i32.const 19552)
   (call $~lib/util/number/utoa64
    (i64.load offset=8
     (local.get $7)
    )
   )
  )
  (call $~lib/as-chain/system/check
   (local.get $9)
   (call $~lib/staticarray/StaticArray<~lib/string/String>#join
    (i32.const 19552)
   )
  )
  (if
   (i32.eqz
    (local.get $8)
   )
   (unreachable)
  )
  (local.set $10
   (i64.load offset=16
    (local.get $8)
   )
  )
  (if
   (i32.eqz
    (local.get $7)
   )
   (unreachable)
  )
  (local.set $8
   (i64.ge_u
    (local.get $10)
    (i64.load offset=8
     (local.get $7)
    )
   )
  )
  (if
   (i32.eqz
    (local.get $7)
   )
   (unreachable)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (i32.const 19584)
   (call $~lib/util/number/utoa64
    (i64.load offset=8
     (local.get $7)
    )
   )
  )
  (call $~lib/as-chain/system/check
   (local.get $8)
   (call $~lib/staticarray/StaticArray<~lib/string/String>#join
    (i32.const 19584)
   )
  )
  (call $~lib/as-chain/system/check
   (i64.gt_u
    (local.get $6)
    (i64.extend_i32_u
     (call $~lib/as-chain/system/currentTimeSec)
    )
   )
   (i32.const 19616)
  )
  (local.set $1
   (call $tables/proposals.table/ProposalsTable#constructor
    (i64.extend_i32_u
     (call $~lib/as-chain/system/currentTimeSec)
    )
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (local.get $5)
    (local.get $6)
   )
  )
  (call $~lib/proton-tsc/modules/store/store/TableStore<tables/proposals.table/ProposalsTable>#store
   (i32.load offset=56
    (local.get $0)
   )
   (local.get $1)
   (i32.load
    (local.get $0)
   )
  )
 )
 (func $tables/proposals.table/ProposalsTable#unpack (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (call $~lib/as-chain/name/Name#set:N
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.tee $1
     (call $~lib/as-chain/serializer/Decoder#constructor
      (local.get $1)
     )
    )
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $0)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:rtId
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $~lib/rt/common/OBJECT#set:rtSize
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $snipvote.contract/snipvoting#set:votersTable
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $tables/candidates.table/CandidatesTable#set:status
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:registrationEndTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:candidateStakeAmount
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:voterStakeAmount
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:status
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (i32.load offset=4
   (local.get $1)
  )
 )
 (func $~lib/as-chain/dbi64/DBI64<tables/proposals.table/ProposalsTable>#getEx (param $0 i32) (param $1 i32) (result i32)
  (if
   (i32.eqz
    (local.tee $0
     (call $~lib/as-chain/env/db_get_i64
      (local.get $1)
      (i32.const 0)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (drop
   (call $~lib/as-chain/env/db_get_i64
    (local.get $1)
    (i32.load offset=4
     (local.tee $1
      (call $~lib/array/Array<u8>#constructor
       (local.get $0)
      )
     )
    )
    (local.get $0)
   )
  )
  (global.set $~argumentsLength
   (i32.const 0)
  )
  (drop
   (call $tables/proposals.table/ProposalsTable#unpack
    (local.tee $0
     (call $tables/proposals.table/ProposalsTable#constructor@varargs)
    )
    (local.get $1)
   )
  )
  (local.get $0)
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/proposals.table/ProposalsTable>#get (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (local $3 i32)
  (block $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/proposals.table/ProposalsTable>#getByKey (result i32)
   (drop
    (br_if $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/proposals.table/ProposalsTable>#getByKey
     (i32.const 0)
     (i32.eqz
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
       (local.tee $2
        (call $~lib/as-chain/mi/MultiIndex<tables/proposals.table/ProposalsTable>#find
         (local.tee $0
          (i32.load
           (local.get $0)
          )
         )
         (local.get $1)
        )
       )
      )
     )
    )
   )
   (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/proposals.table/ProposalsTable>#get (result i32)
    (local.set $3
     (i32.load
      (local.get $0)
     )
    )
    (drop
     (br_if $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/proposals.table/ProposalsTable>#get
      (i32.const 0)
      (i32.eqz
       (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
        (local.tee $0
         (local.get $2)
        )
       )
      )
     )
    )
    (call $~lib/as-chain/dbi64/DBI64<tables/proposals.table/ProposalsTable>#getEx
     (local.get $3)
     (i32.load offset=4
      (local.get $0)
     )
    )
   )
  )
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/propVoter.table/PropVotersTable>#constructor (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32) (result i32)
  (local $4 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $4
    (call $~lib/rt/stub/__new
     (i32.const 24)
     (i32.const 108)
    )
   )
   (i32.const 0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (i32.const 0)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (i32.const 0)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (i64.const 0)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $4)
   (local.get $0)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $4)
   (local.get $1)
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $4)
   (local.get $2)
  )
  (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
   (local.get $4)
   (local.get $3)
  )
  (local.get $4)
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/propVoter.table/PropVotersTable>#find (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/propVoter.table/PropVotersTable>#find (result i32)
   (if
    (i32.ge_s
     (local.tee $2
      (call $~lib/as-chain/env/db_find_i64
       (i64.load
        (local.tee $0
         (i32.load
          (local.get $0)
         )
        )
       )
       (i64.load offset=8
        (local.get $0)
       )
       (i64.load offset=16
        (local.get $0)
       )
       (local.get $1)
      )
     )
     (i32.const 0)
    )
    (br $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/propVoter.table/PropVotersTable>#find
     (call $~lib/as-chain/dbi64/PrimaryIterator<tables/propVoter.table/PropVotersTable>#constructor
      (local.get $0)
      (local.get $2)
      (local.get $1)
      (i32.const 1)
     )
    )
   )
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/propVoter.table/PropVotersTable>#constructor
    (local.get $0)
    (local.get $2)
    (i64.const 0)
    (i32.const 0)
   )
  )
 )
 (func $tables/propVoter.table/PropVotersTable#unpack (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/as-chain/serializer/Decoder#constructor
    (local.get $1)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $0)
   (local.get $2)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (call $~lib/rt/common/OBJECT#set:rtSize
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (i32.load offset=4
   (local.get $1)
  )
 )
 (func $~lib/as-chain/dbi64/DBI64<tables/propVoter.table/PropVotersTable>#getEx (param $0 i32) (param $1 i32) (result i32)
  (if
   (i32.eqz
    (local.tee $0
     (call $~lib/as-chain/env/db_get_i64
      (local.get $1)
      (i32.const 0)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (drop
   (call $~lib/as-chain/env/db_get_i64
    (local.get $1)
    (i32.load offset=4
     (local.tee $1
      (call $~lib/array/Array<u8>#constructor
       (local.get $0)
      )
     )
    )
    (local.get $0)
   )
  )
  (global.set $~argumentsLength
   (i32.const 0)
  )
  (drop
   (call $tables/propVoter.table/PropVotersTable#unpack
    (local.tee $0
     (call $tables/propVoter.table/PropVotersTable#constructor@varargs)
    )
    (local.get $1)
   )
  )
  (local.get $0)
 )
 (func $~lib/as-chain/mi/MultiIndex<tables/proposals.table/ProposalsTable>#update (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i64)
  (call $~lib/as-chain/system/check
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
    (local.get $1)
   )
   (i32.const 14288)
  )
  (call $~lib/as-chain/system/check
   (i64.eq
    (local.tee $4
     (i64.load
      (local.get $2)
     )
    )
    (block $__inlined_func$~lib/as-chain/dbi64/PrimaryIterator<tables/proposals.table/ProposalsTable>#get:primary (result i64)
     (call $~lib/as-chain/system/check
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
       (local.get $1)
      )
      (i32.const 14352)
     )
     (if
      (i32.load8_u offset=8
       (local.get $1)
      )
      (br $__inlined_func$~lib/as-chain/dbi64/PrimaryIterator<tables/proposals.table/ProposalsTable>#get:primary
       (i64.load offset=16
        (local.get $1)
       )
      )
     )
     (if
      (i32.eqz
       (local.tee $6
        (block $__inlined_func$~lib/as-chain/dbi64/PrimaryIterator<tables/proposals.table/ProposalsTable>#getValue (result i32)
         (drop
          (br_if $__inlined_func$~lib/as-chain/dbi64/PrimaryIterator<tables/proposals.table/ProposalsTable>#getValue
           (i32.const 0)
           (i32.eqz
            (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
             (local.get $1)
            )
           )
          )
         )
         (call $~lib/as-chain/dbi64/DBI64<tables/proposals.table/ProposalsTable>#getEx
          (i32.load
           (local.get $1)
          )
          (i32.load offset=4
           (local.get $1)
          )
         )
        )
       )
      )
      (unreachable)
     )
     (call $tables/elections.table/ElectionsTable#set:endTime
      (local.get $1)
      (i64.load
       (local.get $6)
      )
     )
     (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#set:validPrimary
      (local.get $1)
      (i32.const 1)
     )
     (i64.load offset=16
      (local.get $1)
     )
    )
   )
   (i32.const 14432)
  )
  (drop
   (i32.load
    (local.get $0)
   )
  )
  (local.set $7
   (i64.load
    (local.get $3)
   )
  )
  (local.set $6
   (i32.load offset=12
    (local.tee $2
     (call $tables/proposals.table/ProposalsTable#pack
      (local.get $2)
     )
    )
   )
  )
  (call $~lib/as-chain/env/db_update_i64
   (i32.load offset=4
    (local.get $1)
   )
   (local.get $7)
   (i32.load offset=4
    (local.get $2)
   )
   (local.get $6)
  )
  (loop $for-loop|0
   (if
    (i32.lt_s
     (local.get $5)
     (i32.load offset=12
      (i32.load offset=4
       (local.get $0)
      )
     )
    )
    (block
     (local.set $1
      (call $~lib/as-chain/idxdb/IDXDB#findPrimaryEx@virtual
       (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
        (i32.load offset=4
         (local.get $0)
        )
        (local.get $5)
       )
       (local.get $4)
      )
     )
     (local.set $2
      (call $tables/elections.table/ElectionsTable#getSecondaryValue)
     )
     (if
      (i32.eqz
       (if (result i32)
        (i32.eq
         (i32.load
          (i32.load offset=4
           (local.get $1)
          )
         )
         (i32.load
          (local.get $2)
         )
        )
        (i32.eq
         (i32.load offset=4
          (i32.load offset=4
           (local.get $1)
          )
         )
         (i32.load offset=4
          (local.get $2)
         )
        )
        (i32.const 0)
       )
      )
      (call $~lib/as-chain/idxdb/IDXDB#updateEx@virtual
       (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
        (i32.load offset=4
         (local.get $0)
        )
        (local.get $5)
       )
       (i32.load
        (local.get $1)
       )
       (call $tables/elections.table/ElectionsTable#getSecondaryValue)
       (i64.load
        (local.get $3)
       )
      )
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (if
   (i64.ge_u
    (local.get $4)
    (i64.load offset=8
     (local.get $0)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $0)
    (select
     (i64.const -2)
     (i64.add
      (local.get $4)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $4)
      (i64.const -2)
     )
    )
   )
  )
 )
 (func $~lib/proton-tsc/modules/store/store/TableStore<tables/proposals.table/ProposalsTable>#update (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (call $~lib/as-chain/system/check
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
    (local.tee $3
     (call $~lib/as-chain/mi/MultiIndex<tables/proposals.table/ProposalsTable>#find
      (i32.load
       (local.get $0)
      )
      (i64.load
       (local.get $1)
      )
     )
    )
   )
   (i32.const 1424)
  )
  (call $~lib/as-chain/mi/MultiIndex<tables/proposals.table/ProposalsTable>#update
   (i32.load
    (local.get $0)
   )
   (local.get $3)
   (local.get $1)
   (local.get $2)
  )
 )
 (func $tables/propVoter.table/PropVotersTable#pack (param $0 i32) (result i32)
  (local $1 i32)
  (call $~lib/as-chain/serializer/Encoder#pack
   (local.tee $1
    (call $~lib/as-chain/serializer/Encoder#constructor
     (block (result i32)
      (drop
       (i32.load
        (local.get $0)
       )
      )
      (i32.add
       (call $~lib/as-chain/utils/Utils.calcPackedStringLength
        (i32.load offset=16
         (local.get $0)
        )
       )
       (i32.const 16)
      )
     )
    )
   )
   (i32.load
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $1)
   (i64.load offset=8
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=16
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#getBytes
   (local.get $1)
  )
 )
 (func $snipvote.contract/snipvoting#voteProposal (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  (local $9 i64)
  (local $10 i32)
  (call $~lib/as-chain/action/requireAuth
   (local.get $1)
  )
  (call $~lib/as-chain/system/check
   (i32.ne
    (local.tee $4
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/proposals.table/ProposalsTable>#get
      (i32.load offset=56
       (local.get $0)
      )
      (local.get $2)
     )
    )
    (i32.const 0)
   )
   (i32.const 19696)
  )
  (local.set $5
   (call $~lib/proton-tsc/modules/store/store/TableStore<tables/propConfig.table/PropConfigTable>#get
    (i32.load offset=64
     (local.get $0)
    )
   )
  )
  (local.set $7
   (i32.ne
    (local.tee $6
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/account.table/AccountsTable>#get
      (i32.load offset=68
       (local.get $0)
      )
      (i64.load
       (local.get $1)
      )
     )
    )
    (i32.const 0)
   )
  )
  (if
   (i32.eqz
    (local.get $5)
   )
   (unreachable)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (i32.const 19856)
   (call $~lib/util/number/utoa64
    (i64.load offset=16
     (local.get $5)
    )
   )
  )
  (call $~lib/as-chain/system/check
   (local.get $7)
   (call $~lib/staticarray/StaticArray<~lib/string/String>#join
    (i32.const 19856)
   )
  )
  (if
   (i32.eqz
    (local.get $6)
   )
   (unreachable)
  )
  (local.set $8
   (i64.load offset=16
    (local.get $6)
   )
  )
  (if
   (i32.eqz
    (local.get $5)
   )
   (unreachable)
  )
  (local.set $6
   (i64.ge_u
    (local.get $8)
    (i64.load offset=16
     (local.get $5)
    )
   )
  )
  (if
   (i32.eqz
    (local.get $5)
   )
   (unreachable)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (i32.const 19888)
   (call $~lib/util/number/utoa64
    (i64.load offset=16
     (local.get $5)
    )
   )
  )
  (call $~lib/as-chain/system/check
   (local.get $6)
   (call $~lib/staticarray/StaticArray<~lib/string/String>#join
    (i32.const 19888)
   )
  )
  (local.set $8
   (i64.extend_i32_u
    (call $~lib/as-chain/system/currentTimeSec)
   )
  )
  (if
   (i32.eqz
    (local.get $4)
   )
   (unreachable)
  )
  (call $~lib/as-chain/system/check
   (i64.lt_u
    (local.get $8)
    (i64.load offset=48
     (local.get $4)
    )
   )
   (i32.const 19920)
  )
  (call $~lib/as-chain/system/check
   (i32.eqz
    (block $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/propVoter.table/PropVotersTable>#getByKey (result i32)
     (drop
      (br_if $__inlined_func$~lib/as-chain/mi/MultiIndex<tables/propVoter.table/PropVotersTable>#getByKey
       (i32.const 0)
       (i32.eqz
        (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
         (local.tee $6
          (call $~lib/as-chain/mi/MultiIndex<tables/propVoter.table/PropVotersTable>#find
           (local.tee $7
            (i32.load
             (i32.load offset=60
              (local.get $0)
             )
            )
           )
           (i64.add
            (local.get $2)
            (i64.load
             (local.get $1)
            )
           )
          )
         )
        )
       )
      )
     )
     (block $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/propVoter.table/PropVotersTable>#get (result i32)
      (local.set $7
       (i32.load
        (local.get $7)
       )
      )
      (drop
       (br_if $__inlined_func$~lib/as-chain/dbi64/DBI64<tables/propVoter.table/PropVotersTable>#get
        (i32.const 0)
        (i32.eqz
         (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
          (local.get $6)
         )
        )
       )
      )
      (call $~lib/as-chain/dbi64/DBI64<tables/propVoter.table/PropVotersTable>#getEx
       (local.get $7)
       (i32.load offset=4
        (local.get $6)
       )
      )
     )
    )
   )
   (i32.const 20000)
  )
  (call $~lib/as-chain/system/check
   (if (result i32)
    (i64.eq
     (call $utils/index/stringToU64
      (local.get $3)
     )
     (call $utils/index/stringToU64
      (i32.const 19264)
     )
    )
    (i32.const 1)
    (i64.eq
     (call $utils/index/stringToU64
      (local.get $3)
     )
     (call $utils/index/stringToU64
      (i32.const 19296)
     )
    )
   )
   (i32.const 19328)
  )
  (if
   (i64.eq
    (call $utils/index/stringToU64
     (local.get $3)
    )
    (call $utils/index/stringToU64
     (i32.const 19264)
    )
   )
   (block
    (if
     (i32.eqz
      (local.get $4)
     )
     (unreachable)
    )
    (if
     (i32.eqz
      (local.get $4)
     )
     (unreachable)
    )
    (call $tables/elections.table/ElectionsTable#set:registrationEndTime
     (local.get $4)
     (i64.add
      (i64.load offset=32
       (local.get $4)
      )
      (i64.const 1)
     )
    )
   )
   (if
    (i64.eq
     (call $utils/index/stringToU64
      (local.get $3)
     )
     (call $utils/index/stringToU64
      (i32.const 19296)
     )
    )
    (block
     (if
      (i32.eqz
       (local.get $4)
      )
      (unreachable)
     )
     (if
      (i32.eqz
       (local.get $4)
      )
      (unreachable)
     )
     (call $tables/elections.table/ElectionsTable#set:candidateStakeAmount
      (local.get $4)
      (i64.add
       (i64.load offset=40
        (local.get $4)
       )
       (i64.const 1)
      )
     )
    )
   )
  )
  (local.set $5
   (i32.load offset=56
    (local.get $0)
   )
  )
  (if
   (i32.eqz
    (local.get $4)
   )
   (unreachable)
  )
  (call $~lib/proton-tsc/modules/store/store/TableStore<tables/proposals.table/ProposalsTable>#update
   (local.get $5)
   (local.get $4)
   (i32.load
    (local.get $0)
   )
  )
  (local.set $1
   (call $tables/propVoter.table/PropVotersTable#constructor
    (local.get $1)
    (local.get $2)
    (local.get $3)
   )
  )
  (local.set $3
   (i32.load
    (local.get $0)
   )
  )
  (local.set $4
   (i32.load offset=60
    (local.get $0)
   )
  )
  (local.set $2
   (call $tables/modrecallvoter.table/ModRecallVotersTable#getPrimaryValue
    (local.get $1)
   )
  )
  (call $~lib/as-chain/system/check
   (i32.eqz
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
     (call $~lib/as-chain/mi/MultiIndex<tables/propVoter.table/PropVotersTable>#find
      (i32.load
       (local.get $4)
      )
      (local.get $2)
     )
    )
   )
   (i32.const 1200)
  )
  (local.set $5
   (i32.const 0)
  )
  (local.set $7
   (i32.load
    (local.tee $6
     (i32.load
      (local.get $4)
     )
    )
   )
  )
  (local.set $8
   (call $tables/modrecallvoter.table/ModRecallVotersTable#getPrimaryValue
    (local.tee $0
     (local.get $1)
    )
   )
  )
  (local.set $9
   (i64.load
    (local.get $3)
   )
  )
  (local.set $10
   (i32.load offset=12
    (local.tee $1
     (call $tables/propVoter.table/PropVotersTable#pack
      (local.get $0)
     )
    )
   )
  )
  (drop
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/propVoter.table/PropVotersTable>#constructor
    (local.get $7)
    (call $~lib/as-chain/env/db_store_i64
     (i64.load offset=8
      (local.get $7)
     )
     (i64.load offset=16
      (local.get $7)
     )
     (local.get $9)
     (local.get $8)
     (i32.load offset=4
      (local.get $1)
     )
     (local.get $10)
    )
    (local.get $8)
    (i32.const 1)
   )
  )
  (loop $for-loop|0
   (if
    (i32.lt_s
     (local.get $5)
     (i32.load offset=12
      (i32.load offset=4
       (local.get $6)
      )
     )
    )
    (block
     (call $~lib/as-chain/idxdb/IDXDB#storeEx@virtual
      (call $~lib/array/Array<~lib/as-chain/name/Name>#__get
       (i32.load offset=4
        (local.get $6)
       )
       (local.get $5)
      )
      (call $tables/modrecallvoter.table/ModRecallVotersTable#getPrimaryValue
       (local.get $0)
      )
      (call $tables/elections.table/ElectionsTable#getSecondaryValue)
      (i64.load
       (local.get $3)
      )
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (br $for-loop|0)
    )
   )
  )
  (if
   (i64.ge_u
    (local.tee $8
     (call $tables/modrecallvoter.table/ModRecallVotersTable#getPrimaryValue
      (local.get $0)
     )
    )
    (i64.load offset=8
     (local.get $6)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $6)
    (select
     (i64.const -2)
     (i64.add
      (local.get $8)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $8)
      (i64.const -2)
     )
    )
   )
  )
  (if
   (i64.ge_u
    (local.get $2)
    (i64.load offset=8
     (local.get $4)
    )
   )
   (call $tables/elections.table/ElectionsTable#set:startTime
    (local.get $4)
    (select
     (i64.const -2)
     (i64.add
      (local.get $2)
      (i64.const 1)
     )
     (i64.ge_u
      (local.get $2)
      (i64.const -2)
     )
    )
   )
  )
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/account.table/AccountsTable>#getValue (param $0 i32) (result i32)
  (if
   (i32.eqz
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
     (local.get $0)
    )
   )
   (return
    (i32.const 0)
   )
  )
  (call $~lib/as-chain/dbi64/DBI64<tables/account.table/AccountsTable>#getEx
   (i32.load
    (local.get $0)
   )
   (i32.load offset=4
    (local.get $0)
   )
  )
 )
 (func $~lib/as-chain/dbi64/PrimaryIterator<tables/propVoter.table/PropVotersTable>#getValue (param $0 i32) (result i32)
  (if
   (i32.eqz
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
     (local.get $0)
    )
   )
   (return
    (i32.const 0)
   )
  )
  (call $~lib/as-chain/dbi64/DBI64<tables/propVoter.table/PropVotersTable>#getEx
   (i32.load
    (local.get $0)
   )
   (i32.load offset=4
    (local.get $0)
   )
  )
 )
 (func $snipvote.contract/snipvoting#closeProposal (param $0 i32) (param $1 i64) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  (call $~lib/as-chain/action/requireAuth
   (local.get $2)
  )
  (call $~lib/as-chain/system/check
   (i32.ne
    (local.tee $2
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/proposals.table/ProposalsTable>#get
      (i32.load offset=56
       (local.get $0)
      )
      (local.get $1)
     )
    )
    (i32.const 0)
   )
   (i32.const 19696)
  )
  (if
   (i32.eqz
    (local.get $2)
   )
   (unreachable)
  )
  (call $~lib/as-chain/system/check
   (i64.eq
    (call $utils/index/stringToU64
     (i32.load offset=56
      (local.get $2)
     )
    )
    (call $utils/index/stringToU64
     (i32.const 3024)
    )
   )
   (i32.const 20096)
  )
  (if
   (i32.eqz
    (local.get $2)
   )
   (unreachable)
  )
  (call $~lib/as-chain/system/check
   (i64.lt_u
    (i64.load offset=48
     (local.get $2)
    )
    (i64.extend_i32_u
     (call $~lib/as-chain/system/currentTimeSec)
    )
   )
   (i32.const 20176)
  )
  (call $~lib/as-chain/system/check
   (i32.ne
    (local.tee $5
     (call $~lib/proton-tsc/modules/store/store/TableStore<tables/propConfig.table/PropConfigTable>#get
      (i32.load offset=64
       (local.get $0)
      )
     )
    )
    (i32.const 0)
   )
   (i32.const 20240)
  )
  (local.set $4
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/account.table/AccountsTable>#getValue
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/account.table/AccountsTable>#constructor
     (local.tee $4
      (i32.load
       (i32.load
        (i32.load offset=68
         (local.get $0)
        )
       )
      )
     )
     (call $~lib/as-chain/env/db_lowerbound_i64
      (i64.load
       (local.get $4)
      )
      (i64.load offset=8
       (local.get $4)
      )
      (i64.load offset=16
       (local.get $4)
      )
      (i64.const 0)
     )
     (i64.const 0)
     (i32.const 0)
    )
   )
  )
  (loop $while-continue|0
   (if
    (local.get $4)
    (block
     (local.set $6
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (local.set $8
      (i64.load offset=16
       (local.get $4)
      )
     )
     (if
      (i32.eqz
       (local.get $5)
      )
      (unreachable)
     )
     (local.set $3
      (select
       (local.get $6)
       (local.get $3)
       (i64.ge_u
        (local.get $8)
        (i64.load offset=16
         (local.get $5)
        )
       )
      )
     )
     (call $~lib/as-chain/system/check
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
       (local.tee $7
        (call $~lib/as-chain/mi/MultiIndex<tables/account.table/AccountsTable>#find
         (i32.load
          (local.tee $6
           (i32.load offset=68
            (local.get $0)
           )
          )
         )
         (call $tables/moderatorCand.table/ModeratorCandTable#getPrimaryValue
          (local.get $4)
         )
        )
       )
      )
      (i32.const 1872)
     )
     (local.set $6
      (i32.load
       (i32.load
        (local.get $6)
       )
      )
     )
     (local.set $4
      (call $~lib/rt/stub/__alloc
       (i32.const 8)
      )
     )
     (local.set $4
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/account.table/AccountsTable>#getValue
       (call $~lib/as-chain/dbi64/PrimaryIterator<tables/account.table/AccountsTable>#constructor
        (local.get $6)
        (call $~lib/as-chain/env/db_next_i64
         (i32.load offset=4
          (local.get $7)
         )
         (local.get $4)
        )
        (i64.load
         (local.get $4)
        )
        (i32.const 1)
       )
      )
     )
     (br $while-continue|0)
    )
   )
  )
  (call $~lib/as-chain/system/check
   (i32.gt_s
    (local.get $3)
    (i32.const 0)
   )
   (i32.const 20320)
  )
  (local.set $5
   (call $~lib/as-chain/dbi64/PrimaryIterator<tables/propVoter.table/PropVotersTable>#getValue
    (call $~lib/as-chain/dbi64/PrimaryIterator<tables/propVoter.table/PropVotersTable>#constructor
     (local.tee $5
      (i32.load
       (i32.load
        (i32.load offset=60
         (local.get $0)
        )
       )
      )
     )
     (call $~lib/as-chain/env/db_lowerbound_i64
      (i64.load
       (local.get $5)
      )
      (i64.load offset=8
       (local.get $5)
      )
      (i64.load offset=16
       (local.get $5)
      )
      (i64.const 0)
     )
     (i64.const 0)
     (i32.const 0)
    )
   )
  )
  (local.set $4
   (i32.const 0)
  )
  (loop $while-continue|1
   (if
    (local.get $5)
    (block
     (local.set $4
      (select
       (i32.add
        (local.get $4)
        (i32.const 1)
       )
       (local.get $4)
       (i64.eq
        (local.get $1)
        (i64.load offset=8
         (local.get $5)
        )
       )
      )
     )
     (call $~lib/as-chain/system/check
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/elections.table/ElectionsTable>#isOk
       (local.tee $7
        (call $~lib/as-chain/mi/MultiIndex<tables/propVoter.table/PropVotersTable>#find
         (i32.load
          (local.tee $6
           (i32.load offset=60
            (local.get $0)
           )
          )
         )
         (call $tables/modrecallvoter.table/ModRecallVotersTable#getPrimaryValue
          (local.get $5)
         )
        )
       )
      )
      (i32.const 1872)
     )
     (local.set $6
      (i32.load
       (i32.load
        (local.get $6)
       )
      )
     )
     (local.set $5
      (call $~lib/rt/stub/__alloc
       (i32.const 8)
      )
     )
     (local.set $5
      (call $~lib/as-chain/dbi64/PrimaryIterator<tables/propVoter.table/PropVotersTable>#getValue
       (call $~lib/as-chain/dbi64/PrimaryIterator<tables/propVoter.table/PropVotersTable>#constructor
        (local.get $6)
        (call $~lib/as-chain/env/db_next_i64
         (i32.load offset=4
          (local.get $7)
         )
         (local.get $5)
        )
        (i64.load
         (local.get $5)
        )
        (i32.const 1)
       )
      )
     )
     (br $while-continue|1)
    )
   )
  )
  (if
   (i32.lt_s
    (i32.div_s
     (i32.mul
      (local.get $4)
      (i32.const 100)
     )
     (local.get $3)
    )
    (i32.const 90)
   )
   (block
    (if
     (i32.eqz
      (local.get $2)
     )
     (unreachable)
    )
    (call $tables/elections.table/ElectionsTable#set:status
     (local.get $2)
     (i32.const 18704)
    )
    (local.set $3
     (i32.load offset=56
      (local.get $0)
     )
    )
    (if
     (i32.eqz
      (local.get $2)
     )
     (unreachable)
    )
    (call $~lib/proton-tsc/modules/store/store/TableStore<tables/proposals.table/ProposalsTable>#update
     (local.get $3)
     (local.get $2)
     (i32.load
      (local.get $0)
     )
    )
    (return)
   )
  )
  (local.set $1
   (i64.load offset=32
    (local.tee $3
     (if (result i32)
      (local.get $2)
      (local.get $2)
      (unreachable)
     )
    )
   )
  )
  (if
   (i32.eqz
    (local.get $2)
   )
   (unreachable)
  )
  (if
   (i64.gt_u
    (local.get $1)
    (i64.load offset=40
     (local.get $3)
    )
   )
   (block
    (if
     (i32.eqz
      (local.get $2)
     )
     (unreachable)
    )
    (call $tables/elections.table/ElectionsTable#set:status
     (local.get $2)
     (i32.const 20400)
    )
   )
   (block
    (if
     (i32.eqz
      (local.get $2)
     )
     (unreachable)
    )
    (call $tables/elections.table/ElectionsTable#set:status
     (local.get $2)
     (i32.const 18704)
    )
   )
  )
  (local.set $3
   (i32.load offset=56
    (local.get $0)
   )
  )
  (if
   (i32.eqz
    (local.get $2)
   )
   (unreachable)
  )
  (call $~lib/proton-tsc/modules/store/store/TableStore<tables/proposals.table/ProposalsTable>#update
   (local.get $3)
   (local.get $2)
   (i32.load
    (local.get $0)
   )
  )
 )
 (func $snipvote.contract/createElectionAction#unpack (param $0 i32) (param $1 i32) (result i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.tee $1
     (call $~lib/as-chain/serializer/Decoder#constructor
      (local.get $1)
     )
    )
   )
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:registrationStartTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:registrationEndTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:candidateStakeAmount
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:voterStakeAmount
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (i32.load offset=4
   (local.get $1)
  )
 )
 (func $snipvote.contract/clearAllTablesAction#unpack (param $0 i32) (param $1 i32) (result i32)
  (i32.load offset=4
   (call $~lib/as-chain/serializer/Decoder#constructor
    (local.get $1)
   )
  )
 )
 (func $snipvote.contract/registerCandidateAction#unpack (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/as-chain/serializer/Decoder#constructor
    (local.get $1)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $0)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (i32.load offset=4
   (local.get $1)
  )
 )
 (func $snipvote.contract/withdrawCandidateAction#unpack (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/as-chain/serializer/Decoder#constructor
    (local.get $1)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $0)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (i32.load offset=4
   (local.get $1)
  )
 )
 (func $snipvote.contract/voteAction#unpack (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/as-chain/serializer/Decoder#constructor
    (local.get $1)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $0)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $0)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:rtId
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (i32.load offset=4
   (local.get $1)
  )
 )
 (func $snipvote.contract/declareWinnersAction#unpack (param $0 i32) (param $1 i32) (result i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.tee $1
     (call $~lib/as-chain/serializer/Decoder#constructor
      (local.get $1)
     )
    )
   )
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (i32.load offset=4
   (local.get $1)
  )
 )
 (func $snipvote.contract/createRecallVotingAction#unpack (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/as-chain/serializer/Decoder#constructor
    (local.get $1)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $0)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:registrationStartTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (call $snipvote.contract/snipvoting#set:recallVotersTable
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (i32.load offset=4
   (local.get $1)
  )
 )
 (func $snipvote.contract/recallVoteAction#unpack (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/as-chain/serializer/Decoder#constructor
    (local.get $1)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $0)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $0)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:rtId
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $tables/recallVoters.table/RecallVotersTable#set:votedToReplace
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u8>
    (local.get $1)
   )
  )
  (i32.load offset=4
   (local.get $1)
  )
 )
 (func $snipvote.contract/moderatorVoteAction#unpack (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/as-chain/serializer/Decoder#constructor
    (local.get $1)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $0)
   (local.get $2)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $0)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (i32.load offset=4
   (local.get $1)
  )
 )
 (func $snipvote.contract/initModRecallAction#unpack (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/as-chain/serializer/Decoder#constructor
    (local.get $1)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $0)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $0)
   (local.get $2)
  )
  (i32.load offset=4
   (local.get $1)
  )
 )
 (func $snipvote.contract/updateConfigAction#unpack (param $0 i32) (param $1 i32) (result i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.tee $1
     (call $~lib/as-chain/serializer/Decoder#constructor
      (local.get $1)
     )
    )
   )
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:endTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (i32.load offset=4
   (local.get $1)
  )
 )
 (func $snipvote.contract/submitProposalAction#unpack (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $1
   (call $~lib/as-chain/serializer/Decoder#constructor
    (local.get $1)
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $2
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $2)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $1)
   (local.get $2)
  )
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.get $0)
   (local.get $2)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $~lib/rt/common/OBJECT#set:rtId
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $~lib/rt/common/OBJECT#set:rtSize
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackString
    (local.get $1)
   )
  )
  (call $tables/elections.table/ElectionsTable#set:registrationStartTime
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.get $1)
   )
  )
  (i32.load offset=4
   (local.get $1)
  )
 )
 (func $snipvote.contract/closeProposalAction#unpack (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (call $~lib/as-chain/name/Name#set:N
   (local.get $0)
   (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
    (local.tee $2
     (call $~lib/as-chain/serializer/Decoder#constructor
      (local.get $1)
     )
    )
   )
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $1
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $1)
   (i64.const 0)
  )
  (call $~lib/as-chain/serializer/Decoder#unpack
   (local.get $2)
   (local.get $1)
  )
  (call $~lib/rt/common/OBJECT#set:gcInfo2
   (local.get $0)
   (local.get $1)
  )
  (i32.load offset=4
   (local.get $2)
  )
 )
 (func $snipvote.contract/apply (param $0 i64) (param $1 i64) (param $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $3
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $3)
   (local.get $0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $7
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $7)
   (local.get $1)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $4
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $4)
   (local.get $2)
  )
  (local.set $7
   (call $snipvote.contract/snipvoting#constructor
    (i32.const 0)
    (local.get $3)
    (local.get $7)
    (local.get $4)
   )
  )
  (drop
   (call $~lib/as-chain/env/read_action_data
    (i32.load offset=4
     (local.tee $4
      (call $~lib/array/Array<u8>#constructor
       (local.tee $3
        (call $~lib/as-chain/env/action_data_size)
       )
      )
     )
    )
    (local.get $3)
   )
  )
  (local.set $6
   (local.get $4)
  )
  (if
   (i64.eq
    (local.get $0)
    (local.get $1)
   )
   (block
    (if
     (i64.eq
      (local.get $2)
      (i64.const 5031766158149300736)
     )
     (block
      (drop
       (call $snipvote.contract/createElectionAction#unpack
        (block (result i32)
         (call $~lib/rt/common/BLOCK#set:mmInfo
          (local.tee $3
           (call $~lib/rt/stub/__new
            (i32.const 56)
            (i32.const 109)
           )
          )
          (i32.const 2512)
         )
         (call $tables/elections.table/ElectionsTable#set:startTime
          (local.get $3)
          (i64.const 0)
         )
         (call $tables/elections.table/ElectionsTable#set:endTime
          (local.get $3)
          (i64.const 0)
         )
         (call $tables/elections.table/ElectionsTable#set:registrationStartTime
          (local.get $3)
          (i64.const 0)
         )
         (call $tables/elections.table/ElectionsTable#set:registrationEndTime
          (local.get $3)
          (i64.const 0)
         )
         (call $tables/elections.table/ElectionsTable#set:candidateStakeAmount
          (local.get $3)
          (i64.const 0)
         )
         (call $tables/elections.table/ElectionsTable#set:voterStakeAmount
          (local.get $3)
          (i64.const 0)
         )
         (local.get $3)
        )
        (local.get $6)
       )
      )
      (call $snipvote.contract/snipvoting#createElection
       (local.get $7)
       (i32.load
        (local.get $3)
       )
       (i64.load offset=8
        (local.get $3)
       )
       (i64.load offset=16
        (local.get $3)
       )
       (i64.load offset=24
        (local.get $3)
       )
       (i64.load offset=32
        (local.get $3)
       )
       (i64.load offset=40
        (local.get $3)
       )
       (i64.load offset=48
        (local.get $3)
       )
      )
     )
    )
    (if
     (i64.eq
      (local.get $2)
      (i64.const 4923678648385404928)
     )
     (block
      (drop
       (call $snipvote.contract/clearAllTablesAction#unpack
        (call $~lib/rt/stub/__new
         (i32.const 0)
         (i32.const 110)
        )
        (local.get $6)
       )
      )
      (call $snipvote.contract/snipvoting#clearAllTables
       (local.get $7)
      )
     )
    )
    (if
     (i64.eq
      (local.get $2)
      (i64.const 4923678890766131712)
     )
     (block
      (drop
       (call $snipvote.contract/clearAllTablesAction#unpack
        (call $~lib/rt/stub/__new
         (i32.const 0)
         (i32.const 111)
        )
        (local.get $6)
       )
      )
      (call $snipvote.contract/snipvoting#clearRecall
       (local.get $7)
      )
     )
    )
    (if
     (i64.eq
      (local.get $2)
      (i64.const 4923678891092366336)
     )
     (block
      (drop
       (call $snipvote.contract/clearAllTablesAction#unpack
        (call $~lib/rt/stub/__new
         (i32.const 0)
         (i32.const 112)
        )
        (local.get $6)
       )
      )
      (call $snipvote.contract/snipvoting#clearReVote
       (local.get $7)
      )
     )
    )
    (if
     (i64.eq
      (local.get $2)
      (i64.const 4931206455506911232)
     )
     (block
      (drop
       (call $snipvote.contract/clearAllTablesAction#unpack
        (call $~lib/rt/stub/__new
         (i32.const 0)
         (i32.const 113)
        )
        (local.get $6)
       )
      )
      (call $snipvote.contract/snipvoting#clrModCand
       (local.get $7)
      )
     )
    )
    (if
     (i64.eq
      (local.get $2)
      (i64.const 4931206465945513472)
     )
     (block
      (drop
       (call $snipvote.contract/clearAllTablesAction#unpack
        (call $~lib/rt/stub/__new
         (i32.const 0)
         (i32.const 114)
        )
        (local.get $6)
       )
      )
      (call $snipvote.contract/snipvoting#clrModVoter
       (local.get $7)
      )
     )
    )
    (if
     (i64.eq
      (local.get $2)
      (i64.const 4931206463621276432)
     )
     (block
      (drop
       (call $snipvote.contract/clearAllTablesAction#unpack
        (call $~lib/rt/stub/__new
         (i32.const 0)
         (i32.const 115)
        )
        (local.get $6)
       )
      )
      (call $snipvote.contract/snipvoting#clrModRecall
       (local.get $7)
      )
     )
    )
    (if
     (i64.eq
      (local.get $2)
      (i64.const -5000987466195163504)
     )
     (block
      (drop
       (call $snipvote.contract/registerCandidateAction#unpack
        (block (result i32)
         (call $~lib/rt/common/BLOCK#set:mmInfo
          (local.tee $3
           (call $~lib/rt/stub/__new
            (i32.const 12)
            (i32.const 116)
           )
          )
          (i32.const 0)
         )
         (call $~lib/rt/common/OBJECT#set:gcInfo
          (local.get $3)
          (i32.const 2512)
         )
         (call $~lib/rt/common/OBJECT#set:gcInfo2
          (local.get $3)
          (i32.const 2512)
         )
         (local.tee $4
          (local.get $3)
         )
        )
        (local.get $6)
       )
      )
      (if
       (i32.eqz
        (local.tee $3
         (i32.load
          (local.get $3)
         )
        )
       )
       (unreachable)
      )
      (call $snipvote.contract/snipvoting#registerCandidate
       (local.get $7)
       (local.get $3)
       (i32.load offset=4
        (local.get $4)
       )
       (i32.load offset=8
        (local.get $4)
       )
      )
     )
    )
    (if
     (i64.eq
      (local.get $2)
      (i64.const -2039333636192229744)
     )
     (block
      (drop
       (call $snipvote.contract/withdrawCandidateAction#unpack
        (block (result i32)
         (call $~lib/rt/common/BLOCK#set:mmInfo
          (local.tee $3
           (call $~lib/rt/stub/__new
            (i32.const 8)
            (i32.const 117)
           )
          )
          (i32.const 0)
         )
         (call $~lib/rt/common/OBJECT#set:gcInfo
          (local.get $3)
          (i32.const 2512)
         )
         (local.tee $4
          (local.get $3)
         )
        )
        (local.get $6)
       )
      )
      (if
       (i32.eqz
        (local.tee $3
         (i32.load
          (local.get $3)
         )
        )
       )
       (unreachable)
      )
      (call $snipvote.contract/snipvoting#withdrawCandidate
       (local.get $7)
       (local.get $3)
       (i32.load offset=4
        (local.get $4)
       )
      )
     )
    )
    (if
     (i64.eq
      (local.get $2)
      (i64.const -2507766120631500800)
     )
     (block
      (drop
       (call $snipvote.contract/voteAction#unpack
        (block (result i32)
         (call $~lib/rt/common/BLOCK#set:mmInfo
          (local.tee $3
           (call $~lib/rt/stub/__new
            (i32.const 16)
            (i32.const 118)
           )
          )
          (i32.const 0)
         )
         (call $~lib/rt/common/OBJECT#set:gcInfo
          (local.get $3)
          (i32.const 2512)
         )
         (call $~lib/rt/common/OBJECT#set:gcInfo2
          (local.get $3)
          (i32.const 0)
         )
         (call $~lib/rt/common/OBJECT#set:rtId
          (local.get $3)
          (i32.const 2512)
         )
         (local.tee $5
          (local.get $3)
         )
        )
        (local.get $6)
       )
      )
      (if
       (i32.eqz
        (local.tee $3
         (i32.load
          (local.get $3)
         )
        )
       )
       (unreachable)
      )
      (local.set $8
       (i32.load offset=4
        (local.get $5)
       )
      )
      (if
       (i32.eqz
        (local.tee $4
         (i32.load offset=8
          (local.get $5)
         )
        )
       )
       (unreachable)
      )
      (call $snipvote.contract/snipvoting#vote
       (local.get $7)
       (local.get $3)
       (local.get $8)
       (local.get $4)
       (i32.load offset=12
        (local.get $5)
       )
      )
     )
    )
    (if
     (i64.eq
      (local.get $2)
      (i64.const -2042605236735967232)
     )
     (block
      (drop
       (call $snipvote.contract/declareWinnersAction#unpack
        (block (result i32)
         (call $~lib/rt/common/BLOCK#set:mmInfo
          (local.tee $3
           (call $~lib/rt/stub/__new
            (i32.const 8)
            (i32.const 119)
           )
          )
          (i32.const 2512)
         )
         (call $~lib/rt/common/OBJECT#set:gcInfo
          (local.get $3)
          (i32.const 2512)
         )
         (local.get $3)
        )
        (local.get $6)
       )
      )
      (call $snipvote.contract/snipvoting#declareWinners
       (local.get $7)
       (i32.load
        (local.get $3)
       )
       (i32.load offset=4
        (local.get $3)
       )
      )
     )
    )
    (if
     (i64.eq
      (local.get $2)
      (i64.const 5031766165010096912)
     )
     (block
      (drop
       (call $snipvote.contract/createRecallVotingAction#unpack
        (block (result i32)
         (call $~lib/rt/common/BLOCK#set:mmInfo
          (local.tee $3
           (call $~lib/rt/stub/__new
            (i32.const 36)
            (i32.const 120)
           )
          )
          (i32.const 0)
         )
         (call $~lib/rt/common/OBJECT#set:gcInfo
          (local.get $3)
          (i32.const 2512)
         )
         (call $~lib/rt/common/OBJECT#set:gcInfo2
          (local.get $3)
          (i32.const 2512)
         )
         (call $tables/elections.table/ElectionsTable#set:endTime
          (local.get $3)
          (i64.const 0)
         )
         (call $tables/elections.table/ElectionsTable#set:registrationStartTime
          (local.get $3)
          (i64.const 0)
         )
         (call $snipvote.contract/snipvoting#set:recallVotersTable
          (local.get $3)
          (i32.const 2512)
         )
         (local.tee $4
          (local.get $3)
         )
        )
        (local.get $6)
       )
      )
      (if
       (i32.eqz
        (local.tee $3
         (i32.load
          (local.get $3)
         )
        )
       )
       (unreachable)
      )
      (call $snipvote.contract/snipvoting#createRecallVoting
       (local.get $7)
       (local.get $3)
       (i32.load offset=4
        (local.get $4)
       )
       (i32.load offset=8
        (local.get $4)
       )
       (i64.load offset=16
        (local.get $4)
       )
       (i64.load offset=24
        (local.get $4)
       )
       (i32.load offset=32
        (local.get $4)
       )
      )
     )
    )
    (if
     (i64.eq
      (local.get $2)
      (i64.const -5003383994985742336)
     )
     (block
      (drop
       (call $snipvote.contract/recallVoteAction#unpack
        (block (result i32)
         (call $~lib/rt/common/BLOCK#set:mmInfo
          (local.tee $3
           (call $~lib/rt/stub/__new
            (i32.const 17)
            (i32.const 121)
           )
          )
          (i32.const 0)
         )
         (call $~lib/rt/common/OBJECT#set:gcInfo
          (local.get $3)
          (i32.const 2512)
         )
         (call $~lib/rt/common/OBJECT#set:gcInfo2
          (local.get $3)
          (i32.const 0)
         )
         (call $~lib/rt/common/OBJECT#set:rtId
          (local.get $3)
          (i32.const 2512)
         )
         (call $tables/recallVoters.table/RecallVotersTable#set:votedToReplace
          (local.get $3)
          (i32.const 0)
         )
         (local.tee $5
          (local.get $3)
         )
        )
        (local.get $6)
       )
      )
      (if
       (i32.eqz
        (local.tee $3
         (i32.load
          (local.get $3)
         )
        )
       )
       (unreachable)
      )
      (local.set $8
       (i32.load offset=4
        (local.get $5)
       )
      )
      (if
       (i32.eqz
        (local.tee $4
         (i32.load offset=8
          (local.get $5)
         )
        )
       )
       (unreachable)
      )
      (call $snipvote.contract/snipvoting#recallVote
       (local.get $7)
       (local.get $3)
       (local.get $8)
       (local.get $4)
       (i32.load offset=12
        (local.get $5)
       )
       (i32.load8_u offset=16
        (local.get $5)
       )
      )
     )
    )
    (if
     (i64.eq
      (local.get $2)
      (i64.const -5003383982456921200)
     )
     (block
      (drop
       (call $snipvote.contract/declareWinnersAction#unpack
        (block (result i32)
         (call $~lib/rt/common/BLOCK#set:mmInfo
          (local.tee $3
           (call $~lib/rt/stub/__new
            (i32.const 8)
            (i32.const 122)
           )
          )
          (i32.const 2512)
         )
         (call $~lib/rt/common/OBJECT#set:gcInfo
          (local.get $3)
          (i32.const 2512)
         )
         (local.get $3)
        )
        (local.get $6)
       )
      )
      (call $snipvote.contract/snipvoting#recallResult
       (local.get $7)
       (i32.load
        (local.get $3)
       )
       (i32.load offset=4
        (local.get $3)
       )
      )
     )
    )
    (if
     (i64.eq
      (local.get $2)
      (i64.const -7704978544081764352)
     )
     (block
      (drop
       (call $snipvote.contract/withdrawCandidateAction#unpack
        (block (result i32)
         (call $~lib/rt/common/BLOCK#set:mmInfo
          (local.tee $3
           (call $~lib/rt/stub/__new
            (i32.const 8)
            (i32.const 123)
           )
          )
          (i32.const 0)
         )
         (call $~lib/rt/common/OBJECT#set:gcInfo
          (local.get $3)
          (i32.const 2512)
         )
         (local.tee $4
          (local.get $3)
         )
        )
        (local.get $6)
       )
      )
      (if
       (i32.eqz
        (local.tee $3
         (i32.load
          (local.get $3)
         )
        )
       )
       (unreachable)
      )
      (call $snipvote.contract/snipvoting#moderatorApply
       (local.get $7)
       (local.get $3)
       (i32.load offset=4
        (local.get $4)
       )
      )
     )
    )
    (if
     (i64.eq
      (local.get $2)
      (i64.const -7704609593472581632)
     )
     (block
      (drop
       (call $snipvote.contract/moderatorVoteAction#unpack
        (block (result i32)
         (call $~lib/rt/common/BLOCK#set:mmInfo
          (local.tee $3
           (call $~lib/rt/stub/__new
            (i32.const 12)
            (i32.const 124)
           )
          )
          (i32.const 0)
         )
         (call $~lib/rt/common/OBJECT#set:gcInfo
          (local.get $3)
          (i32.const 0)
         )
         (call $~lib/rt/common/OBJECT#set:gcInfo2
          (local.get $3)
          (i32.const 2512)
         )
         (local.tee $5
          (local.get $3)
         )
        )
        (local.get $6)
       )
      )
      (if
       (i32.eqz
        (local.tee $3
         (i32.load
          (local.get $3)
         )
        )
       )
       (unreachable)
      )
      (if
       (i32.eqz
        (local.tee $4
         (i32.load offset=4
          (local.get $5)
         )
        )
       )
       (unreachable)
      )
      (call $snipvote.contract/snipvoting#moderatorVote
       (local.get $7)
       (local.get $3)
       (local.get $4)
       (i32.load offset=8
        (local.get $5)
       )
      )
     )
    )
    (if
     (i64.eq
      (local.get $2)
      (i64.const -7704685753686032384)
     )
     (block
      (drop
       (call $snipvote.contract/initModRecallAction#unpack
        (block (result i32)
         (call $~lib/rt/common/BLOCK#set:mmInfo
          (local.tee $3
           (call $~lib/rt/stub/__new
            (i32.const 12)
            (i32.const 125)
           )
          )
          (i32.const 0)
         )
         (call $~lib/rt/common/OBJECT#set:gcInfo
          (local.get $3)
          (i32.const 2512)
         )
         (call $~lib/rt/common/OBJECT#set:gcInfo2
          (local.get $3)
          (i32.const 0)
         )
         (local.tee $4
          (local.get $3)
         )
        )
        (local.get $6)
       )
      )
      (if
       (i32.eqz
        (local.tee $3
         (i32.load
          (local.get $3)
         )
        )
       )
       (unreachable)
      )
      (local.set $5
       (i32.load offset=4
        (local.get $4)
       )
      )
      (if
       (i32.eqz
        (local.tee $4
         (i32.load offset=8
          (local.get $4)
         )
        )
       )
       (unreachable)
      )
      (call $snipvote.contract/snipvoting#initModRecall
       (local.get $7)
       (local.get $3)
       (local.get $5)
       (local.get $4)
      )
     )
    )
    (if
     (i64.eq
      (local.get $2)
      (i64.const -7704685753680448864)
     )
     (block
      (drop
       (call $tables/propVoter.table/PropVotersTable#unpack
        (block (result i32)
         (call $~lib/rt/common/BLOCK#set:mmInfo
          (local.tee $3
           (call $~lib/rt/stub/__new
            (i32.const 20)
            (i32.const 126)
           )
          )
          (i32.const 0)
         )
         (call $tables/elections.table/ElectionsTable#set:startTime
          (local.get $3)
          (i64.const 0)
         )
         (call $~lib/rt/common/OBJECT#set:rtSize
          (local.get $3)
          (i32.const 2512)
         )
         (local.tee $4
          (local.get $3)
         )
        )
        (local.get $6)
       )
      )
      (if
       (i32.eqz
        (local.tee $3
         (i32.load
          (local.get $3)
         )
        )
       )
       (unreachable)
      )
      (call $snipvote.contract/snipvoting#modRecallVote
       (local.get $7)
       (local.get $3)
       (i64.load offset=8
        (local.get $4)
       )
       (i32.load offset=16
        (local.get $4)
       )
      )
     )
    )
    (if
     (i64.eq
      (local.get $2)
      (i64.const -3075276122089661248)
     )
     (block
      (drop
       (call $snipvote.contract/updateConfigAction#unpack
        (block (result i32)
         (call $~lib/rt/common/BLOCK#set:mmInfo
          (local.tee $3
           (call $~lib/rt/stub/__new
            (i32.const 24)
            (i32.const 127)
           )
          )
          (i32.const 2512)
         )
         (call $tables/elections.table/ElectionsTable#set:startTime
          (local.get $3)
          (i64.const 0)
         )
         (call $tables/elections.table/ElectionsTable#set:endTime
          (local.get $3)
          (i64.const 0)
         )
         (local.get $3)
        )
        (local.get $6)
       )
      )
      (call $snipvote.contract/snipvoting#updateConfig
       (local.get $7)
       (i32.load
        (local.get $3)
       )
       (i64.load offset=8
        (local.get $3)
       )
       (i64.load offset=16
        (local.get $3)
       )
      )
     )
    )
    (if
     (i64.eq
      (local.get $2)
      (i64.const -4139046210408988672)
     )
     (block
      (drop
       (call $snipvote.contract/submitProposalAction#unpack
        (block (result i32)
         (call $~lib/rt/common/BLOCK#set:mmInfo
          (local.tee $3
           (call $~lib/rt/stub/__new
            (i32.const 32)
            (i32.const 128)
           )
          )
          (i32.const 0)
         )
         (call $~lib/rt/common/OBJECT#set:gcInfo
          (local.get $3)
          (i32.const 2512)
         )
         (call $~lib/rt/common/OBJECT#set:gcInfo2
          (local.get $3)
          (i32.const 2512)
         )
         (call $~lib/rt/common/OBJECT#set:rtId
          (local.get $3)
          (i32.const 2512)
         )
         (call $~lib/rt/common/OBJECT#set:rtSize
          (local.get $3)
          (i32.const 2512)
         )
         (call $tables/elections.table/ElectionsTable#set:registrationStartTime
          (local.get $3)
          (i64.const 0)
         )
         (local.tee $4
          (local.get $3)
         )
        )
        (local.get $6)
       )
      )
      (if
       (i32.eqz
        (local.tee $3
         (i32.load
          (local.get $3)
         )
        )
       )
       (unreachable)
      )
      (call $snipvote.contract/snipvoting#submitProposal
       (local.get $7)
       (local.get $3)
       (i32.load offset=4
        (local.get $4)
       )
       (i32.load offset=8
        (local.get $4)
       )
       (i32.load offset=12
        (local.get $4)
       )
       (i32.load offset=16
        (local.get $4)
       )
       (i64.load offset=24
        (local.get $4)
       )
      )
     )
    )
    (if
     (i64.eq
      (local.get $2)
      (i64.const -2507754169532678144)
     )
     (block
      (drop
       (call $tables/propVoter.table/PropVotersTable#unpack
        (block (result i32)
         (call $~lib/rt/common/BLOCK#set:mmInfo
          (local.tee $3
           (call $~lib/rt/stub/__new
            (i32.const 20)
            (i32.const 129)
           )
          )
          (i32.const 0)
         )
         (call $tables/elections.table/ElectionsTable#set:startTime
          (local.get $3)
          (i64.const 0)
         )
         (call $~lib/rt/common/OBJECT#set:rtSize
          (local.get $3)
          (i32.const 2512)
         )
         (local.tee $4
          (local.get $3)
         )
        )
        (local.get $6)
       )
      )
      (if
       (i32.eqz
        (local.tee $3
         (i32.load
          (local.get $3)
         )
        )
       )
       (unreachable)
      )
      (call $snipvote.contract/snipvoting#voteProposal
       (local.get $7)
       (local.get $3)
       (i64.load offset=8
        (local.get $4)
       )
       (i32.load offset=16
        (local.get $4)
       )
      )
     )
    )
    (if
     (i64.eq
      (local.get $2)
      (i64.const 4929617875652050944)
     )
     (block
      (drop
       (call $snipvote.contract/closeProposalAction#unpack
        (block (result i32)
         (call $~lib/as-chain/name/Name#set:N
          (local.tee $3
           (call $~lib/rt/stub/__new
            (i32.const 12)
            (i32.const 130)
           )
          )
          (i64.const 0)
         )
         (call $~lib/rt/common/OBJECT#set:gcInfo2
          (local.get $3)
          (i32.const 0)
         )
         (local.get $3)
        )
        (local.get $6)
       )
      )
      (local.set $0
       (i64.load
        (local.get $3)
       )
      )
      (if
       (i32.eqz
        (local.tee $3
         (i32.load offset=8
          (local.get $3)
         )
        )
       )
       (unreachable)
      )
      (call $snipvote.contract/snipvoting#closeProposal
       (local.get $7)
       (local.get $0)
       (local.get $3)
      )
     )
    )
   )
  )
 )
 (func $~lib/as-chain/crypto/Checksum#getSize@virtual (param $0 i32) (result i32)
  (if
   (i32.eq
    (i32.load
     (i32.sub
      (local.get $0)
      (i32.const 8)
     )
    )
    (i32.const 77)
   )
   (return
    (i32.const 32)
   )
  )
  (i32.const 0)
 )
 (func $~lib/as-chain/serializer/Packer#unpack@virtual (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (block $folding-inner3
   (block $folding-inner2
    (block $folding-inner1
     (block $folding-inner0
      (block $default
       (block $case40
        (block $case38
         (block $case37
          (block $case36
           (block $case35
            (block $case34
             (block $case33
              (block $case32
               (block $case31
                (block $case30
                 (block $case29
                  (block $case28
                   (block $case27
                    (block $case26
                     (block $case25
                      (block $case24
                       (block $case23
                        (block $case22
                         (block $case21
                          (block $case19
                           (block $case18
                            (block $case16
                             (block $case15
                              (block $case12
                               (block $case11
                                (block $case9
                                 (block $case7
                                  (if
                                   (i32.ne
                                    (local.tee $2
                                     (i32.load
                                      (i32.sub
                                       (local.get $0)
                                       (i32.const 8)
                                      )
                                     )
                                    )
                                    (i32.const 109)
                                   )
                                   (block
                                    (br_if $folding-inner0
                                     (i32.or
                                      (i32.or
                                       (i32.or
                                        (i32.eq
                                         (local.get $2)
                                         (i32.const 110)
                                        )
                                        (i32.eq
                                         (local.get $2)
                                         (i32.const 111)
                                        )
                                       )
                                       (i32.or
                                        (i32.eq
                                         (local.get $2)
                                         (i32.const 112)
                                        )
                                        (i32.eq
                                         (local.get $2)
                                         (i32.const 113)
                                        )
                                       )
                                      )
                                      (i32.or
                                       (i32.eq
                                        (local.get $2)
                                        (i32.const 114)
                                       )
                                       (i32.eq
                                        (local.get $2)
                                        (i32.const 115)
                                       )
                                      )
                                     )
                                    )
                                    (br_if $case7
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 116)
                                     )
                                    )
                                    (br_if $folding-inner1
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 117)
                                     )
                                    )
                                    (br_if $case9
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 118)
                                     )
                                    )
                                    (br_if $folding-inner2
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 119)
                                     )
                                    )
                                    (br_if $case11
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 120)
                                     )
                                    )
                                    (br_if $case12
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 121)
                                     )
                                    )
                                    (br_if $folding-inner2
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 122)
                                     )
                                    )
                                    (br_if $folding-inner1
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 123)
                                     )
                                    )
                                    (br_if $case15
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 124)
                                     )
                                    )
                                    (br_if $case16
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 125)
                                     )
                                    )
                                    (br_if $folding-inner3
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 126)
                                     )
                                    )
                                    (br_if $case18
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 127)
                                     )
                                    )
                                    (br_if $case19
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 128)
                                     )
                                    )
                                    (br_if $folding-inner3
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 129)
                                     )
                                    )
                                    (br_if $case21
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 130)
                                     )
                                    )
                                    (br_if $case22
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 83)
                                     )
                                    )
                                    (br_if $case23
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 82)
                                     )
                                    )
                                    (br_if $case24
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 5)
                                     )
                                    )
                                    (br_if $case25
                                     (i32.or
                                      (i32.eq
                                       (local.get $2)
                                       (i32.const 78)
                                      )
                                      (i32.eq
                                       (local.get $2)
                                       (i32.const 77)
                                      )
                                     )
                                    )
                                    (br_if $case26
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 71)
                                     )
                                    )
                                    (br_if $case27
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 10)
                                     )
                                    )
                                    (br_if $case28
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 19)
                                     )
                                    )
                                    (br_if $case29
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 23)
                                     )
                                    )
                                    (br_if $case30
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 27)
                                     )
                                    )
                                    (br_if $case31
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 31)
                                     )
                                    )
                                    (br_if $case32
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 35)
                                     )
                                    )
                                    (br_if $case33
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 39)
                                     )
                                    )
                                    (br_if $case34
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 43)
                                     )
                                    )
                                    (br_if $case35
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 47)
                                     )
                                    )
                                    (br_if $case36
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 51)
                                     )
                                    )
                                    (br_if $case37
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 55)
                                     )
                                    )
                                    (br_if $case38
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 59)
                                     )
                                    )
                                    (br_if $folding-inner3
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 63)
                                     )
                                    )
                                    (br_if $case40
                                     (i32.eq
                                      (local.get $2)
                                      (i32.const 67)
                                     )
                                    )
                                    (br $default)
                                   )
                                  )
                                  (return
                                   (call $snipvote.contract/createElectionAction#unpack
                                    (local.get $0)
                                    (local.get $1)
                                   )
                                  )
                                 )
                                 (return
                                  (call $snipvote.contract/registerCandidateAction#unpack
                                   (local.get $0)
                                   (local.get $1)
                                  )
                                 )
                                )
                                (return
                                 (call $snipvote.contract/voteAction#unpack
                                  (local.get $0)
                                  (local.get $1)
                                 )
                                )
                               )
                               (return
                                (call $snipvote.contract/createRecallVotingAction#unpack
                                 (local.get $0)
                                 (local.get $1)
                                )
                               )
                              )
                              (return
                               (call $snipvote.contract/recallVoteAction#unpack
                                (local.get $0)
                                (local.get $1)
                               )
                              )
                             )
                             (return
                              (call $snipvote.contract/moderatorVoteAction#unpack
                               (local.get $0)
                               (local.get $1)
                              )
                             )
                            )
                            (return
                             (call $snipvote.contract/initModRecallAction#unpack
                              (local.get $0)
                              (local.get $1)
                             )
                            )
                           )
                           (return
                            (call $snipvote.contract/updateConfigAction#unpack
                             (local.get $0)
                             (local.get $1)
                            )
                           )
                          )
                          (return
                           (call $snipvote.contract/submitProposalAction#unpack
                            (local.get $0)
                            (local.get $1)
                           )
                          )
                         )
                         (return
                          (call $snipvote.contract/closeProposalAction#unpack
                           (local.get $0)
                           (local.get $1)
                          )
                         )
                        )
                        (call $~lib/as-chain/name/Name#set:N
                         (local.get $0)
                         (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
                          (local.tee $0
                           (call $~lib/as-chain/serializer/Decoder#constructor
                            (local.get $1)
                           )
                          )
                         )
                        )
                        (return
                         (i32.load offset=4
                          (local.get $0)
                         )
                        )
                       )
                       (call $~lib/as-chain/serializer/Decoder#unpack
                        (local.tee $1
                         (call $~lib/as-chain/serializer/Decoder#constructor
                          (local.get $1)
                         )
                        )
                        (i32.load
                         (local.get $0)
                        )
                       )
                       (return
                        (i32.load offset=4
                         (local.get $1)
                        )
                       )
                      )
                      (call $~lib/as-chain/name/Name#set:N
                       (local.get $0)
                       (call $~lib/as-chain/serializer/Decoder#unpackNumber<u64>
                        (call $~lib/as-chain/serializer/Decoder#constructor
                         (local.get $1)
                        )
                       )
                      )
                      (return
                       (i32.const 8)
                      )
                     )
                     (local.set $1
                      (call $~lib/as-chain/serializer/Decoder#constructor
                       (local.get $1)
                      )
                     )
                     (drop
                      (call $~lib/as-chain/env/memcpy
                       (i32.load offset=4
                        (local.tee $3
                         (call $~lib/array/Array<u8>#constructor
                          (local.tee $2
                           (call $~lib/as-chain/crypto/Checksum#getSize@virtual
                            (local.get $0)
                           )
                          )
                         )
                        )
                       )
                       (i32.add
                        (i32.load offset=4
                         (i32.load
                          (local.get $1)
                         )
                        )
                        (i32.load offset=4
                         (local.get $1)
                        )
                       )
                       (local.get $2)
                      )
                     )
                     (call $~lib/as-chain/serializer/Decoder#incPos
                      (local.get $1)
                      (local.get $2)
                     )
                     (call $~lib/rt/common/BLOCK#set:mmInfo
                      (local.get $0)
                      (local.get $3)
                     )
                     (return
                      (i32.load offset=4
                       (local.get $1)
                      )
                     )
                    )
                    (return
                     (call $tables/account.table/AccountsTable#unpack
                      (local.get $0)
                      (local.get $1)
                     )
                    )
                   )
                   (return
                    (call $tables/elections.table/ElectionsTable#unpack
                     (local.get $0)
                     (local.get $1)
                    )
                   )
                  )
                  (return
                   (call $tables/candidates.table/CandidatesTable#unpack
                    (local.get $0)
                    (local.get $1)
                   )
                  )
                 )
                 (return
                  (call $tables/voters.table/VotersTable#unpack
                   (local.get $0)
                   (local.get $1)
                  )
                 )
                )
                (return
                 (call $tables/winners.table/WinnersTable#unpack
                  (local.get $0)
                  (local.get $1)
                 )
                )
               )
               (return
                (call $tables/recallVote.table/RecallVotesTable#unpack
                 (local.get $0)
                 (local.get $1)
                )
               )
              )
              (return
               (call $tables/recallVoters.table/RecallVotersTable#unpack
                (local.get $0)
                (local.get $1)
               )
              )
             )
             (return
              (call $tables/moderatorCand.table/ModeratorCandTable#unpack
               (local.get $0)
               (local.get $1)
              )
             )
            )
            (return
             (call $tables/moderators.table/ModeratorsTable#unpack
              (local.get $0)
              (local.get $1)
             )
            )
           )
           (return
            (call $tables/moderatorVoter.table/ModeratorVotersTable#unpack
             (local.get $0)
             (local.get $1)
            )
           )
          )
          (return
           (call $tables/modRecall.table/ModRecallTable#unpack
            (local.get $0)
            (local.get $1)
           )
          )
         )
         (return
          (call $tables/modrecallvoter.table/ModRecallVotersTable#unpack
           (local.get $0)
           (local.get $1)
          )
         )
        )
        (return
         (call $tables/proposals.table/ProposalsTable#unpack
          (local.get $0)
          (local.get $1)
         )
        )
       )
       (return
        (call $tables/propConfig.table/PropConfigTable#unpack
         (local.get $0)
         (local.get $1)
        )
       )
      )
      (unreachable)
     )
     (return
      (call $snipvote.contract/clearAllTablesAction#unpack
       (local.get $0)
       (local.get $1)
      )
     )
    )
    (return
     (call $snipvote.contract/withdrawCandidateAction#unpack
      (local.get $0)
      (local.get $1)
     )
    )
   )
   (return
    (call $snipvote.contract/declareWinnersAction#unpack
     (local.get $0)
     (local.get $1)
    )
   )
  )
  (call $tables/propVoter.table/PropVotersTable#unpack
   (local.get $0)
   (local.get $1)
  )
 )
 (func $snipvote.contract/withdrawCandidateAction#pack (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $2
   (call $~lib/as-chain/serializer/Encoder#constructor
    (block (result i32)
     (local.set $1
      (local.get $0)
     )
     (if
      (i32.eqz
       (i32.load
        (local.get $0)
       )
      )
      (unreachable)
     )
     (i32.add
      (call $~lib/as-chain/utils/Utils.calcPackedStringLength
       (i32.load offset=4
        (local.get $1)
       )
      )
      (i32.const 8)
     )
    )
   )
  )
  (if
   (i32.eqz
    (local.tee $1
     (i32.load
      (local.get $0)
     )
    )
   )
   (unreachable)
  )
  (call $~lib/as-chain/serializer/Encoder#pack
   (local.get $2)
   (local.get $1)
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $2)
   (i32.load offset=4
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#getBytes
   (local.get $2)
  )
 )
 (func $snipvote.contract/declareWinnersAction#pack (param $0 i32) (result i32)
  (local $1 i32)
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.tee $1
    (call $~lib/as-chain/serializer/Encoder#constructor
     (i32.add
      (call $~lib/as-chain/utils/Utils.calcPackedStringLength
       (i32.load
        (local.get $0)
       )
      )
      (call $~lib/as-chain/utils/Utils.calcPackedStringLength
       (i32.load offset=4
        (local.get $0)
       )
      )
     )
    )
   )
   (i32.load
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $1)
   (i32.load offset=4
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#getBytes
   (local.get $1)
  )
 )
 (func $snipvote.contract/modRecallVoteAction#pack (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $2
   (call $~lib/as-chain/serializer/Encoder#constructor
    (block (result i32)
     (local.set $1
      (local.get $0)
     )
     (if
      (i32.eqz
       (i32.load
        (local.get $0)
       )
      )
      (unreachable)
     )
     (i32.add
      (call $~lib/as-chain/utils/Utils.calcPackedStringLength
       (i32.load offset=16
        (local.get $1)
       )
      )
      (i32.const 16)
     )
    )
   )
  )
  (if
   (i32.eqz
    (local.tee $1
     (i32.load
      (local.get $0)
     )
    )
   )
   (unreachable)
  )
  (call $~lib/as-chain/serializer/Encoder#pack
   (local.get $2)
   (local.get $1)
  )
  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
   (local.get $2)
   (i64.load offset=8
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#packString
   (local.get $2)
   (i32.load offset=16
    (local.get $0)
   )
  )
  (call $~lib/as-chain/serializer/Encoder#getBytes
   (local.get $2)
  )
 )
 (func $~lib/as-chain/serializer/Packer#pack@virtual (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (block $folding-inner1
   (block $folding-inner0
    (block $default
     (block $case40
      (block $case39
       (block $case38
        (block $case37
         (block $case36
          (block $case35
           (block $case34
            (block $case33
             (block $case32
              (block $case31
               (block $case30
                (block $case29
                 (block $case28
                  (block $case27
                   (block $case26
                    (block $case25
                     (block $case24
                      (block $case23
                       (block $case22
                        (block $case21
                         (block $case20
                          (block $case19
                           (block $case18
                            (block $case17
                             (block $case16
                              (block $case15
                               (block $case14
                                (block $case13
                                 (block $case12
                                  (block $case11
                                   (block $case10
                                    (block $case9
                                     (block $case8
                                      (block $case7
                                       (if
                                        (i32.ne
                                         (local.tee $1
                                          (i32.load
                                           (i32.sub
                                            (local.get $0)
                                            (i32.const 8)
                                           )
                                          )
                                         )
                                         (i32.const 109)
                                        )
                                        (block
                                         (br_if $folding-inner0
                                          (i32.or
                                           (i32.or
                                            (i32.or
                                             (i32.eq
                                              (local.get $1)
                                              (i32.const 110)
                                             )
                                             (i32.eq
                                              (local.get $1)
                                              (i32.const 111)
                                             )
                                            )
                                            (i32.or
                                             (i32.eq
                                              (local.get $1)
                                              (i32.const 112)
                                             )
                                             (i32.eq
                                              (local.get $1)
                                              (i32.const 113)
                                             )
                                            )
                                           )
                                           (i32.or
                                            (i32.eq
                                             (local.get $1)
                                             (i32.const 114)
                                            )
                                            (i32.eq
                                             (local.get $1)
                                             (i32.const 115)
                                            )
                                           )
                                          )
                                         )
                                         (br_if $case7
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 116)
                                          )
                                         )
                                         (br_if $case8
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 117)
                                          )
                                         )
                                         (br_if $case9
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 118)
                                          )
                                         )
                                         (br_if $case10
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 119)
                                          )
                                         )
                                         (br_if $case11
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 120)
                                          )
                                         )
                                         (br_if $case12
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 121)
                                          )
                                         )
                                         (br_if $case13
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 122)
                                          )
                                         )
                                         (br_if $case14
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 123)
                                          )
                                         )
                                         (br_if $case15
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 124)
                                          )
                                         )
                                         (br_if $case16
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 125)
                                          )
                                         )
                                         (br_if $case17
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 126)
                                          )
                                         )
                                         (br_if $case18
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 127)
                                          )
                                         )
                                         (br_if $case19
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 128)
                                          )
                                         )
                                         (br_if $case20
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 129)
                                          )
                                         )
                                         (br_if $case21
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 130)
                                          )
                                         )
                                         (br_if $case22
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 83)
                                          )
                                         )
                                         (br_if $case23
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 82)
                                          )
                                         )
                                         (br_if $case24
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 5)
                                          )
                                         )
                                         (br_if $case25
                                          (i32.or
                                           (i32.eq
                                            (local.get $1)
                                            (i32.const 78)
                                           )
                                           (i32.eq
                                            (local.get $1)
                                            (i32.const 77)
                                           )
                                          )
                                         )
                                         (br_if $case26
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 71)
                                          )
                                         )
                                         (br_if $case27
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 10)
                                          )
                                         )
                                         (br_if $case28
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 19)
                                          )
                                         )
                                         (br_if $case29
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 23)
                                          )
                                         )
                                         (br_if $case30
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 27)
                                          )
                                         )
                                         (br_if $case31
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 31)
                                          )
                                         )
                                         (br_if $case32
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 35)
                                          )
                                         )
                                         (br_if $case33
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 39)
                                          )
                                         )
                                         (br_if $case34
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 43)
                                          )
                                         )
                                         (br_if $case35
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 47)
                                          )
                                         )
                                         (br_if $case36
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 51)
                                          )
                                         )
                                         (br_if $case37
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 55)
                                          )
                                         )
                                         (br_if $case38
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 59)
                                          )
                                         )
                                         (br_if $case39
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 63)
                                          )
                                         )
                                         (br_if $case40
                                          (i32.eq
                                           (local.get $1)
                                           (i32.const 67)
                                          )
                                         )
                                         (br $default)
                                        )
                                       )
                                       (call $~lib/as-chain/serializer/Encoder#packString
                                        (local.tee $1
                                         (call $~lib/as-chain/serializer/Encoder#constructor
                                          (i32.add
                                           (call $~lib/as-chain/utils/Utils.calcPackedStringLength
                                            (i32.load
                                             (local.get $0)
                                            )
                                           )
                                           (i32.const 48)
                                          )
                                         )
                                        )
                                        (i32.load
                                         (local.get $0)
                                        )
                                       )
                                       (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
                                        (local.get $1)
                                        (i64.load offset=8
                                         (local.get $0)
                                        )
                                       )
                                       (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
                                        (local.get $1)
                                        (i64.load offset=16
                                         (local.get $0)
                                        )
                                       )
                                       (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
                                        (local.get $1)
                                        (i64.load offset=24
                                         (local.get $0)
                                        )
                                       )
                                       (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
                                        (local.get $1)
                                        (i64.load offset=32
                                         (local.get $0)
                                        )
                                       )
                                       (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
                                        (local.get $1)
                                        (i64.load offset=40
                                         (local.get $0)
                                        )
                                       )
                                       (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
                                        (local.get $1)
                                        (i64.load offset=48
                                         (local.get $0)
                                        )
                                       )
                                       (br $folding-inner1)
                                      )
                                      (if
                                       (i32.eqz
                                        (i32.load
                                         (local.get $0)
                                        )
                                       )
                                       (unreachable)
                                      )
                                      (local.set $1
                                       (call $~lib/as-chain/serializer/Encoder#constructor
                                        (i32.add
                                         (i32.add
                                          (call $~lib/as-chain/utils/Utils.calcPackedStringLength
                                           (i32.load offset=4
                                            (local.get $0)
                                           )
                                          )
                                          (i32.const 8)
                                         )
                                         (call $~lib/as-chain/utils/Utils.calcPackedStringLength
                                          (i32.load offset=8
                                           (local.get $0)
                                          )
                                         )
                                        )
                                       )
                                      )
                                      (if
                                       (i32.eqz
                                        (local.tee $2
                                         (i32.load
                                          (local.get $0)
                                         )
                                        )
                                       )
                                       (unreachable)
                                      )
                                      (call $~lib/as-chain/serializer/Encoder#pack
                                       (local.get $1)
                                       (local.get $2)
                                      )
                                      (call $~lib/as-chain/serializer/Encoder#packString
                                       (local.get $1)
                                       (i32.load offset=4
                                        (local.get $0)
                                       )
                                      )
                                      (call $~lib/as-chain/serializer/Encoder#packString
                                       (local.get $1)
                                       (i32.load offset=8
                                        (local.get $0)
                                       )
                                      )
                                      (br $folding-inner1)
                                     )
                                     (return
                                      (call $snipvote.contract/withdrawCandidateAction#pack
                                       (local.get $0)
                                      )
                                     )
                                    )
                                    (if
                                     (i32.eqz
                                      (i32.load
                                       (local.get $0)
                                      )
                                     )
                                     (unreachable)
                                    )
                                    (local.set $1
                                     (i32.add
                                      (call $~lib/as-chain/utils/Utils.calcPackedStringLength
                                       (i32.load offset=4
                                        (local.get $0)
                                       )
                                      )
                                      (i32.const 8)
                                     )
                                    )
                                    (if
                                     (i32.eqz
                                      (i32.load offset=8
                                       (local.get $0)
                                      )
                                     )
                                     (unreachable)
                                    )
                                    (local.set $1
                                     (call $~lib/as-chain/serializer/Encoder#constructor
                                      (i32.add
                                       (call $~lib/as-chain/utils/Utils.calcPackedStringLength
                                        (i32.load offset=12
                                         (local.get $0)
                                        )
                                       )
                                       (i32.add
                                        (local.get $1)
                                        (i32.const 8)
                                       )
                                      )
                                     )
                                    )
                                    (if
                                     (i32.eqz
                                      (local.tee $2
                                       (i32.load
                                        (local.get $0)
                                       )
                                      )
                                     )
                                     (unreachable)
                                    )
                                    (call $~lib/as-chain/serializer/Encoder#pack
                                     (local.get $1)
                                     (local.get $2)
                                    )
                                    (call $~lib/as-chain/serializer/Encoder#packString
                                     (local.get $1)
                                     (i32.load offset=4
                                      (local.get $0)
                                     )
                                    )
                                    (if
                                     (i32.eqz
                                      (local.tee $2
                                       (i32.load offset=8
                                        (local.get $0)
                                       )
                                      )
                                     )
                                     (unreachable)
                                    )
                                    (call $~lib/as-chain/serializer/Encoder#pack
                                     (local.get $1)
                                     (local.get $2)
                                    )
                                    (call $~lib/as-chain/serializer/Encoder#packString
                                     (local.get $1)
                                     (i32.load offset=12
                                      (local.get $0)
                                     )
                                    )
                                    (return
                                     (call $~lib/as-chain/serializer/Encoder#getBytes
                                      (local.get $1)
                                     )
                                    )
                                   )
                                   (return
                                    (call $snipvote.contract/declareWinnersAction#pack
                                     (local.get $0)
                                    )
                                   )
                                  )
                                  (if
                                   (i32.eqz
                                    (i32.load
                                     (local.get $0)
                                    )
                                   )
                                   (unreachable)
                                  )
                                  (local.set $1
                                   (call $~lib/as-chain/serializer/Encoder#constructor
                                    (i32.add
                                     (i32.add
                                      (i32.add
                                       (call $~lib/as-chain/utils/Utils.calcPackedStringLength
                                        (i32.load offset=4
                                         (local.get $0)
                                        )
                                       )
                                       (call $~lib/as-chain/utils/Utils.calcPackedStringLength
                                        (i32.load offset=8
                                         (local.get $0)
                                        )
                                       )
                                      )
                                      (i32.const 24)
                                     )
                                     (call $~lib/as-chain/utils/Utils.calcPackedStringLength
                                      (i32.load offset=32
                                       (local.get $0)
                                      )
                                     )
                                    )
                                   )
                                  )
                                  (if
                                   (i32.eqz
                                    (local.tee $2
                                     (i32.load
                                      (local.get $0)
                                     )
                                    )
                                   )
                                   (unreachable)
                                  )
                                  (call $~lib/as-chain/serializer/Encoder#pack
                                   (local.get $1)
                                   (local.get $2)
                                  )
                                  (call $~lib/as-chain/serializer/Encoder#packString
                                   (local.get $1)
                                   (i32.load offset=4
                                    (local.get $0)
                                   )
                                  )
                                  (call $~lib/as-chain/serializer/Encoder#packString
                                   (local.get $1)
                                   (i32.load offset=8
                                    (local.get $0)
                                   )
                                  )
                                  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
                                   (local.get $1)
                                   (i64.load offset=16
                                    (local.get $0)
                                   )
                                  )
                                  (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
                                   (local.get $1)
                                   (i64.load offset=24
                                    (local.get $0)
                                   )
                                  )
                                  (call $~lib/as-chain/serializer/Encoder#packString
                                   (local.get $1)
                                   (i32.load offset=32
                                    (local.get $0)
                                   )
                                  )
                                  (br $folding-inner1)
                                 )
                                 (if
                                  (i32.eqz
                                   (i32.load
                                    (local.get $0)
                                   )
                                  )
                                  (unreachable)
                                 )
                                 (local.set $1
                                  (i32.add
                                   (call $~lib/as-chain/utils/Utils.calcPackedStringLength
                                    (i32.load offset=4
                                     (local.get $0)
                                    )
                                   )
                                   (i32.const 8)
                                  )
                                 )
                                 (if
                                  (i32.eqz
                                   (i32.load offset=8
                                    (local.get $0)
                                   )
                                  )
                                  (unreachable)
                                 )
                                 (local.set $1
                                  (call $~lib/as-chain/serializer/Encoder#constructor
                                   (i32.add
                                    (i32.add
                                     (call $~lib/as-chain/utils/Utils.calcPackedStringLength
                                      (i32.load offset=12
                                       (local.get $0)
                                      )
                                     )
                                     (local.get $1)
                                    )
                                    (i32.const 9)
                                   )
                                  )
                                 )
                                 (if
                                  (i32.eqz
                                   (local.tee $2
                                    (i32.load
                                     (local.get $0)
                                    )
                                   )
                                  )
                                  (unreachable)
                                 )
                                 (call $~lib/as-chain/serializer/Encoder#pack
                                  (local.get $1)
                                  (local.get $2)
                                 )
                                 (call $~lib/as-chain/serializer/Encoder#packString
                                  (local.get $1)
                                  (i32.load offset=4
                                   (local.get $0)
                                  )
                                 )
                                 (if
                                  (i32.eqz
                                   (local.tee $2
                                    (i32.load offset=8
                                     (local.get $0)
                                    )
                                   )
                                  )
                                  (unreachable)
                                 )
                                 (call $~lib/as-chain/serializer/Encoder#pack
                                  (local.get $1)
                                  (local.get $2)
                                 )
                                 (call $~lib/as-chain/serializer/Encoder#packString
                                  (local.get $1)
                                  (i32.load offset=12
                                   (local.get $0)
                                  )
                                 )
                                 (call $~lib/as-chain/serializer/Encoder#packNumber<u8>
                                  (local.get $1)
                                  (i32.load8_u offset=16
                                   (local.get $0)
                                  )
                                 )
                                 (return
                                  (call $~lib/as-chain/serializer/Encoder#getBytes
                                   (local.get $1)
                                  )
                                 )
                                )
                                (return
                                 (call $snipvote.contract/declareWinnersAction#pack
                                  (local.get $0)
                                 )
                                )
                               )
                               (return
                                (call $snipvote.contract/withdrawCandidateAction#pack
                                 (local.get $0)
                                )
                               )
                              )
                              (if
                               (i32.eqz
                                (i32.load
                                 (local.get $0)
                                )
                               )
                               (unreachable)
                              )
                              (if
                               (i32.eqz
                                (i32.load offset=4
                                 (local.get $0)
                                )
                               )
                               (unreachable)
                              )
                              (local.set $1
                               (call $~lib/as-chain/serializer/Encoder#constructor
                                (i32.add
                                 (call $~lib/as-chain/utils/Utils.calcPackedStringLength
                                  (i32.load offset=8
                                   (local.get $0)
                                  )
                                 )
                                 (i32.const 16)
                                )
                               )
                              )
                              (if
                               (i32.eqz
                                (local.tee $2
                                 (i32.load
                                  (local.get $0)
                                 )
                                )
                               )
                               (unreachable)
                              )
                              (call $~lib/as-chain/serializer/Encoder#pack
                               (local.get $1)
                               (local.get $2)
                              )
                              (if
                               (i32.eqz
                                (local.tee $2
                                 (i32.load offset=4
                                  (local.get $0)
                                 )
                                )
                               )
                               (unreachable)
                              )
                              (call $~lib/as-chain/serializer/Encoder#pack
                               (local.get $1)
                               (local.get $2)
                              )
                              (call $~lib/as-chain/serializer/Encoder#packString
                               (local.get $1)
                               (i32.load offset=8
                                (local.get $0)
                               )
                              )
                              (br $folding-inner1)
                             )
                             (if
                              (i32.eqz
                               (i32.load
                                (local.get $0)
                               )
                              )
                              (unreachable)
                             )
                             (local.set $1
                              (i32.add
                               (call $~lib/as-chain/utils/Utils.calcPackedStringLength
                                (i32.load offset=4
                                 (local.get $0)
                                )
                               )
                               (i32.const 8)
                              )
                             )
                             (if
                              (i32.eqz
                               (i32.load offset=8
                                (local.get $0)
                               )
                              )
                              (unreachable)
                             )
                             (local.set $1
                              (call $~lib/as-chain/serializer/Encoder#constructor
                               (i32.add
                                (local.get $1)
                                (i32.const 8)
                               )
                              )
                             )
                             (if
                              (i32.eqz
                               (local.tee $2
                                (i32.load
                                 (local.get $0)
                                )
                               )
                              )
                              (unreachable)
                             )
                             (call $~lib/as-chain/serializer/Encoder#pack
                              (local.get $1)
                              (local.get $2)
                             )
                             (call $~lib/as-chain/serializer/Encoder#packString
                              (local.get $1)
                              (i32.load offset=4
                               (local.get $0)
                              )
                             )
                             (if
                              (i32.eqz
                               (local.tee $0
                                (i32.load offset=8
                                 (local.get $0)
                                )
                               )
                              )
                              (unreachable)
                             )
                             (call $~lib/as-chain/serializer/Encoder#pack
                              (local.get $1)
                              (local.get $0)
                             )
                             (br $folding-inner1)
                            )
                            (return
                             (call $snipvote.contract/modRecallVoteAction#pack
                              (local.get $0)
                             )
                            )
                           )
                           (call $~lib/as-chain/serializer/Encoder#packString
                            (local.tee $1
                             (call $~lib/as-chain/serializer/Encoder#constructor
                              (i32.add
                               (call $~lib/as-chain/utils/Utils.calcPackedStringLength
                                (i32.load
                                 (local.get $0)
                                )
                               )
                               (i32.const 16)
                              )
                             )
                            )
                            (i32.load
                             (local.get $0)
                            )
                           )
                           (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
                            (local.get $1)
                            (i64.load offset=8
                             (local.get $0)
                            )
                           )
                           (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
                            (local.get $1)
                            (i64.load offset=16
                             (local.get $0)
                            )
                           )
                           (br $folding-inner1)
                          )
                          (if
                           (i32.eqz
                            (i32.load
                             (local.get $0)
                            )
                           )
                           (unreachable)
                          )
                          (local.set $1
                           (call $~lib/as-chain/serializer/Encoder#constructor
                            (i32.add
                             (i32.add
                              (i32.add
                               (i32.add
                                (call $~lib/as-chain/utils/Utils.calcPackedStringLength
                                 (i32.load offset=4
                                  (local.get $0)
                                 )
                                )
                                (call $~lib/as-chain/utils/Utils.calcPackedStringLength
                                 (i32.load offset=8
                                  (local.get $0)
                                 )
                                )
                               )
                               (call $~lib/as-chain/utils/Utils.calcPackedStringLength
                                (i32.load offset=12
                                 (local.get $0)
                                )
                               )
                              )
                              (call $~lib/as-chain/utils/Utils.calcPackedStringLength
                               (i32.load offset=16
                                (local.get $0)
                               )
                              )
                             )
                             (i32.const 16)
                            )
                           )
                          )
                          (if
                           (i32.eqz
                            (local.tee $2
                             (i32.load
                              (local.get $0)
                             )
                            )
                           )
                           (unreachable)
                          )
                          (call $~lib/as-chain/serializer/Encoder#pack
                           (local.get $1)
                           (local.get $2)
                          )
                          (call $~lib/as-chain/serializer/Encoder#packString
                           (local.get $1)
                           (i32.load offset=4
                            (local.get $0)
                           )
                          )
                          (call $~lib/as-chain/serializer/Encoder#packString
                           (local.get $1)
                           (i32.load offset=8
                            (local.get $0)
                           )
                          )
                          (call $~lib/as-chain/serializer/Encoder#packString
                           (local.get $1)
                           (i32.load offset=12
                            (local.get $0)
                           )
                          )
                          (call $~lib/as-chain/serializer/Encoder#packString
                           (local.get $1)
                           (i32.load offset=16
                            (local.get $0)
                           )
                          )
                          (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
                           (local.get $1)
                           (i64.load offset=24
                            (local.get $0)
                           )
                          )
                          (return
                           (call $~lib/as-chain/serializer/Encoder#getBytes
                            (local.get $1)
                           )
                          )
                         )
                         (return
                          (call $snipvote.contract/modRecallVoteAction#pack
                           (local.get $0)
                          )
                         )
                        )
                        (if
                         (i32.eqz
                          (i32.load offset=8
                           (local.get $0)
                          )
                         )
                         (unreachable)
                        )
                        (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
                         (local.tee $1
                          (call $~lib/as-chain/serializer/Encoder#constructor
                           (i32.const 16)
                          )
                         )
                         (i64.load
                          (local.get $0)
                         )
                        )
                        (if
                         (i32.eqz
                          (local.tee $0
                           (i32.load offset=8
                            (local.get $0)
                           )
                          )
                         )
                         (unreachable)
                        )
                        (call $~lib/as-chain/serializer/Encoder#pack
                         (local.get $1)
                         (local.get $0)
                        )
                        (br $folding-inner1)
                       )
                       (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
                        (local.tee $1
                         (call $~lib/as-chain/serializer/Encoder#constructor
                          (i32.const 8)
                         )
                        )
                        (i64.load
                         (local.get $0)
                        )
                       )
                       (br $folding-inner1)
                      )
                      (call $~lib/as-chain/serializer/Encoder#pack
                       (local.tee $1
                        (call $~lib/as-chain/serializer/Encoder#constructor
                         (i32.const 8)
                        )
                       )
                       (i32.load
                        (local.get $0)
                       )
                      )
                      (br $folding-inner1)
                     )
                     (i64.store
                      (i32.load offset=4
                       (local.tee $1
                        (call $~lib/array/Array<u8>#constructor
                         (i32.const 8)
                        )
                       )
                      )
                      (i64.load
                       (local.get $0)
                      )
                     )
                     (return
                      (local.get $1)
                     )
                    )
                    (return
                     (call $~lib/array/Array<u8>#slice
                      (i32.load
                       (local.get $0)
                      )
                      (i32.const 0)
                      (i32.const 2147483647)
                     )
                    )
                   )
                   (drop
                    (i32.load
                     (local.get $0)
                    )
                   )
                   (call $~lib/as-chain/serializer/Encoder#pack
                    (local.tee $1
                     (call $~lib/as-chain/serializer/Encoder#constructor
                      (i32.const 33)
                     )
                    )
                    (i32.load
                     (local.get $0)
                    )
                   )
                   (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
                    (local.get $1)
                    (i64.load offset=8
                     (local.get $0)
                    )
                   )
                   (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
                    (local.get $1)
                    (i64.load offset=16
                     (local.get $0)
                    )
                   )
                   (call $~lib/as-chain/serializer/Encoder#packNumber<u8>
                    (local.get $1)
                    (i32.load8_u offset=24
                     (local.get $0)
                    )
                   )
                   (call $~lib/as-chain/serializer/Encoder#packNumber<u64>
                    (local.get $1)
                    (i64.load offset=32
                     (local.get $0)
                    )
                   )
                   (br $folding-inner1)
                  )
                  (return
                   (call $tables/elections.table/ElectionsTable#pack
                    (local.get $0)
                   )
                  )
                 )
                 (return
                  (call $tables/candidates.table/CandidatesTable#pack
                   (local.get $0)
                  )
                 )
                )
                (return
                 (call $tables/voters.table/VotersTable#pack
                  (local.get $0)
                 )
                )
               )
               (return
                (call $tables/winners.table/WinnersTable#pack
                 (local.get $0)
                )
               )
              )
              (return
               (call $tables/recallVote.table/RecallVotesTable#pack
                (local.get $0)
               )
              )
             )
             (return
              (call $tables/recallVoters.table/RecallVotersTable#pack
               (local.get $0)
              )
             )
            )
            (return
             (call $tables/moderatorCand.table/ModeratorCandTable#pack
              (local.get $0)
             )
            )
           )
           (return
            (call $tables/moderators.table/ModeratorsTable#pack
             (local.get $0)
            )
           )
          )
          (return
           (call $tables/moderatorVoter.table/ModeratorVotersTable#pack
            (local.get $0)
           )
          )
         )
         (return
          (call $tables/modRecall.table/ModRecallTable#pack
           (local.get $0)
          )
         )
        )
        (return
         (call $tables/modrecallvoter.table/ModRecallVotersTable#pack
          (local.get $0)
         )
        )
       )
       (return
        (call $tables/proposals.table/ProposalsTable#pack
         (local.get $0)
        )
       )
      )
      (return
       (call $tables/propVoter.table/PropVotersTable#pack
        (local.get $0)
       )
      )
     )
     (return
      (call $tables/propConfig.table/PropConfigTable#pack
       (local.get $0)
      )
     )
    )
    (unreachable)
   )
   (return
    (call $~lib/as-chain/serializer/Encoder#getBytes
     (call $~lib/as-chain/serializer/Encoder#constructor
      (i32.const 0)
     )
    )
   )
  )
  (call $~lib/as-chain/serializer/Encoder#getBytes
   (local.get $1)
  )
 )
 (func $~lib/array/Array<u64>#__get (param $0 i32) (result i64)
  (if
   (i32.eqz
    (i32.load offset=12
     (local.get $0)
    )
   )
   (unreachable)
  )
  (i64.load
   (i32.load offset=4
    (local.get $0)
   )
  )
 )
 (func $~lib/as-chain/idxdb/SecondaryIterator#constructor (param $0 i32) (param $1 i64) (param $2 i32) (result i32)
  (local $3 i32)
  (call $~lib/rt/common/BLOCK#set:mmInfo
   (local.tee $3
    (call $~lib/rt/stub/__new
     (i32.const 20)
     (i32.const 87)
    )
   )
   (local.get $0)
  )
  (call $tables/elections.table/ElectionsTable#set:startTime
   (local.get $3)
   (local.get $1)
  )
  (call $~lib/rt/common/OBJECT#set:rtSize
   (local.get $3)
   (local.get $2)
  )
  (local.get $3)
 )
 (func $~lib/as-chain/idxdb/IDXDB#storeEx@virtual (param $0 i32) (param $1 i64) (param $2 i32) (param $3 i64)
  (local $4 i64)
  (if
   (i32.eq
    (i32.load
     (i32.sub
      (local.get $0)
      (i32.const 8)
     )
    )
    (i32.const 76)
   )
   (block
    (call $~lib/as-chain/system/assert
     (i32.eqz
      (i32.load
       (local.get $2)
      )
     )
     (i32.const 20432)
    )
    (local.set $4
     (call $~lib/array/Array<u64>#__get
      (i32.load offset=4
       (local.get $2)
      )
     )
    )
    (i64.store
     (local.tee $2
      (call $~lib/rt/stub/__alloc
       (i32.const 8)
      )
     )
     (local.get $4)
    )
    (drop
     (call $~lib/as-chain/idxdb/SecondaryIterator#constructor
      (call $~lib/as-chain/env/db_idx64_store
       (i64.load offset=8
        (local.get $0)
       )
       (i64.load offset=16
        (local.get $0)
       )
       (local.get $3)
       (local.get $1)
       (local.get $2)
      )
      (local.get $1)
      (i32.load offset=24
       (local.get $0)
      )
     )
    )
    (return)
   )
  )
  (unreachable)
 )
 (func $~lib/as-chain/idxdb/IDXDB#findPrimaryEx@virtual (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (local $3 i32)
  (if
   (i32.eq
    (i32.load
     (i32.sub
      (local.get $0)
      (i32.const 8)
     )
    )
    (i32.const 76)
   )
   (block
    (local.set $2
     (call $~lib/rt/stub/__alloc
      (i32.const 8)
     )
    )
    (local.set $3
     (call $~lib/as-chain/idxdb/SecondaryIterator#constructor
      (call $~lib/as-chain/env/db_idx64_find_primary
       (i64.load
        (local.get $0)
       )
       (i64.load offset=8
        (local.get $0)
       )
       (i64.load offset=16
        (local.get $0)
       )
       (local.get $2)
       (local.get $1)
      )
      (local.get $1)
      (i32.load offset=24
       (local.get $0)
      )
     )
    )
    (call $~lib/array/Array<u64>#__set
     (local.tee $0
      (call $~lib/array/Array<u64>#constructor
       (i32.const 1)
      )
     )
     (i64.load
      (local.get $2)
     )
    )
    (local.set $2
     (call $~lib/as-chain/idxdb/SecondaryValue#constructor
      (local.get $0)
     )
    )
    (call $~lib/rt/common/BLOCK#set:mmInfo
     (local.tee $0
      (call $~lib/rt/stub/__new
       (i32.const 8)
       (i32.const 88)
      )
     )
     (local.get $3)
    )
    (call $~lib/rt/common/OBJECT#set:gcInfo
     (local.get $0)
     (local.get $2)
    )
    (return
     (local.get $0)
    )
   )
  )
  (unreachable)
 )
 (func $~lib/as-chain/idxdb/IDXDB#remove@virtual (param $0 i32) (param $1 i32)
  (if
   (i32.eq
    (i32.load
     (i32.sub
      (local.get $0)
      (i32.const 8)
     )
    )
    (i32.const 76)
   )
   (block
    (call $~lib/as-chain/env/db_idx64_remove
     (i32.load
      (local.get $1)
     )
    )
    (return)
   )
  )
  (unreachable)
 )
 (func $~lib/as-chain/idxdb/IDXDB#updateEx@virtual (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i64)
  (local $4 i64)
  (if
   (i32.eq
    (i32.load
     (i32.sub
      (local.get $0)
      (i32.const 8)
     )
    )
    (i32.const 76)
   )
   (block
    (call $~lib/as-chain/system/assert
     (i32.eqz
      (i32.load
       (local.get $2)
      )
     )
     (i32.const 20496)
    )
    (local.set $4
     (call $~lib/array/Array<u64>#__get
      (i32.load offset=4
       (local.get $2)
      )
     )
    )
    (i64.store
     (local.tee $0
      (call $~lib/rt/stub/__alloc
       (i32.const 8)
      )
     )
     (local.get $4)
    )
    (call $~lib/as-chain/env/db_idx64_update
     (i32.load
      (local.get $1)
     )
     (local.get $3)
     (local.get $0)
    )
    (return)
   )
  )
  (unreachable)
 )
 (func $~start
  (local $0 i32)
  (global.set $~lib/rt/stub/offset
   (i32.const 20540)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $0
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $0)
   (i64.const 0)
  )
  (global.set $~lib/as-chain/name/EMPTY_NAME
   (local.get $0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.tee $0
    (call $~lib/rt/stub/__new
     (i32.const 8)
     (i32.const 5)
    )
   )
   (i64.const 0)
  )
  (call $~lib/as-chain/name/Name#set:N
   (local.get $0)
   (i64.const 0)
  )
 )
)
